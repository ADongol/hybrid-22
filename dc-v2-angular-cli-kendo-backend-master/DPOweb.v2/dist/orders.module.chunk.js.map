{"version":3,"sources":["C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form-quote-items/order-form-quote-items.component.html","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form-quote-items/order-form-quote-items.component.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form/order-form.component.css","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form/order-form.component.html","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form/order-form.component.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-item-products/order-item-products.component.css","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-item-products/order-item-products.component.html","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-item-products/order-item-products.component.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order/order.component.html","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order/order.component.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/orders-grid/orders-grid.component.css","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/orders-grid/orders-grid.component.html","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/orders-grid/orders-grid.component.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/index.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/orders-routing.module.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/orders.module.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/services/order-resolver.service.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/services/order.service.ts","C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/shared/models/searchOrders.ts"],"names":[],"mappings":";;;;;AAAA,oTAAoT,wBAAwB,mIAAmI,gDAAgD,qBAAqB,6GAA6G,wBAAwB,kOAAkO,6KAA6K,sBAAsB,yHAAyH,mBAAmB,sEAAsE,kDAAkD,qEAAqE,iDAAiD,0EAA0E,qEAAqE,2EAA2E,qEAAqE,4XAA4X,wCAAwC,qBAAqB,qFAAqF,wBAAwB,6WAA6W,yHAAyH,sBAAsB,yTAAyT,IAAI,0JAA0J,IAAI,yPAAyP,sEAAsE,iQAAiQ,qEAAqE,gF;;;;;;;;;;;;;;;;;;;;;;;ACAjyH;AAEvC;AACgC;AAEqB;AAMtE;IAMI,sCAAqB,QAAsB;QAAtB,aAAQ,GAAR,QAAQ,CAAc;IAAI,CAAC;IAEhD,+CAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,IAAS;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;YACjC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAdQ;QAAR,4DAAK,EAAE;;iEAAc;IAEX;QAAV,4DAAO,EAAE;;iEAAoB;IAJrB,4BAA4B;QAJxC,gEAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;;SAErC,CAAC;yCAOiC,oFAAY;OANlC,4BAA4B,CAiBxC;IAAD,mCAAC;CAAA;AAjBwC;;;;;;;;ACXzC;AACA;;;AAGA;AACA,qCAAsC,kCAAkC,KAAK,2BAA2B,0BAA0B,KAAK;;AAEvI;;;AAGA;AACA,2C;;;;;;;ACXA,6VAA6V,iBAAiB,KAAK,mBAAmB,+DAA+D,eAAe,oBAAoB,kBAAkB,wQAAwQ,wFAAwF,eAAe,aAAa,iBAAiB,WAAW,eAAe,uHAAuH,4TAA4T,2XAA2X,oBAAoB,yIAAyI,yBAAyB,yIAAyI,gDAAgD,gIAAgI,2CAA2C,uIAAuI,kDAAkD,0IAA0I,qDAAqD,wIAAwI,gCAAgC,iOAAiO,2CAA2C,sIAAsI,wCAAwC,oIAAoI,sCAAsC,2IAA2I,4CAA4C,uIAAuI,yCAAyC,4IAA4I,2BAA2B,8lBAA8lB,oBAAoB,0BAA0B,4EAA4E,6MAA6M,iSAAiS,oBAAoB,yCAAyC,4EAA4E,0OAA0O,ySAAyS,oBAAoB,0CAA0C,4EAA4E,4OAA4O,0PAA0P,0CAA0C,sSAAsS,oBAAoB,sCAAsC,4EAA4E,oOAAoO,6RAA6R,oBAAoB,uCAAuC,4EAA4E,sOAAsO,iSAAiS,oBAAoB,wCAAwC,4EAA4E,wOAAwO,+NAA+N,6BAA6B,wIAAwI,8BAA8B,u1BAAu1B,oBAAoB,oCAAoC,mHAAmH,oSAAoS,iOAAiO,0RAA0R,oBAAoB,4BAA4B,4EAA4E,iNAAiN,mSAAmS,oBAAoB,2CAA2C,4EAA4E,8OAA8O,2SAA2S,oBAAoB,4CAA4C,4EAA4E,gPAAgP,0PAA0P,4CAA4C,wSAAwS,oBAAoB,wCAAwC,4EAA4E,wOAAwO,+RAA+R,oBAAoB,yCAAyC,4EAA4E,0OAA0O,mSAAmS,oBAAoB,0CAA0C,4EAA4E,4OAA4O,u4BAAu4B,oBAAoB,0BAA0B,4EAA4E,6MAA6M,iSAAiS,oBAAoB,yCAAyC,4EAA4E,2OAA2O,ySAAyS,oBAAoB,0CAA0C,gFAAgF,6OAA6O,0PAA0P,0CAA0C,sSAAsS,oBAAoB,sCAAsC,4EAA4E,qOAAqO,6RAA6R,oBAAoB,uCAAuC,4EAA4E,uOAAuO,iSAAiS,oBAAoB,wCAAwC,4EAA4E,yOAAyO,21BAA21B,2BAA2B,wFAAwF,8zBAA8zB,wBAAwB,qgDAAqgD,27CAA27C,eAAe,aAAa,4BAA4B,uBAAuB,4BAA4B,yQAAyQ,mDAAmD,+IAA+I,gCAAgC,gPAAgP,mBAAmB,iBAAiB,gHAAgH,w1BAAw1B,mFAAmF,eAAe,qCAAqC,0FAA0F,+MAA+M,mFAAmF,eAAe,if;;;;;;;;;;;;;;;;;;;;;;;ACAti0B;AACA;AAExC;AAEkD;AACR;AAiB3D;IAgBI,4BAAoB,MAAc,EAAU,KAAqB,EACrD,SAAwB,EAAU,QAAsB;QAGhE,mDAAmD;QAJnC,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QACrD,cAAS,GAAT,SAAS,CAAe;QAAU,aAAQ,GAAR,QAAQ,CAAc;QAKhE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QAC9D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEnE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;gBAEzD,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC;gBAClD,2CAA2C;gBAC3C,mEAAmE;YACvE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACvC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACpF,CAAC;QAED,2FAA2F;QAC3F,0DAA0D;QAE1D,IAAI,CAAC,WAAW,GAAG,+BAA+B,CAAC;IACvD,CAAC;IAED,qCAAQ,GAAR;QACI,qEAAqE;IACzE,CAAC;IAEM,+CAAkB,GAAzB,UAA0B,CAAc;QACpC,+BAA+B;QAC/B,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAEtD,CAAC;IACM,+CAAkB,GAAzB,UAA0B,CAAc;QACpC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,GAAG;YACL,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;SAC9B,CAAC;IACN,CAAC;IAED,gDAAmB,GAAnB,UAAoB,CAAe;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC;YACvD,+EAA+E;YAC/E,8BAA8B;YAC9B,gDAAgD;QACpD,CAAC;IACL,CAAC;IAED,8CAAiB,GAAjB,UAAkB,CAAM;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,uEAAuE;IACvE,iCAAiC;IACjC,wEAAwE;IACxE,GAAG;IAEH,6BAA6B;IAC7B,4CAA4C;IAC5C,+BAA+B;IAC/B,mEAAmE;IACnE,GAAG;IACH,wDAAwD;IAExD,mCAAM,GAAN;QACI,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;QACtD,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,OAAO,CAAC,OAAO,CAAC,sIAAsI,EAAE,UAAU,MAAM;YACpK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAET,uDAAuD;gBACvD,mCAAmC;gBAEnC,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,2FAA2F,EAAE,CAAC,CAAC;gBACzH,YAAY;gBACZ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;qBAC9B,SAAS,CACV,cAAI;oBACA,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBACZ,sBAAsB;wBACtB,sDAAsD;wBACtD,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,+BAA+B;wBAC/B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;wBACrD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;4BAChC,OAAO,CAAC,KAAK,CAAC,oKAAoK,EAAE;gCAChL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,iBAAiB,CAAC,CAAC;4BACxF,CAAC,CAAC,CAAC;wBACP,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,OAAO,CAAC,KAAK,CAAC,8OAA8O,EAAE;gCAC1P,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,iBAAiB,CAAC,CAAC;4BACxF,CAAC,CAAC,CAAC;wBACP,CAAC;oBAEL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,sBAAsB;wBACtB,sDAAsD;wBACtD,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;oBACjD,CAAC;gBACL,CAAC,EACD,aAAG;oBACC,sBAAsB;oBACtB,sDAAsD;oBACtD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;IACd,iCAAiC;IACjC,kCAAkC;IAClC,GAAG;IAEH,yBAAyB;IACzB,GAAG;IAEH,0BAA0B;IAC1B,gDAAgD;IAChD,wCAAwC;IACxC,OAAO;IACP,sCAAsC;IACtC,wCAAwC;IACxC,OAAO;IACP,wCAAwC;IACxC,wCAAwC;IACxC,OAAO;IACP,wCAAwC;IACxC,wCAAwC;IACxC,OAAO;IACP,GAAG;IAEH,wCAAW,GAAX,UAAY,KAAU;QAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5E,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACvG,CAAC;QACL,CAAC;IACL,CAAC;IAtKQ,kBAAkB;QAL9B,gEAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;;SAGzB,CAAC;yCAiB8B,+DAAM,EAAiB,uEAAc;YAC1C,oEAAa,EAAoB,6EAAY;OAjB3D,kBAAkB,CAuK9B;IAAD,yBAAC;CAAA;AAvK8B;AAuK9B,CAAC;;;;;;;;AC9LF;AACA;;;AAGA;AACA,+BAAgC,KAAK;;AAErC;;;AAGA;AACA,2C;;;;;;;ACXA,oTAAoT,wBAAwB,+EAA+E,sBAAsB,+DAA+D,mBAAmB,2EAA2E,mDAAmD,0EAA0E,kDAAkD,2EAA2E,uEAAuE,0EAA0E,sEAAsE,4SAA4S,wBAAwB,wRAAwR,sBAAsB,oQAAoQ,mBAAmB,0KAA0K,IAAI,yHAAyH,mDAAmD,wKAAwK,IAAI,yHAAyH,kDAAkD,yKAAyK,IAAI,yHAAyH,uEAAuE,uKAAuK,IAAI,yHAAyH,sEAAsE,4E;;;;;;;;;;;;;;;;;;;;;ACAvvG;AACpB;AAEiC;AAOtE;IAKI,oCAAoB,IAAU,EAAU,QAAsB;QAA1C,SAAI,GAAJ,IAAI,CAAM;QAAU,aAAQ,GAAR,QAAQ,CAAc;QAFvD,sBAAiB,GAAQ,EAAE,CAAC;IAE+B,CAAC;IAEnE,6CAAQ,GAAR;QACI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEO,yDAAoB,GAA5B,UAA6B,OAAe;QAA5C,iBASC;QARG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;aAC/B,IAAI,CAAC,UAAC,IAAS;YACZ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAlBQ;QAAR,4DAAK,EAAE;;+DAAiB;IAFhB,0BAA0B;QALtC,gEAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;;;SAGlC,CAAC;yCAM4B,2DAAI,EAAoB,oFAAY;OALrD,0BAA0B,CAqBtC;IAAD,iCAAC;CAAA;AArBsC;;;;;;;;ACVvC,yH;;;;;;;;;;;;;;;;;;;;;ACCkD;AACjC;AAE2C;AAM5D;IAEI,wBAAoB,QAAsB;QAAtB,aAAQ,GAAR,QAAQ,CAAc;IAAG,CAAC;IAE9C,iCAAQ,GAAR,cAAa,CAAC;IAEd,0CAAiB,GAAjB;QAEI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE;aAC5B,IAAI,CAAC,UAAC,IAAS;YACZ,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,QAAQ,CAAC;QAEb,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YAER,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACX,CAAC;IAlBQ,cAAc;QAJ1B,gEAAS,CAAC;YACP,QAAQ,EAAE,OAAO;;SAEpB,CAAC;yCAGgC,6EAAY;OAFjC,cAAc,CAmB1B;IAAD,qBAAC;CAAA;AAnB0B;AAmB1B,CAAC;;;;;;;;AC7BF;AACA;;;AAGA;AACA,+BAAgC,kBAAkB,KAAK,sCAAsC,mBAAmB,KAAK,kBAAkB,yBAAyB,KAAK,2BAA2B,2BAA2B,iBAAiB,mBAAmB,kBAAkB,mBAAmB,yBAAyB,gDAAgD,yBAAyB,oBAAoB,wBAAwB,KAAK,qBAAqB,mCAAmC,kBAAkB,oBAAoB,+BAA+B,KAAK,gCAAgC,0BAA0B,KAAK,yBAAyB,8BAA8B,qBAAqB,KAAK,4BAA4B,8BAA8B,kCAAkC,KAAK,8BAA8B,8BAA8B,oCAAoC,sCAAsC,oCAAoC,kFAAkF,uCAAuC,8BAA8B,gDAAgD,uCAAuC,wCAAwC,mCAAmC,iCAAiC,iCAAiC,qCAAqC,iCAAiC,kCAAkC,8BAA8B,8CAA8C,iCAAiC,+BAA+B,+CAA+C,kCAAkC,gCAAgC,6CAA6C,oCAAoC,qCAAqC,gCAAgC,8BAA8B,yBAAyB,+BAA+B,+BAA+B,wBAAwB,uBAAuB,6BAA6B,6BAA6B,qBAAqB,4CAA4C,wBAAwB,yBAAyB,qBAAqB,+BAA+B,0BAA0B,oBAAoB,4BAA4B,4BAA4B,4BAA4B,2BAA2B,4BAA4B,yBAAyB,2BAA2B,uCAAuC,uCAAuC,uCAAuC,kCAAkC,uCAAuC,uCAAuC,kCAAkC,kCAAkC,kCAAkC,kCAAkC,+BAA+B,4BAA4B,qBAAqB,0BAA0B,gCAAgC,wCAAwC,KAAK,4BAA4B,mBAAmB,oBAAoB,6CAA6C,wBAAwB,0CAA0C,2BAA2B,6BAA6B,4BAA4B,uBAAuB,oBAAoB,6BAA6B,8BAA8B,8BAA8B,+BAA+B,2BAA2B,KAAK,2BAA2B,kCAAkC,sBAAsB,qBAAqB,qBAAqB,KAAK,+BAA+B,gCAAgC,+BAA+B,wBAAwB,8BAA8B,kDAAkD,wBAAwB,yBAAyB,qBAAqB,0BAA0B,2BAA2B,wBAAwB,uCAAuC,uCAAuC,uCAAuC,KAAK,6BAA6B,oBAAoB,KAAK,yBAAyB,oBAAoB,KAAK,2BAA2B,oBAAoB,KAAK,yBAAyB,2BAA2B,KAAK,0BAA0B,qBAAqB,qBAAqB,2BAA2B,8BAA8B,8BAA8B,wBAAwB,kCAAkC,yBAAyB,qBAAqB,KAAK,2BAA2B,kCAAkC,KAAK,6BAA6B,kCAAkC,KAAK,6BAA6B,kCAAkC,KAAK,iCAAiC,kCAAkC,KAAK,4BAA4B,kCAAkC,KAAK,2BAA2B,kCAAkC,KAAK,2BAA2B,kCAAkC,KAAK,yCAAyC,uBAAuB,mCAAmC,KAAK,oEAAoE,yCAAyC,kCAAkC,KAAK,iCAAiC,gCAAgC,KAAK;;AAErvK;;;AAGA;AACA,2C;;;;;;;ACXA,yrLAAyrL,ySAAyS,ikBAAikB,oBAAoB,qCAAqC,sBAAsB,+VAA+V,2BAA2B,yXAAyX,uBAAuB,kYAAkY,2BAA2B,0YAA0Y,+BAA+B,+TAA+T,2CAA2C,4PAA4P,mBAAmB,8LAA8L,oBAAoB,GAAG,kBAAkB,+CAA+C,kCAAkC,yVAAyV,mBAAmB,sUAAsU,yBAAyB,yZAAyZ,kBAAkB,wBAAwB,2BAA2B,qFAAqF,2BAA2B,gWAAgW,0CAA0C,uYAAuY,qDAAqD,kYAAkY,gDAAgD,wXAAwX,uDAAuD,8TAA8T,sDAAsD,wXAAwX,uDAAuD,0XAA0X,uBAAuB,oXAAoX,sBAAsB,wXAAwX,wBAAwB,sYAAsY,iCAAiC,2nBAA2nB,0BAA0B,kFAAkF,4BAA4B,shHAAshH,sBAAsB,grC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCxnlB;AACtC;AAC8B;AAQtC;AAE8B;AACjB;AACQ;AACH;AAElC;AAQjC;IAqDI;;QAEI;IACJ,6BAAoB,SAAwB,EAChC,QAAsB,EACtB,QAAsB,EACtB,MAAc,EACd,KAAqB;QAJb,cAAS,GAAT,SAAS,CAAe;QAChC,aAAQ,GAAR,QAAQ,CAAc;QACtB,aAAQ,GAAR,QAAQ,CAAc;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QA7C1B,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAG,CAAC,CAAC;QACT,gBAAW,GAAG,EAAE,CAAC;QACjB,SAAI,GAAG,IAAI,CAAC;QACZ,SAAI,GAAwB,SAAS,CAAC;QACtC,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,IAAI,CAAC;QAEpB,4BAAuB,GAAQ,EAAE,CAAC;QAClC,0BAAqB,GAAQ,EAAE,CAAC;QAChC,0BAAqB,GAAQ,EAAE,CAAC;QAChC,qBAAgB,GAAQ,EAAE,CAAC;QAG3B,mBAAc,GAAQ,EAAE,CAAC;QACzB,aAAQ,GAAQ,EAAE,CAAC;QACnB,2BAAsB,GAAQ,EAAE,CAAC;QACjC,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,yBAAoB,GAAkB,CAAC,QAAQ,EAAE,sBAAsB,CAAC,CAAC;QACzE,+BAA0B,GAAW,QAAQ,CAAC;QAE9C,wBAAmB,GAAwC,EAAE,CAAC;QAC9D,mBAAc,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC9C,uBAAkB,GAAW,CAAC,CAAC;QAM/B,4BAAuB,GAAY,KAAK,CAAC;QAGzC,0BAAqB,GAAY,KAAK,CAAC;QAEvC,iBAAY,GAAiB,IAAI,iFAAY,EAAE,CAAC;QAChD,gBAAW,GAAY,KAAK,CAAC;QAgb7B,gBAAW,GAAG,UAAC,OAAqB;YACvC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBAC9C,KAAK,WAAW;oBACZ,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAC1B,KAAK,QAAQ;oBACT,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gBAC5B,KAAK,cAAc;oBACf,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gBAC5B,KAAK,UAAU;oBACX,MAAM,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;gBAChC,KAAK,SAAS;oBACV,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gBAC3B,KAAK,UAAU;oBACX,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAC1B,KAAK,YAAY;oBACb,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAC1B;oBACI,MAAM,CAAC,EAAE,CAAC;YAClB,CAAC;QACL,CAAC;QAxbG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;IAC9D,CAAC;IA1BoE,CAAC;IA4BtE;;OAEG;IACI,sCAAQ,GAAf;QAEI,gCAAgC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,mCAAmC;QACpG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,6CAA6C;QACjF,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,sCAAsC;QAC1D,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,4BAA4B;IAC7D,CAAC;IAEM,6CAAe,GAAtB;QACI,iCAAiC;QACjC,yBAAyB;QACzB,oCAAM,CAAC,uBAAuB,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3C,CAAC;IAED;;OAEG;IACI,kDAAoB,GAA3B,UAA4B,UAAe;QACvC,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACrC,CAAC;IAEM,kDAAoB,GAA3B,UAA4B,UAAe;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc;aACd,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAxD,CAAwD,CAAC,CAAC;IACjG,CAAC;IAEM,uDAAyB,GAAhC,UAAiC,UAAe;QAC5C,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;YACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;QACxE,IAAI;YACA,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACzC,CAAC;IAEM,sDAAwB,GAA/B,UAAgC,UAAe;QAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB;aACtB,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAxD,CAAwD,CAAC,CAAC;IACzG,CAAC;IAEM,+DAAiC,GAAxC,UAAyC,UAAe;QACpD,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC;YACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iCAAiC,CAAC,UAAU,CAAC,CAAC;QAChF,IAAI;YACA,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACzC,CAAC;IAEM,yDAA2B,GAAlC,UAAmC,UAAe;QAC9C,IAAI,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAC,GAAG,IACxD,MAAM,CAAC,GAAG,CAAC,KAAK,KAAK,UAAU,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE/C,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACpC,CAAC;IAEM,mDAAqB,GAA5B,UAA6B,KAAU;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;IACL,CAAC;IAEM,iDAAmB,GAA1B,UAA2B,KAAU;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;IACL,CAAC;IAEM,uDAAyB,GAAhC,UAAiC,WAAmB;QAChD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC;IAC5G,CAAC;IAEM,+DAAiC,GAAxC,UAAyC,eAAuB;QAC5D,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC;IAC5G,CAAC;IAED,uEAAuE;IAChE,uDAAyB,GAAhC;QAAA,iBA0BC;QAxBG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;YAChF,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CACjF,CAAC;YACG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC1D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB;iBAC9C,MAAM,CAAC,UAAC,CAAC;gBACN,IAAI,mBAAmB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBAE7D,MAAM,CAAC,mBAAmB,IAAI,KAAI,CAAC,YAAY,CAAC,KAAK;uBAC9C,mBAAmB,IAAI,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACxD,CAAC,CAAC,CAAC;QACX,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,YAAY,GAAG;gBAChB,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,EAAE;gBACvD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kBAAkB,EAAE;aACtD;YAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;QAC3G,CAAC;QAED,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAE,gDAAgD;IACvH,CAAC;IAED;;OAEG;IACI,yDAA2B,GAAlC;QAAA,iBAuBC;QArBG,sDAAsD;QACtD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,2BAA2B,EAAE;aAC7C,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC;YAExC,wFAAwF;YAExF,KAAI,CAAC,uBAAuB,GAAG,KAAI,CAAC,qBAAqB;iBACpD,MAAM,CAAC,UAAC,GAAG;gBACR,IAAI,mBAAmB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;gBAE/D,MAAM,CAAC,mBAAmB,IAAI,KAAI,CAAC,cAAc;YACrD,CAAC,CAAC,CAAC;YAEP,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,uBAAuB,CAAC;YAEtD,qDAAqD;YACrD,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC;IACV,CAAC;IAEM,0DAA4B,GAAnC,UAAoC,YAA0B,EAAE,WAAoB;QAApF,iBAUC;QATG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACjC,0DAA0D;QAE1D,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,YAAY,CAAC;aAC1D,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC;YACpC,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,qDAAqD;QACzD,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,yCAAW,GAAlB;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;aAC7B,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,YAAY,EAAd,CAAc,CAAC,CAAC;QAC9D,CAAC,CAAC;IACV,CAAC;IAEM,iDAAmB,GAA1B;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE;aACrC,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,YAAY,EAAd,CAAc,CAAC,CAAC;QACtE,CAAC,CAAC;IACV,CAAC;IAEM,oDAAsB,GAA7B;QAAA,iBAaC;QAZG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE;aACpC,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;YAEvD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,KAAK;gBACxB,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;YAC3E,CAAC,CAAC;YAEF,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA9C,CAA8C,sBAAqB;aAC1G,CAAC;QAEN,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;SAEK;IACE,sDAAwB,GAA/B;QACI,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;IACzC,CAAC;IAEM,kDAAoB,GAA3B;QACI,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACnC,CAAC;IAEM,2CAAa,GAApB,UAAqB,IAAmB;QACpC,uDAAuD;QAEvD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,sDAAsD;IAC1D,CAAC;IAEM,gDAAkB,GAAzB;QACI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,mCAAmC;QAEpG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC;IAC1D,CAAC;IAED,sBAAsB;IACf,qCAAO,GAAd,UAAe,IAAI,EAAE,IAAI;QACrB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAEM,0DAA4B,GAAnC;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gFAAgF,CAAC;QACxG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEM,sDAAwB,GAA/B;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uFAAuF,CAAC;QAC/G,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEM,qDAAuB,GAA9B;QAAA,iBA2BC;QA1BG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,wBAAwB,GAAG,iBAAiB,CAAC;QAClD,IAAI,CAAC,0BAA0B,GAAG,+BAA+B,CAAC;QAElE,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAEhC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;YACxC,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;iBACrC,IAAI,CAAC,UAAC,IAAS;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACZ,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC;oBAEnC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;wBACzC,IAAI,gBAAgB,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,2CAA2C;wBACvG,IAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,2CAA2C;wBACzG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,EAAE,CAAC,CAAC;wBAE3F,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,6CAA6C;oBACrH,CAAC,CAAC,CAAC;gBACP,CAAC;YAEL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACV,2CAA2C;gBAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,IAAI;IACG,iEAAmC,GAA1C,UAA2C,qBAA0B;QAEjE,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC;QACvD,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAC1C,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAChD,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAClD,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAC,GAAG,IAAO,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,cAAc,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE1G,IAAI,qBAAqB,GAAG,IAAI,CAAC;QAEjC,0BAA0B;QAC1B,oDAAoD;QACpD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtE,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3B,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;oBACnD,MAAM,CAAC,CAAC,CAAC,CAAC,sBAAsB,KAAK,eAAe,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,qBAAqB,GAAG,qBAAqB,CAAC;YAClD,CAAC;QACL,CAAC;QACD,0CAA0C;QAC1C,iDAAiD;QACjD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtE,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE;4BAC/C,CAAC,CAAC,sBAAsB,IAAI,eAAe;4BAC3C,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE;4BAC/C,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAGD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE;wBACnD,CAAC,CAAC,sBAAsB,IAAI,eAAe;wBAC3C,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,IAAI,WAAW,CAAC,IAAI,EAAE;wBAC5C,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE;4BAC/C,CAAC,CAAC,sBAAsB,IAAI,eAAe,CAAC,CAAC;gBACrD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,sBAAsB,IAAI,eAAe;4BAC3C,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAGD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,sBAAsB,IAAI,eAAe;wBAC/C,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7D,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE;wBACnD,CAAC,CAAC,sBAAsB,IAAI,eAAe,CAAC,CAAC;gBACrD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7D,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3E,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC;gBACnD,EAAE,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC,CAAC,sBAAsB,IAAI,eAAe,CAAC,CAAC;gBACrD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9C,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;IACnD,CAAC;IA9d2B;QAA3B,gEAAS,CAAC,eAAe,CAAC;;8DAAe;IACf;QAA1B,gEAAS,CAAC,cAAc,CAAC;;6DAAc;IACV;QAA7B,gEAAS,CAAC,iBAAiB,CAAC;;gEAAiB;IACf;QAA9B,gEAAS,CAAC,kBAAkB,CAAC;;iEAAkB;IACrB;QAA1B,gEAAS,CAAC,cAAc,CAAC;;6DAAc;IACf;QAAxB,gEAAS,CAAC,YAAY,CAAC;;2DAAY;IACJ;QAA/B,gEAAS,CAAC,mBAAmB,CAAC;;kEAAmB;IACxB;QAAzB,gEAAS,CAAC,aAAa,CAAC;;4DAAa;IACZ;QAAzB,gEAAS,CAAC,mFAAa,CAAC;kCAAO,mFAAa;qDAAC;IAEnC;QAAV,4DAAO,EAAE;;wDAAoB;IAbrB,mBAAmB;QAN/B,gEAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;YAGvB,aAAa,EAAE,gEAAiB,CAAC,IAAI;SACxC,CAAC;yCAyDiC,6FAAa;YACtB,6EAAY;YACZ,oFAAY;YACd,+DAAM;YACP,uEAAc;OA5DxB,mBAAmB,CAuf/B;IAAD,0BAAC;CAAA;AAvf+B;;;;;;;;;;;;;;;;;;;;;;;ACzBmB;AACU;AACkB;AACM;AACtB;AACb;AACT;;;;;;;;;;;;;;;;;;;;;ACNc;AACd;AAEyC;AACI;AACpB;AAElE,IAAM,WAAW,GAAW;IACxB;QACI,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,8DAAc;KAC3C;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,mEAAmB;QAC9B,OAAO,EAAE,EAAE,WAAW,EAAE,0GAAmB,EAAE;KAChD;IACD;QACI,IAAI,EAAE,4CAA4C;QAClD,SAAS,EAAE,kEAAkB;QAC7B,OAAO,EAAE;YACL,cAAc,EAAE,uFAAa;YAC7B,WAAW,EAAE,0GAAmB;SACnC;KACJ;CACJ,CAAC;AAMF;IAAA;IACA,CAAC;IADY,mBAAmB;QAJ/B,+DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC7C,OAAO,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;OACW,mBAAmB,CAC/B;IAAD,0BAAC;CAAA;AAD+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BS;AACc;AACS;AACO;AACH;AACG;AACX;AACE;AACQ;AACR;AACA;AAEP;AACG;AACI;AAU7C;AAEV,IAAM,gBAAgB,GAAG;IAC5B,+DAAc;IACd,mEAAkB;IAClB,6EAA4B;IAC5B,2EAA0B;IAC1B,oEAAmB;CACtB;AA0BD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAxBxB,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,sFAAa;gBACb,gFAAU;gBACV,iFAAW;gBACX,0FAAe;gBACf,kFAAW;gBACX,oFAAY;gBACZ,4FAAgB;gBAChB,oFAAY;gBACZ,oFAAY;gBACZ,6FAAkB;gBAClB,2EAAY,CAAC,OAAO,EAAE;gBACtB,oEAAY;gBACZ,+EAAa;gBACb,oFAAmB;aACtB;YACD,OAAO,EAAE,gBAAgB;YACzB,YAAY,EAAE,gBAAgB;YAC9B,SAAS,EAAE;gBACP,8DAAa;gBACb,6DAAY;aACf;SACJ,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AC1DkB;AAEE;AAC5B;AAE8B;AAG/C;IAEI,uBAAoB,QAAsB;QAAtB,aAAQ,GAAR,QAAQ,CAAc;IAC1C,CAAC;IACD,+BAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC;iBAC7C,GAAG,CAAC,wBAAc;gBACf,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,cAAc,CAAC;gBAC1B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACV,2CAA2C;gBAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACX,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,CAAC;iBAC9C,GAAG,CAAC,wBAAc;gBACf,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,cAAc,CAAC;gBAC1B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACV,2CAA2C;gBAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACX,CAAC;IAEL,CAAC;IArCQ,aAAa;QADzB,iEAAU,EAAE;yCAGqB,oEAAY;OAFjC,aAAa,CAsCzB;IAAD,oBAAC;CAAA;AAtCyB;;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AACa;AACX;AAC5B;AAE2D;AAG5E;IAEI,sBAAoB,SAAwB,EAAU,IAAU;QAA5C,cAAS,GAAT,SAAS,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAM;QAExD,YAAO,GAAG,IAAI,8DAAO,CAAC;YAC1B,cAAc,EAAE,kBAAkB;YAClC,sBAAsB;YACtB,QAAQ,EAAE,kBAAkB;SAC/B,CAAC,CAAC;IANiE,CAAC;IAQ9D,kCAAW,GAAlB,UAAmB,GAAa;QAC5B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACtB,CAAC;IAEM,kCAAW,GAAlB,UAAmB,GAAQ;QACvB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;IACrB,CAAC;IAEM,kCAAW,GAAlB,UAAmB,KAAU;QACzB,oEAAoE;QACpE,8DAA8D;QAE9D,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;QAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM;IACC,wCAAiB,GAAxB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE;aACtF,IAAI,CAAC,UAAC,IAAc;YACjB,QAAQ;YACR,MAAM,CAAC,IAAI,CAAC;QAEhB,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,gCAAS,GAAhB,UAAiB,SAAc,EAAE,OAAY;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAAiC,GAAG,SAAS,GAAG,WAAW,GAAG,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACjH,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,4CAAqB,GAA5B,UAA6B,OAAY;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uCAAuC,GAAG,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC7F,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,gCAAS,GAAhB,UAAiB,KAAU;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC1E,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,qCAAc,GAArB,UAAsB,KAAU;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wCAAwC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC5F,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,uBAAuB;IAChB,kDAA2B,GAAlC;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACzE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,kCAAW,GAAlB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4BAA4B,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACxE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,yCAAkB,GAAzB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC5E,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,0CAAmB,GAA1B;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,+BAA+B,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC3E,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,kDAA2B,GAAlC;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACzE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEM,mDAA4B,GAAnC,UAAoC,YAAiB;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yCAAyC,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACpG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAlGQ,YAAY;QADxB,iEAAU,EAAE;yCAGsB,6FAAa,EAAgB,2DAAI;OAFvD,YAAY,CAmGxB;IAAD,mBAAC;CAAA;AAnGwB;;;;;;;;;ACRzB;AAAA;IAAA;IAIA,CAAC;IAAD,mBAAC;AAAD,CAAC","file":"orders.module.chunk.js","sourcesContent":["module.exports = \"<kendo-grid *ngIf=\\\"quoteItems\\\" [data]=\\\"quoteItems\\\">\\r\\n    <kendo-grid-column media=\\\"(max-width: 450px)\\\" title=\\\"Order submitted\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem>\\r\\n            <dl>\\r\\n                <dt>Product Number</dt>\\r\\n                <!--<dd>{{dataItem.productNumber}}</dd>-->\\r\\n                <dd>\\r\\n                    <span *ngIf=\\\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\\\">\\r\\n                        {{dataItem.codeString}}\\r\\n                    </span>\\r\\n                    <ng-template #elseBlock>\\r\\n                        {{dataItem.productNumber}}\\r\\n                    </ng-template>\\r\\n                </dd>\\r\\n                <dt>Description</dt>\\r\\n                <dd>\\r\\n                    <span *ngIf=\\\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\\\">\\r\\n                        Configured Product\\r\\n                    </span>\\r\\n                    <ng-template #elseBlock>\\r\\n                        {{dataItem.description}}\\r\\n                    </ng-template>\\r\\n                </dd>\\r\\n                <dt>Qty</dt>\\r\\n                <dd>{{dataItem.quantity}}</dd>\\r\\n                <dt>List Price</dt>\\r\\n                <dd>{{dataItem.listPrice | currency:'USD':true:'1.2-2'}}</dd>\\r\\n                <dt>Net Price</dt>\\r\\n                <dd>{{dataItem.netPrice | currency:'USD':true:'1.2-2'}}</dd>\\r\\n                <dt>Ext. Net Price</dt>\\r\\n                <dd>{{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}</dd>\\r\\n                <dt>Ext. List Price</dt>\\r\\n                <dd>{{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}</dd>\\r\\n            </dl>\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"productNumber\\\" title=\\\"Product Number\\\" width=\\\"300\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            <span *ngIf=\\\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\\\">\\r\\n                {{dataItem.codeString}}\\r\\n            </span>\\r\\n            <ng-template #elseBlock>\\r\\n                {{dataItem.productNumber}}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"description\\\" title=\\\"Description\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            <span *ngIf=\\\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\\\">\\r\\n                Configured Product\\r\\n            </span>\\r\\n            <ng-template #elseBlock>{{dataItem.description}}</ng-template>\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"quantity\\\" title=\\\"Qty\\\" width=\\\"70\\\">\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"listPrice\\\" title=\\\"List Price\\\" format=\\\"{0:c}\\\" width=\\\"140\\\">\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"netPrice\\\" title=\\\"Net Price\\\" format=\\\"{0:c}\\\" width=\\\"140\\\">\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" title=\\\"Ext. List Price\\\" width=\\\"140\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.listPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" title=\\\"Ext. Net Price\\\" width=\\\"140\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n\\r\\n</kendo-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form-quote-items/order-form-quote-items.component.html\n// module id = ../../../../../src/app/orders/components/order-form-quote-items/order-form-quote-items.component.html\n// module chunks = orders.module","import { Component, OnInit, Input} from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\r\n\r\nimport { QuoteService } from '../../../quotes/services/quote.service'; \r\n\r\n@Component({\r\n    selector: 'order-form-quote-items',\r\n    templateUrl: './order-form-quote-items.component.html'\r\n})\r\nexport class OrderFormQuoteItemsComponent implements OnInit {\r\n\r\n    @Input() quoteId: any;\r\n    public quoteItems: any;\r\n    @BlockUI() blockUI: NgBlockUI;\r\n\r\n    constructor( private quoteSvc: QuoteService) { }\r\n\r\n    ngOnInit() {\r\n        this.quoteSvc.getQuoteItems(this.quoteId).then((resp: any) => {\r\n            if (resp.isok) {\r\n                this.quoteItems = resp.model;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form-quote-items/order-form-quote-items.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".orderForm {\\r\\n    background-color: #E5F2FA;\\r\\n}\\r\\n\\r\\n#orderForm legend {\\r\\n    padding-top: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form/order-form.component.css\n// module id = ../../../../../src/app/orders/components/order-form/order-form.component.css\n// module chunks = orders.module","module.exports = \"<project-tabs [user]=\\\"user\\\"></project-tabs>\\r\\n<div id=\\\"main-container\\\" class='container-fluid'>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <ul class=\\\"breadcrumbs\\\">\\r\\n                <li><a href=\\\"/v2/#/projects\\\">Projects</a></li>\\r\\n                <li><a href=\\\"/v2/#/project/project/{{order.projectId}}\\\">{{order.projectName}}</a></li>\\r\\n                <li><a href=\\\"/v2/#/quote/quote/{{order.quoteId}}/existingRecord\\\">{{order.quoteTitle}}</a></li>\\r\\n                <li>Order</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <a href=\\\"/ProjectDashboard/OrderFAQ\\\" id=\\\"orderFAQ\\\" class=\\\"btn btn-default pull-right\\\" target=\\\"_blank\\\" style=\\\"margin:10px;\\\">FAQ</a>\\r\\n            <a *ngIf=\\\"order.orderId != 0\\\" href=\\\"/Document/OrderPrint/{{order.orderId}}?projectId={{order.projectId}}&quoteId={{order.quoteId}}\\\" id=\\\"order_request_print_modal_trigger\\\" class=\\\"btn btn-default pull-right\\\" target=\\\"_blank\\\" style=\\\"margin:10px;\\\">Print Order</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <h4>Order Form</h4>\\r\\n    <!--<button class=\\\"btn btn-default\\\"><a href=\\\"#orderReleaseDate\\\">Jump</a></button>-->\\r\\n    <div *ngIf=\\\"order\\\" class=\\\"orderForm\\\">\\r\\n        <form id=\\\"orderForm\\\" #orderForm=\\\"ngForm\\\" novalidate style=\\\"padding: 20px;\\\">\\r\\n            <fieldset>\\r\\n                <legend>Project Details</legend>\\r\\n                <div class=\\\"row no-gutters\\\">\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Project Name: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.name}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Project Reference: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.projectId}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Registration Date: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.projectDate  | date: 'shortDate'}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Bid Date: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.bidDate | date: 'shortDate'}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Estimated Close: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.estimatedClose | date: 'shortDate'}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Estimated Delivery: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.estimatedDelivery | date: 'shortDate'}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Pricing Strategy: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.pricingStrategy }}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Construction Type: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.constructionTypeDescription}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Project Status: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.projectStatusDescription}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Project Type: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.projectTypeDescription}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Project Open Status: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.projectOpenStatusDescription}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Vertical Market: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.verticalMarketDescription}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Project Status Notes: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.description}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>Shipping Address/Project location</legend>\\r\\n                <div class=\\\"row no-gutters\\\">\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Business Name: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.shipToName; else elseBlock\\\">{{order.project.shipToName}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.shipToName\\\" name=\\\"shipToName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Country: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.shipToAddress.countryCode; else elseBlock\\\">{{order.project.shipToAddress.countryCode}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.shipToAddress.countryCode\\\" name=\\\"shipToAddressCountryCode\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Address Line 1: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.shipToAddress.addressLine1; else elseBlock\\\">{{order.project.shipToAddress.addressLine1}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.shipToAddress.addressLine1\\\" name=\\\"shipToAddressAddressLine1\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Address Line 2: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.shipToAddress.addressLine2}}</div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Location: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.shipToAddress.location; else elseBlock\\\">{{order.project.shipToAddress.location}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.shipToAddress.location\\\" name=\\\"shipToAddressLocation\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">State: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.shipToAddress.stateName; else elseBlock\\\">{{order.project.shipToAddress.stateName}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.shipToAddress.stateName\\\" name=\\\"shipToAddressStateName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Zip Code: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.shipToAddress.postalCode; else elseBlock\\\">{{order.project.shipToAddress.postalCode}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.shipToAddress.postalCode\\\" name=\\\"shipToAddressPostalCode\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Square Footage: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.squareFootage}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Number Of Floors: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.numberOfFloors}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-1\\\">\\r\\n                        <div *ngIf=\\\"recordState == 'new'\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span><a data-toggle=\\\"modal\\\" data-target=\\\"#editShipToAddressModal\\\" data-backdrop=\\\"static\\\"> Edit</a></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>Dealer/Contractor</legend>\\r\\n                <div class=\\\"row no-gutters\\\">\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Dealer/Contractor Name: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" required *ngIf=\\\"order.project.dealerContractorName; else elseBlock\\\">{{order.project.dealerContractorName}}</div>\\r\\n                        <!--<div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.dealerContractorName; else elseBlock\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.dealerContractorName\\\" name=\\\"dealerContractorName\\\"/>\\r\\n                        </div>-->\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.dealerContractorName\\\" name=\\\"dealerContractorName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Business Name: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.customerName; else elseBlock\\\">{{order.project.customerName}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.customerName\\\" name=\\\"customerName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Country: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.customerAddress.countryCode; else elseBlock\\\">{{order.project.customerAddress.countryCode}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.customerAddress.countryCode\\\" name=\\\"customerAddressCountryCode\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Address Line 1: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.customerAddress.addressLine1; else elseBlock\\\">{{order.project.customerAddress.addressLine1}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.customerAddress.addressLine1\\\" name=\\\"customerAddressAddressLine1\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Address Line 2: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.customerAddress.addressLine2}}</div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Location: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.customerAddress.location; else elseBlock\\\">{{order.project.customerAddress.location}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.customerAddress.location\\\" name=\\\"customerAddressLocation\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">State: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.customerAddress.stateName; else elseBlock\\\">{{order.project.customerAddress.stateName}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.customerAddress.stateName\\\" name=\\\"customerAddressStateName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Zip Code: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.customerAddress.postalCode; else elseBlock\\\">{{order.project.customerAddress.postalCode}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.customerAddress.postalCode\\\" name=\\\"customerAddressPostalCode\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-1\\\">\\r\\n                        <div *ngIf=\\\"recordState == 'new'\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span><a data-toggle=\\\"modal\\\" data-target=\\\"#editCustomerAddressModal\\\" data-backdrop=\\\"static\\\"> Edit</a></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>Seller</legend>\\r\\n                <div class=\\\"row no-gutters\\\">\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Business Name: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.sellerName; else elseBlock\\\">{{order.project.sellerName}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.sellerName\\\" name=\\\"sellerName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Country: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.sellerAddress.countryCode; else elseBlock\\\">{{order.project.sellerAddress.countryCode}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.sellerAddress.countryCode\\\" name=\\\"sellerAddress.countryCode\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Address Line 1: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.sellerAddress.addressLine1; else elseBlock\\\">{{order.project.sellerAddress.addressLine1}}</div>\\r\\n\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.sellerAddress.addressLine1\\\" name=\\\"sellerAddress.addressLine1\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Address Line 2: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\">{{order.project.sellerAddress.addressLine2}}</div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Location: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.sellerAddress.location; else elseBlock\\\">{{order.project.sellerAddress.location}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.sellerAddress.location\\\" name=\\\"sellerAddress.location\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">State: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.sellerAddress.stateName; else elseBlock\\\">{{order.project.sellerAddress.stateName}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.sellerAddress.stateName\\\" name=\\\"sellerAddress.stateName\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Zip Code: </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\" *ngIf=\\\"order.project.sellerAddress.postalCode; else elseBlock\\\">{{order.project.sellerAddress.postalCode}}</div>\\r\\n                        <input type=\\\"text\\\" style=\\\"display:none;\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.project.sellerAddress.postalCode\\\" name=\\\"sellerAddress.postalCode\\\" />\\r\\n                        <ng-template #elseBlock>\\r\\n                            <div style=\\\"color:red; font-style:italic\\\">This field is required</div>\\r\\n                        </ng-template>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-1\\\">\\r\\n                        <div *ngIf=\\\"recordState == 'new'\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span><a data-toggle=\\\"modal\\\" data-target=\\\"#editSellerAddressModal\\\" data-backdrop=\\\"static\\\"> Edit</a></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>Order Details</legend>\\r\\n                <div class=\\\"row no-gutters\\\">\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Order Submitted By: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.submittedByUserName}}</div>\\r\\n\\r\\n                        <div class=\\\"col-md-12\\\" style=\\\"padding: 5px 0px;\\\">\\r\\n                            <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">\\r\\n                                <label class=\\\"required\\\">Order Release Date:</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 col-xs-12\\\">\\r\\n                                <kendo-datepicker [disabled]=\\\"recordState == 'submitted'\\\" #datepicker id=\\\"orderReleaseDate\\\"\\r\\n                                                  class=\\\"form-control\\\" required name=\\\"orderReleaseDate\\\"\\r\\n                                                  [min]=\\\"releaseDateMin\\\"\\r\\n                                                  [(ngModel)]=\\\"order.orderReleaseDate\\\" placeholder=\\\"Select ...\\\">\\r\\n                                </kendo-datepicker>\\r\\n                                <!--<div> orderReleaseDate: {{order.orderReleaseDate}}</div>-->\\r\\n                                <!--<input type=\\\"date\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"order.orderReleaseDate\\\" name=\\\"orderReleaseDate\\\" />-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!--<div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"control-label as-lnk\\\">Order Release Date: </label>\\r\\n\\r\\n                            <kendo-datepicker class=\\\"form-control\\\" [value]=\\\"order.orderReleaseDate\\\" placeholder=\\\"select...\\\">\\r\\n                            </kendo-datepicker>\\r\\n                        </div>-->\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">\\r\\n                            <label class=\\\"required\\\">Purchase Order Number:</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12\\\">\\r\\n                            <input class=\\\"form-control\\\"\\r\\n                                   required maxlength=\\\"22\\\"\\r\\n                                   placeholder=\\\"Maximum 22 characters\\\"\\r\\n                                   [(ngModel)]=\\\"order.poNumber\\\" name=\\\"poNumber\\\"\\r\\n                                   [disabled]=\\\"recordState == 'submitted'\\\" />\\r\\n                        </div>\\r\\n                        <!--<div class=\\\"col-md-12\\\">\\r\\n                            <label class=\\\"control-label as-lnk\\\">Purchase Order Number: </label>\\r\\n                            <input type=\\\"text\\\" style=\\\"max-width:400px;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"order.poNumber\\\" name=\\\"poNumber\\\" />\\r\\n                        </div>-->\\r\\n\\r\\n                        <div *ngIf=\\\"recordState == 'new'\\\" class=\\\"col-md-12\\\">\\r\\n                            <label class=\\\"control-label as-lnk required\\\">Purchase Order Attachment: </label>\\r\\n                            <kendo-upload required [autoUpload]=\\\"true\\\"\\r\\n                                          [saveUrl]=\\\"poUploadUrl\\\"\\r\\n                                          [multiple]=\\\"false\\\"\\r\\n                                          [(ngModel)]=\\\"poAttachment\\\"\\r\\n                                          name=\\\"PurchaseOrderAttachment\\\"\\r\\n                                          (select)=\\\"selectEventHandler($event)\\\"\\r\\n                                          (upload)=\\\"uploadEventHandler($event)\\\"\\r\\n                                          [withCredentials]=\\\"true\\\"\\r\\n                                          (success)=\\\"successEventHandler($event)\\\"\\r\\n                                          (error)=\\\"errorEventHandler($event)\\\">\\r\\n                            </kendo-upload>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"recordState == 'submitted'\\\">\\r\\n                            <label class=\\\"col-md-6 col-xs-12 as-lnk required\\\">Purchase Order Attachment: </label>\\r\\n                            <div class=\\\"col-md-6 col-xs-12\\\"><a href=\\\"/document/QuoteOrder/{{order.quoteId}}/?filename={{order.poAttachmentFileName}}\\\" target=\\\"_blank\\\">{{order.poAttachmentFileName}}</a></div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-5 col-xs-12\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Total Net Price: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.totalNetPrice | currency:'USD':true:'1.2-2'}}</div>\\r\\n                        <div class=\\\"col-md-6 col-xs-12 as-lnk\\\">Total Discount Provided: </div> <div class=\\\"col-md-6 col-xs-12\\\">{{order.totalDiscountPercent*100}}%</div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <label class=\\\"control-label as-lnk required\\\">Delivery Contact Details: </label>\\r\\n                            <!--<div style=\\\"font-size:smaller; font-style:italic; color:lightgray;\\\">(maximum 75 characters)</div>-->\\r\\n                            <input type=\\\"text\\\" style=\\\"max-width:400px;\\\" class=\\\"form-control\\\"\\r\\n                                   required maxlength=\\\"75\\\"\\r\\n                                   placeholder=\\\"Maximum 75 characters\\\"\\r\\n                                   [(ngModel)]=\\\"order.comments\\\" name=\\\"orderComments\\\"\\r\\n                                   [disabled]=\\\"recordState == 'submitted'\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"hidden-xs col-md-1\\\"></div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n                <legend>Order Items</legend>\\r\\n                <order-form-quote-items [quoteId]=\\\"order.quoteId\\\"></order-form-quote-items>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n                <div *ngIf=\\\"recordState == 'new'\\\" class=\\\"text-center\\\" style=\\\"padding-top:20px;\\\">\\r\\n                    <a class=\\\"btn btn-default\\\" href=\\\"/v2/#/quote/quote/{{order.quoteId}}/existingRecord\\\" style=\\\"width:70px;\\\">Cancel</a>\\r\\n                    <button class=\\\"btn btn-primary\\\" style=\\\"width:70px;\\\" [disabled]=\\\"orderForm.invalid\\\" (click)=\\\"submit()\\\">Submit</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"recordState == 'submitted'\\\" class=\\\"text-center\\\" style=\\\"padding-top:20px;\\\">\\r\\n                    <a class=\\\"btn btn-default\\\" href=\\\"/v2/#/quote/quote/{{order.quoteId}}/existingRecord\\\">Back To Quote</a>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal -->\\r\\n<edit-project-location *ngIf=\\\"order\\\" [(project)]=\\\"order.project\\\"></edit-project-location>\\r\\n\\r\\n<!-- Modal -->\\r\\n<edit-customer-address *ngIf=\\\"order\\\" [(project)]=\\\"order.project\\\"></edit-customer-address>\\r\\n\\r\\n<!-- Modal -->\\r\\n<edit-seller-address *ngIf=\\\"order\\\" [(project)]=\\\"order.project\\\"></edit-seller-address>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form/order-form.component.html\n// module id = ../../../../../src/app/orders/components/order-form/order-form.component.html\n// module chunks = orders.module","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable'; \r\nimport 'rxjs/Rx';\r\n\r\nimport { ToastrService, UserService } from '../../../shared/index';  \r\nimport { OrderService } from '../../services/order.service'\r\n\r\nimport { UploadModule } from '@progress/kendo-angular-upload';\r\nimport { SelectEvent } from '@progress/kendo-angular-upload';\r\nimport { UploadEvent } from '@progress/kendo-angular-upload';\r\nimport { SuccessEvent } from '@progress/kendo-angular-upload';\r\nimport { FileInfo } from '@progress/kendo-angular-upload';\r\n\r\ndeclare var jQuery: any;\r\n////TODO \r\ndeclare var bootbox: any;  \r\n\r\n@Component({\r\n    selector: 'order-form',\r\n    templateUrl: './order-form.component.html',\r\n    styleUrls: [\"./order-form.component.css\"],\r\n})\r\nexport class OrderFormComponent implements OnInit {\r\n    //@ViewChild('datepicker') datepicker: any;\r\n \r\n    public user: any;\r\n    public order: any;\r\n    public recordState: any;\r\n\r\n    //public poAttachment: any;\r\n    public poUploadUrl: any;\r\n    public poAttachment: Array<FileInfo>;\r\n\r\n    //public projectInfoIsValid : boolean = true;\r\n    //public orderInfoIsValid : boolean = true;\r\n\r\n    public releaseDateMin: any;\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute,\r\n        private toastrSvc: ToastrService, private orderSvc: OrderService        \r\n    ) {\r\n\r\n        //this.activeTab = this.route.snapshot.url[0].path;\r\n\r\n        this.user = this.route.snapshot.data['currentUser'].model;\r\n        this.order = this.route.snapshot.data['orderFormModel'].model;\r\n        this.recordState = this.route.snapshot.paramMap.get('recordState');\r\n\r\n        if (this.recordState == \"new\") {\r\n            if (this.order.hasConfiguredModel) {\r\n                this.releaseDateMin = new Date();\r\n                this.releaseDateMin.setDate((new Date()).getDate() + 28);\r\n\r\n                this.order.orderReleaseDate = this.releaseDateMin;\r\n                //this.order.orderReleaseDate = new Date();\r\n                //this.order.orderReleaseDate.setDate((new Date()).getDate() + 28);\r\n            } else {\r\n                this.order.orderReleaseDate = null;\r\n            }\r\n        } else {// submitted\r\n            this.order.orderReleaseDate = new Date(Date.parse(this.order.orderReleaseDate));\r\n        }\r\n\r\n        //this.order.orderReleaseDate = new Date(Date.parse(this.order.orderReleaseDate)); // 1/1/1\r\n        //this.order.orderReleaseDate = new Date();// current date\r\n\r\n        this.poUploadUrl = \"/api/Order/UploadPOAttachment\";\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.recordState = this.route.snapshot.paramMap.get('recordState');\r\n    }\r\n\r\n    public selectEventHandler(e: SelectEvent) {\r\n        //console.log(\"File selected\");\r\n        this.order.poAttachmentFileName = e.files[0].name;\r\n\r\n    }\r\n    public uploadEventHandler(e: UploadEvent) {\r\n        console.log(\"File Upload\");\r\n        e.data = {\r\n            QuoteId: this.order.quoteId,\r\n        };\r\n    }\r\n\r\n    successEventHandler(e: SuccessEvent) {\r\n        var self = this;\r\n        if (e.response.ok == true) {\r\n            console.log(\"The \" + e.operation + \" was successful!\");\r\n            //this.toastrSvc.Success(\"Quote '\" + this.quote.title + \"' has been updated.\");\r\n            //this.reloadDataEvent.emit();\r\n            //$('button.close[data-dismiss=modal]').click();\r\n        }\r\n    }\r\n\r\n    errorEventHandler(e: any) {\r\n        console.log(\"Error: \" + e.response.statusText);\r\n        this.toastrSvc.ErrorFadeOut(e.response.statusText);\r\n    }\r\n\r\n    //====Deprecated: This is to fix kendo date picker view jump on open===\r\n    //public datePickerOpen(): void {\r\n    //    setTimeout(this.jumpToDatePicker.bind(this), 50); // wait 0.05 sec\r\n    //}\r\n\r\n    //public jumpToDatePicker() {\r\n    //    //location.href = \"#orderReleaseDate\";\r\n    //    //this.datepicker.open();\r\n    //    document.getElementById(\"orderReleaseDate\").scrollIntoView();\r\n    //}\r\n    //======================================================\r\n\r\n    submit() {\r\n        this.order.shipToName = this.order.project.shipToName;\r\n        var self = this;\r\n\r\n        bootbox.confirm(\"<p>Are you sure you want to submit Order? <br/>No further changes will be available on this project after it has been submitted.</p>\", function (result) {\r\n            if (result) {\r\n                \r\n                //self.loadingIconSvc.Start(jQuery(\"#main-container\"));\r\n                //this.blockUI.start('Loading...');\r\n\r\n                bootbox.dialog({ message: '<div class=\"text-center\"><i class=\"fa fa-spin fa-spinner\"></i> Order processing ...</div>' });\r\n                //Post Order\r\n                self.orderSvc.postOrder(self.order)\r\n                    .subscribe(\r\n                    resp => {\r\n                        if (resp.isok) {\r\n                            //this.blockUI.stop();\r\n                            //self.loadingIconSvc.Stop(jQuery(\"#main-container\"));\r\n                            bootbox.hideAll();\r\n                            //Send order email notification\r\n                            self.orderSvc.sendOrderEmail(self.order).subscribe();\r\n                            if (self.order.hasConfiguredModel) {\r\n                                bootbox.alert(\"<p>At the point model creation submittal is accepted, any changes or cancellations to an order with Factory Install Options will incur a 25% cancellation fee.</p>\", function () {\r\n                                    self.router.navigateByUrl(\"/quote/quote/\" + self.order.quoteId + \"/existingRecord\");\r\n                                });\r\n                            } else {\r\n                                bootbox.alert(\"<p>Thank you for submitting the order. Your Daikin Customer Service Representative will review the order and get back to you within 24 hours.<br/> <br/>To cancel the order, please contact your Daikin Customer Service Representative.</p>\", function () {\r\n                                    self.router.navigateByUrl(\"/quote/quote/\" + self.order.quoteId + \"/existingRecord\");\r\n                                });\r\n                            }\r\n\r\n                        } else {\r\n                            //this.blockUI.stop();\r\n                            //self.loadingIconSvc.Stop(jQuery(\"#main-container\"));\r\n                            bootbox.hideAll();\r\n                            self.toastrSvc.displayResponseMessages(resp);\r\n                        }\r\n                    },\r\n                    err => {\r\n                        //this.blockUI.stop();\r\n                        //self.loadingIconSvc.Stop(jQuery(\"#main-container\"));\r\n                        console.log(\"Error: \", err)\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    //validate() {\r\n    //    this.validateProjectInfo();\r\n    //    this.validateOrderDetails();\r\n    //}\r\n\r\n    //validateProjectInfo() {\r\n    //}\r\n\r\n    //validateOrderDetails() {\r\n    //    if (this.order.orderReleaseDate == null) {\r\n    //        this.orderInfoIsValid = false;\r\n    //    }\r\n    //    if (this.poAttachment == null) {\r\n    //        this.orderInfoIsValid = false;\r\n    //    }\r\n    //    if (this.order.poNumber == null) {\r\n    //        this.orderInfoIsValid = false;\r\n    //    }\r\n    //    if (this.order.comments == null) {\r\n    //        this.orderInfoIsValid = false;\r\n    //    }\r\n    //}\r\n\r\n    stateChange(value: any) {\r\n        for (var i = 0; i < this.order.project.shipToAddress.states.items.length; i++) {\r\n            if (this.order.project.shipToAddress.states.items[i].value == value) {\r\n                this.order.project.shipToAddress.stateName = this.order.project.shipToAddress.states.items[i].text;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-form/order-form.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-item-products/order-item-products.component.css\n// module id = ../../../../../src/app/orders/components/order-item-products/order-item-products.component.css\n// module chunks = orders.module","module.exports = \"<kendo-grid *ngIf=\\\"orderItemProducts\\\" [data]=\\\"orderItemProducts\\\">\\r\\n\\r\\n    <kendo-grid-column media=\\\"(max-width: 450px)\\\" title=\\\"Products\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem>\\r\\n            <dl>\\r\\n                <dt>Product</dt>\\r\\n                <dd>{{dataItem.productNumber}}</dd>\\r\\n                <dt>Product Description</dt>\\r\\n                <dd>{{dataItem.description}}</dd>\\r\\n                <dt>Qty</dt>\\r\\n                <dd>{{dataItem.quantity}}</dd>\\r\\n                <dt>List Price Each</dt>\\r\\n                <dd>{{ dataItem.listPrice| currency:'USD':true:'1.2-2' }}</dd>\\r\\n                <dt>Net Price Each</dt>\\r\\n                <dd>{{ dataItem.netPrice| currency:'USD':true:'1.2-2' }}</dd>\\r\\n                <dt>Ext. List Price</dt>\\r\\n                <dd>{{dataItem.listPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}</dd>\\r\\n                <dt>Ext. Net Price</dt>\\r\\n                <dd>{{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}</dd>\\r\\n            </dl>\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"productNumber\\\" title=\\\"Product\\\" width=\\\"15%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.productNumber}}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"description\\\" title=\\\"Product Description\\\" width=\\\"20%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.description}}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"quantity\\\" title=\\\"Qty\\\" width=\\\"5%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.quantity}}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"listPriceEach\\\" title=\\\"List Price Each\\\" format=\\\"{0:c}\\\" width=\\\"15%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{ dataItem.listPrice| currency:'USD':true:'1.2-2' }}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"netPriceEach\\\" title=\\\"Net Price Each\\\" format=\\\"{0:c}\\\" width=\\\"15%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{ dataItem.netPrice| currency:'USD':true:'1.2-2' }}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"extListPrice\\\" title=\\\"Ext. List Price\\\" format=\\\"{0:c}\\\" width=\\\"15%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.listPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column media=\\\"(min-width: 450px)\\\" field=\\\"extNetPrice\\\" title=\\\"Ext. Net Price\\\" format=\\\"{0:c}\\\" width=\\\"15%\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            {{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}\\r\\n        </ng-template>\\r\\n    </kendo-grid-column>\\r\\n\\r\\n</kendo-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-item-products/order-item-products.component.html\n// module id = ../../../../../src/app/orders/components/order-item-products/order-item-products.component.html\n// module chunks = orders.module","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\nimport { QuoteService } from '../../../quotes/services/quote.service';\r\n\r\n@Component({\r\n    selector: 'order-item-products',\r\n    templateUrl: './order-item-products.component.html',\r\n    styleUrls: ['./order-item-products.component.css']\r\n})\r\nexport class OrderItemProductsComponent implements OnInit {\r\n\r\n    @Input() quoteId: string;\r\n    public orderItemProducts: any = [];\r\n\r\n    constructor(private http: Http, private quoteSvc: QuoteService) { }\r\n\r\n    ngOnInit() {\r\n        this.getOrderItemProducts(this.quoteId);\r\n    }\r\n\r\n    private getOrderItemProducts(quoteId: string) {\r\n        this.quoteSvc.getQuoteItems(quoteId)\r\n            .then((resp: any) => {\r\n                if (resp.isok) {\r\n                    this.orderItemProducts = resp.model;\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order-item-products/order-item-products.component.ts","module.exports = \"<div>Test Mapics API</div>\\r\\n<button (click)=\\\"getSubmittalOrder()\\\">Get Submittal Order</button>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order/order.component.html\n// module id = ../../../../../src/app/orders/components/order/order.component.html\n// module chunks = orders.module","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport 'rxjs/Rx';\r\n\r\nimport { OrderService } from '../../services/order.service';\r\n\r\n@Component({\r\n    selector: 'order',\r\n    templateUrl: './order.component.html'\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n    constructor(private orderSvc: OrderService){ }\r\n\r\n    ngOnInit() { }\r\n\r\n    getSubmittalOrder() {\r\n        \r\n        this.orderSvc.getSubmittalOrder()\r\n            .then((resp: any) => {\r\n                var result = resp;\r\n                debugger;\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n                console.log(error);\r\n            });\r\n    }\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/order/order.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".row {\\r\\n  padding:0px;\\r\\n}\\r\\n\\r\\n.col-md-6 .col-md-4 .col-md-3{\\r\\n  padding: 0px;\\r\\n}\\r\\n\\r\\n.col-md-2{\\r\\n    padding-right:2%;\\r\\n}\\r\\n\\r\\n.clear-search-btn {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    top: 0.8em;\\r\\n    border: 0;\\r\\n    outline: 0;\\r\\n    background: none;\\r\\n    font-family: \\\"museo-sans\\\", sans-serif;\\r\\n    font-weight: 900;\\r\\n    color: #aaa;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.search-btn {\\r\\n    padding: 3px 10px 2px 10px;\\r\\n    margin: 0;\\r\\n    width: auto;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n\\r\\n.search-button-row {\\r\\n    padding-left: 0px;\\r\\n}\\r\\n\\r\\n#orderSearchBox {\\r\\n    display: inline-block;\\r\\n    width: 250px;\\r\\n}\\r\\n\\r\\n#orderSearchButton {\\r\\n    display: inline-block;\\r\\n    background-color: #b3e6ff;\\r\\n}\\r\\n\\r\\n.export-to-excel-btn {\\r\\n    -ms-flex-align: start;\\r\\n        align-items: flex-start;\\r\\n    background-attachment: scroll;\\r\\n    background-clip: border-box;\\r\\n    background-image: linear-gradient(rgb(241, 241, 241), rgb(209, 209, 209));\\r\\n    background-origin: padding-box;\\r\\n    background-size: auto;\\r\\n    border-bottom-color: rgb(184, 184, 184);\\r\\n    border-bottom-left-radius: 0px;\\r\\n    border-bottom-right-radius: 0px;\\r\\n    border-bottom-style: solid;\\r\\n    border-bottom-width: 1px;\\r\\n    border-image-outset: 0px;\\r\\n    border-image-repeat: stretch;\\r\\n    border-image-slice: 100%;\\r\\n    border-image-source: none;\\r\\n    border-image-width: 1;\\r\\n    border-left-color: rgb(184, 184, 184);\\r\\n    border-left-style: solid;\\r\\n    border-left-width: 1px;\\r\\n    border-right-color: rgb(184, 184, 184);\\r\\n    border-right-style: solid;\\r\\n    border-right-width: 1px;\\r\\n    border-top-color: rgb(184, 184, 184);\\r\\n    border-top-left-radius: 0px;\\r\\n    border-top-right-radius: 0px;\\r\\n    border-top-style: solid;\\r\\n    border-top-width: 1px;\\r\\n    box-shadow: none;\\r\\n    box-sizing: border-box;\\r\\n    color: rgb(77, 84, 93);\\r\\n    cursor: pointer;\\r\\n    display: block;\\r\\n    -webkit-filter: none;\\r\\n            filter: none;\\r\\n    float: right;\\r\\n    font-family: museo-sans, sans-serif;\\r\\n    font-size: 14px;\\r\\n    font-weight: 900;\\r\\n    height: 30px;\\r\\n    letter-spacing: normal;\\r\\n    line-height: 15px;\\r\\n    margin: 0px;\\r\\n    overflow-x: visible;\\r\\n    overflow-y: visible;\\r\\n    padding-bottom: 6px;\\r\\n    padding-left: 12px;\\r\\n    padding-right: 12px;\\r\\n    padding-top: 6px;\\r\\n    text-align: center;\\r\\n    -webkit-text-size-adjust: 100%;\\r\\n        -ms-text-size-adjust: 100%;\\r\\n            text-size-adjust: 100%;\\r\\n    text-transform: uppercase;\\r\\n    -ms-touch-action: manipulation;\\r\\n        touch-action: manipulation;\\r\\n    -webkit-user-select: none;\\r\\n       -moz-user-select: none;\\r\\n        -ms-user-select: none;\\r\\n            user-select: none;\\r\\n    vertical-align: middle;\\r\\n    white-space: nowrap;\\r\\n    width: 194px;\\r\\n    word-spacing: 0px;\\r\\n    -ms-writing-mode: lr-tb;\\r\\n        writing-mode: horizontal-tb;\\r\\n}\\r\\n\\r\\n.k-icon .k-i-excel {\\r\\n    width: 1em;\\r\\n    height: 1em; \\r\\n    -webkit-font-smoothing: antialiased;\\r\\n    font-size: 16px;\\r\\n    font-family: 'WebComponentsIcons';\\r\\n    font-style: normal;\\r\\n    font-variant: normal;\\r\\n    font-weight: normal;\\r\\n    line-height: 1;\\r\\n    speak: none;\\r\\n    text-transform: none;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n    padding-right: 5px;\\r\\n}\\r\\n\\r\\n.order-params-row {\\r\\n    background-color: #E5F2FA;\\r\\n    padding: 10px;\\r\\n    height: 60px;\\r\\n    margin: 15px;\\r\\n}\\r\\n\\r\\n.orders-search-labels {\\r\\n    box-sizing: content-box;\\r\\n    color: rgb(51, 51, 51);\\r\\n    cursor: default;\\r\\n    display: inline-block;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    font-size: 14px;\\r\\n    font-weight: 600;\\r\\n    height: 20px;\\r\\n    line-height: 20px;\\r\\n    margin-bottom: 5px;\\r\\n    max-width: 100%;\\r\\n    -webkit-text-size-adjust: 100%;\\r\\n        -ms-text-size-adjust: 100%;\\r\\n            text-size-adjust: 100%;\\r\\n}\\r\\n\\r\\n.kendo-autocomplete {\\r\\n    width: 100%;\\r\\n}\\r\\n.kendo-dropdownlist {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.kendo-datepicker {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.btn-reset-span {\\r\\n    padding-left: 40px;\\r\\n}\\r\\n\\r\\n.btn-refresh-all {\\r\\n    border: none;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    font-size: 16px;\\r\\n    background-color: #008CBA;\\r\\n    margin-top: 15px;\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.blue .codeColumn {\\r\\n    background-color: #D3E7F2;\\r\\n}\\r\\n\\r\\n.purple .codeColumn {\\r\\n    background-color: #D7D1EB;\\r\\n}\\r\\n\\r\\n.yellow .codeColumn {\\r\\n    background-color: #F5F0BC;\\r\\n}\\r\\n\\r\\n.lightgreen .codeColumn {\\r\\n    background-color: #C1D4BE;\\r\\n}\\r\\n\\r\\n.green .codeColumn {\\r\\n    background-color: #BCF5D3;\\r\\n}\\r\\n\\r\\n.grey .codeColumn {\\r\\n    background-color: #C2C8CF;\\r\\n}\\r\\n\\r\\n.pink .codeColumn {\\r\\n    background-color: #EBD1D8;\\r\\n}\\r\\n\\r\\n.k-grid a.order-field-anchortag {\\r\\n    color: #0080ff;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n#orderListGrid table, #orderListGrid th, #orderListGrid td {\\r\\n    border-bottom: 1px solid #cccccc;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n/*nav a:visited, a:link {\\r\\n    color: rgb(0, 161, 228);\\r\\n}*/\\r\\n\\r\\n \\r\\n \\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/orders-grid/orders-grid.component.css\n// module id = ../../../../../src/app/orders/components/orders-grid/orders-grid.component.css\n// module chunks = orders.module","module.exports = \"\\r\\n<project-tabs [user]=\\\"user\\\"></project-tabs>\\r\\n\\r\\n<div id=\\\"main-container\\\" class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"main-content\\\">\\r\\n        <div class=\\\"tab-header\\\">\\r\\n            <header>\\r\\n                <h4>Orders Submitted</h4>\\r\\n            </header>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"search-button-row\\\">\\r\\n                        <input #mainSearchBox\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"k-input k-textbox\\\"\\r\\n                               id=\\\"orderSearchBox\\\"\\r\\n                               name=\\\"orderSearchFilter\\\"\\r\\n                               placeholder=\\\"Search Orders..\\\" />\\r\\n                        <button id=\\\"orderSearchButton\\\" (click)=\\\"onMainSearchBoxClick($event)\\\">\\r\\n                            <span class=\\\"k-icon k-i-search\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <button type=\\\"button\\\" (click)=\\\"onExportToExcelClick()\\\" class=\\\"export-to-excel-btn\\\">\\r\\n                        <span class=\\\"k-icon k-i-excel\\\"></span>Export To Excel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"order-params-row\\\">\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <label for=\\\"userAutoComplete\\\" class=\\\"orders-search-labels\\\">User </label>\\r\\n                        <span class=\\\"kendo-input-autocomplete\\\">\\r\\n                            <kendo-autocomplete #userListNode\\r\\n                                                class=\\\"kendo-autocomplete\\\"\\r\\n                                                [data]=\\\"userList\\\"\\r\\n                                                [filterable]=\\\"true\\\"\\r\\n                                                (filterChange)=\\\"handleUserListChange($event)\\\"\\r\\n                                                (valueChange)=\\\"handleUserSelectionChange($event)\\\">\\r\\n                            </kendo-autocomplete>\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <label for=\\\"orderStatusDDL\\\" class=\\\"orders-search-labels\\\">Order Status </label>\\r\\n                        <kendo-dropdownlist #orderStatusNode\\r\\n                                            class=\\\"kendo-dropdownlist\\\"\\r\\n                                            [data]=\\\"orderStatusTypeList\\\"\\r\\n                                            [textField]=\\\"'text'\\\"\\r\\n                                            [valueField]=\\\"'value'\\\"\\r\\n                                            (valueChange)=\\\"handleOrderStatusListChange($event)\\\"\\r\\n                                            [valuePrimitive]=\\\"true\\\"\\r\\n                                            [(ngModel)]=\\\"defaultOrderStatus\\\">\\r\\n                        </kendo-dropdownlist>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <label for=\\\"userAutoComplete\\\" class=\\\"orders-search-labels\\\">Business Name </label>\\r\\n                        <kendo-autocomplete #businessNameNode\\r\\n                                            class=\\\"kendo-autocomplete\\\"\\r\\n                                            [data]=\\\"businessNameList\\\"\\r\\n                                            [filterable]=\\\"true\\\"\\r\\n                                            (filterChange)=\\\"handleBusinessNameChange($event)\\\"\\r\\n                                            (valueChange)=\\\"handleBusinessNameSelectionChange($event)\\\">\\r\\n                        </kendo-autocomplete>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-1\\\">\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <label for=\\\"fromDate\\\" class=\\\"orders-search-labels\\\">From Date </label>\\r\\n                        <kendo-datepicker #fromDateNode\\r\\n                                          class=\\\"kendo-datepicker\\\"\\r\\n                                          [format]=\\\"'MM/dd/yyyy'\\\"\\r\\n                                          [value]=\\\"startDateValue\\\"\\r\\n                                          (valueChange)=\\\"handleStartDateChange($event)\\\">\\r\\n                        </kendo-datepicker>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <label for=\\\"toDate\\\" class=\\\"orders-search-labels\\\">To Date </label>\\r\\n                        <kendo-datepicker #toDateNode\\r\\n                                          class=\\\"kendo-datepicker\\\"\\r\\n                                          [format]=\\\"'MM/dd/yyyy'\\\"\\r\\n                                          [value]=\\\"endDateValue\\\"\\r\\n                                          (valueChange)=\\\"handleEndDateChange($event)\\\">\\r\\n                        </kendo-datepicker>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-1\\\">\\r\\n                        <span class=\\\"btn-reset-span\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn-refresh-all\\\" (click)=\\\"onResetButtonClick()\\\">RESET</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <!--ORDERS GRID-->\\r\\n            <kendo-grid #grid=\\\"kendoGrid\\\" id=\\\"orderListGrid\\\"\\r\\n                        [kendoGridBinding]=\\\"orderListGridData\\\"\\r\\n                        [pageSize]=\\\"pageSize\\\"\\r\\n                        [skip]=\\\"skip\\\"\\r\\n                        [pageable]=\\\"{\\r\\n                              buttonCount: buttonCount,\\r\\n                              info: info,\\r\\n                              type: type,\\r\\n                              pageSizes: pageSizes,\\r\\n                              previousNext: previousNext\\r\\n                            }\\\"\\r\\n                        [columnMenu]=\\\"true\\\"\\r\\n                        [filterable]=\\\"true\\\"\\r\\n                        [sortable]=\\\"true\\\"\\r\\n                        [resizable]=\\\"true\\\"\\r\\n                        [rowClass]=\\\"rowCallback\\\">\\r\\n                <kendo-grid-column field=\\\"projectName\\\" media=\\\"(min-width: 450px)\\\" title=\\\"Project Name\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <a class=\\\"order-field-anchortag\\\"\\r\\n                           href=\\\"/v2/#/project/{{dataItem.projectId}}\\\">\\r\\n                            {{dataItem.projectName}}\\r\\n                        </a>\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"activeQuote\\\" media=\\\"(min-width: 450px)\\\" title=\\\"Active Quote\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.activeQuoteTitle}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"businessName\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Business Name\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.businessName}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"projectOwnerName\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Project Owner Name\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.projectOwnerName}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"dealerContractorName\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Dealer/Contractor Name\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.dealerContractorName}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"projectDate\\\" media=\\\"(min-width: 450px)\\\" title=\\\"Project Date\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.projectDate | date : 'shortDate'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"orderStatusDescription\\\" media=\\\"(min-width: 450px)\\\" title=\\\"Order Status\\\" \\r\\n                                   [class]=\\\"{'codeColumn': true}\\\"> \\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <a class=\\\"order-field-anchortag\\\" href=\\\"/v2/#/orderForm/{{dataItem.projectId}}/{{dataItem.quoteId}}/submitted\\\">\\r\\n                            {{dataItem.orderStatusDescription }}\\r\\n                        </a>\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"poNumber\\\" media=\\\"(min-width: 450px)\\\" title=\\\"PO Number\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.poNumber}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"erpOrderNumber\\\" media=\\\"(min-width: 450px)\\\" title=\\\"ERP Order Number\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.erpOrderNumber}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"poAttachmentName\\\" media=\\\"(min-width: 450px)\\\" title=\\\"PO Attachment\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <a class=\\\"order-field-anchortag\\\" href=\\\"/ProjectDashboard/GetPOAttachment?quoteId={{dataItem.quoteId}}&poAttachmentFileName={{dataItem.poAttachmentName}}\\\"\\r\\n                           target=\\\"_blank\\\">\\r\\n                            {{dataItem.poAttachmentName}}\\r\\n                        </a>\\r\\n\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"submitDate\\\" media=\\\"(min-width: 450px)\\\" title=\\\"Order Date\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.submitDate | date : 'shortDate'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"estimatedDeliveryDate\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Est. Delivery Date\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.estimatedDeliveryDate | date : 'shortDate'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"orderReleaseDate\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Order Release Date\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.orderReleaseDate | date : 'shortDate'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"totalListPrice\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Total List\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.totalListPrice | currency:'USD':true:'1.2-2'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"totalNetPrice\\\" media=\\\"(min-width: 450px)\\\" title=\\\"Total Net\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.totalNetPrice | currency:'USD':true:'1.2-2'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"totalSellPrice\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Total Sell\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.totalSellPrice | currency:'USD':true:'1.2-2'}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"darComStatus\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"DAR/COM Status\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.darComStatus}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"vrvODUcount\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"VRV ODU #\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.vrvODUcount}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"splitODUcount\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Split ODU #\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.splitODUcount}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"pricingTypeDescription\\\" media=\\\"(min-width: 450px)\\\"\\r\\n                                   title=\\\"Pricing Strategy\\\" [hidden]=\\\"true\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        {{dataItem.pricingTypeDescription}}\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n\\r\\n                <ng-template kendoGridDetailTemplate let-dataItem>\\r\\n                    <section>\\r\\n                        <order-item-products [quoteId]=\\\"dataItem.quoteId\\\"></order-item-products>\\r\\n                    </section>\\r\\n                </ng-template>\\r\\n                <kendo-grid-excel fileName=\\\"Orders.xlsx\\\"></kendo-grid-excel> \\r\\n            </kendo-grid>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--kendo dialog export to excel -->\\r\\n    <kendo-dialog *ngIf=\\\"exportToExcelDialogOpen\\\" \\r\\n                  title=\\\"{{exportToExcelDialogTitle}}\\\" \\r\\n                  (close)=\\\"closeExportToExcelDialog()\\\" >\\r\\n        <p>{{exportToExcelDialogMessage}}</p> <br />\\r\\n        <kendo-dropdownlist #exportToExcelNode\\r\\n                            class=\\\"kendo-dropdownlist\\\"\\r\\n                            [data]=\\\"exportToExcelOptions\\\"\\r\\n                            [(ngModel)]=\\\"defaultExportToExcelOption\\\">\\r\\n\\r\\n        </kendo-dropdownlist>\\r\\n        <br /><br />\\r\\n        <kendo-dialog-actions>\\r\\n            <button kendoButton class=\\\"k-button\\\" (click)=\\\"exportToExcel(grid)\\\" primary=\\\"true\\\" data-toggle=\\\"modal\\\" icon=\\\"file-excel\\\">Export</button>\\r\\n\\r\\n            <kendo-excelexport [data]=\\\"orderListWithProducts\\\" fileName=\\\"OrdersWithProducts.xlsx\\\" #excelexport>\\r\\n                <kendo-excelexport-column field=\\\"projectName\\\" title=\\\"Project Name\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"activeQuoteTitle\\\" title=\\\"Active Quote\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"businessName\\\" title=\\\"Business Name\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"projectOwnerName\\\" title=\\\"Project Owner Name\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"dealerContractorName\\\" title=\\\"Dealer/Contractor Name\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"projectDate\\\" title=\\\"Project Date\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"orderStatusDescription\\\" title=\\\"Order Status\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"poNumber\\\" title=\\\"PO Number\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"erpOrderNumber\\\" title=\\\"ERP Order Number\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"poAttachmentName\\\" title=\\\"PO Attachment\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"submitDate\\\" title=\\\"Order Date\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"estimatedDeliveryDate\\\" title=\\\"Est. Delivery Date\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"orderReleaseDate\\\" title=\\\"Order Release Date\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"totalListPrice\\\" title=\\\"Total List\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"totalNetPrice\\\" title=\\\"Total Net\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"totalSellPrice\\\" title=\\\"Total Sell\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"darComStatus\\\" title=\\\"DAR/COM Status\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"vrvODUcount\\\" title=\\\"VRV ODU #\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"splitODUcount\\\" title=\\\"Split ODU #\\\">\\r\\n                </kendo-excelexport-column>\\r\\n                <kendo-excelexport-column field=\\\"pricingTypeDescription\\\" title=\\\"Pricing Strategy\\\">\\r\\n                </kendo-excelexport-column>\\r\\n               \\r\\n                <kendo-excelexport-column-group title=\\\"Products\\\" [headerCellOptions]=\\\"{ textAlign: 'center' }\\\">\\r\\n                    <kendo-excelexport-column field=\\\"productNumber\\\" title=\\\"Product Number\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                    <kendo-excelexport-column field=\\\"description\\\" title=\\\"Product Description\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                    <kendo-excelexport-column field=\\\"quantity\\\" title=\\\"Qty\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                    <kendo-excelexport-column field=\\\"listPrice\\\" title=\\\"List Price Each\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                    <kendo-excelexport-column field=\\\"netPrice\\\" title=\\\"Net Price Each\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                    <kendo-excelexport-column field=\\\"extListPrice\\\" title=\\\"Ext. List Price\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                    <kendo-excelexport-column field=\\\"extNetPrice\\\" title=\\\"Ext. Net Price\\\">\\r\\n                    </kendo-excelexport-column>\\r\\n                </kendo-excelexport-column-group>\\r\\n            </kendo-excelexport>\\r\\n        </kendo-dialog-actions>\\r\\n    </kendo-dialog>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/orders-grid/orders-grid.component.html\n// module id = ../../../../../src/app/orders/components/orders-grid/orders-grid.component.html\n// module chunks = orders.module"," \r\nimport { Component, ViewEncapsulation, ViewChild, AfterViewInit, OnInit } from '@angular/core'; \r\nimport { Router, ActivatedRoute } from '@angular/router'; \r\nimport { GridModule, GridComponent, RowClassArgs } from '@progress/kendo-angular-grid';\r\n\r\nimport {\r\n    ExcelExportData, Workbook,\r\n    WorkbookSheetColumn, WorkbookSheetRow,\r\n    WorkbookSheetRowCell, WorkbookSheet\r\n} from '@progress/kendo-angular-excel-export';\r\n \r\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\r\n\r\nimport { ToastrService } from '../../../shared/services/common/toastr.service';\r\nimport { OrderService } from './../../services/order.service';\r\nimport { QuoteService } from '../../../quotes/services/quote.service';\r\nimport { SearchOrders } from '../../../shared/models/searchOrders';\r\n\r\nimport * as jQuery from 'jquery';\r\n\r\n@Component({\r\n    selector: 'orders-grid',\r\n    templateUrl: './orders-grid.component.html',\r\n    styleUrls: ['./orders-grid.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class OrdersGridComponent implements OnInit, AfterViewInit {\r\n\r\n    /* variable declarations */\r\n    @ViewChild(\"mainSearchBox\") mainSearchBox;\r\n    @ViewChild(\"userListNode\") userListNode;\r\n    @ViewChild(\"orderStatusNode\") orderStatusNode;\r\n    @ViewChild(\"businessNameNode\") businessNameNode;\r\n    @ViewChild(\"fromDateNode\") fromDateNode;\r\n    @ViewChild(\"toDateNode\") toDateNode;\r\n    @ViewChild(\"exportToExcelNode\") exportToExcelNode;\r\n    @ViewChild(\"excelexport\") excelexport;\r\n    @ViewChild(GridComponent) grid: GridComponent;\r\n\r\n    @BlockUI() blockUI: NgBlockUI;\r\n\r\n    public orderListGridData: any = [];\r\n    public pageSize = 20;\r\n    public skip = 0;\r\n    public buttonCount = 20;\r\n    public info = true;\r\n    public type: 'numeric' | 'input' = 'numeric';\r\n    public pageSizes = true;\r\n    public previousNext = true;\r\n\r\n    public default365DaysOrderList: any = [];\r\n    public fiveYearOrderItemList: any = [];\r\n    public orderListWithProducts: any = [];\r\n    public productListItems: any = [];\r\n\r\n    public user: any;\r\n    public sourceUserList: any = [];\r\n    public userList: any = [];\r\n    public sourceBusinessNameList: any = [];\r\n    public businessNameList: any = [];\r\n    public exportToExcelOptions: Array<string> = [\"Orders\", \"Orders with products\"];\r\n    public defaultExportToExcelOption: string = \"Orders\";\r\n\r\n    public orderStatusTypeList: Array<{ text: string, value: any }> = [];;\r\n    public ddlPlaceHolder = { text: 'All', value: null };\r\n    public defaultOrderStatus: number = 0;\r\n\r\n    public startDateValue: Date;\r\n    public endDateValue: Date;\r\n    public startDateFiveYear: Date; \r\n\r\n    public exportToExcelDialogOpen: boolean = false;\r\n    public exportToExcelDialogTitle: string;\r\n    public exportToExcelDialogMessage: string;\r\n    public exportToExcelTemplate: boolean = false;\r\n\r\n    public searchParams: SearchOrders = new SearchOrders();\r\n    public inputParams: boolean = false;\r\n\r\n    /**\r\n     * Dependency Injection \r\n     **/\r\n    constructor(private toastrSvc: ToastrService, \r\n        private orderSvc: OrderService,\r\n        private quoteSvc: QuoteService,  \r\n        private router: Router,\r\n        private route: ActivatedRoute,   \r\n    ) {\r\n        this.user = this.route.snapshot.data['currentUser'].model;\r\n    }\r\n\r\n    /** \r\n     * angular life cycle hooks\r\n     */\r\n    public ngOnInit(): void {\r\n       \r\n        //set the default 365 date range\r\n        this.endDateValue = new Date();\r\n        this.startDateValue = this.addDays(new Date(), parseInt('364')); //set initial list to last 365 days\r\n        this.startDateFiveYear = this.addDays(new Date(), parseInt('1825')); \r\n         \r\n        this.getOrderItemsForLast365Days(); // Fetch the item list with the initial state\r\n        this.getUserList(); // user list for User autocomplete box\r\n        this.getOrderStatusTypeList();\r\n        this.getBusinessNameList();\r\n        this.defaultOrderStatus = 0; //set dropdown list to 'All'\r\n    } \r\n\r\n    public ngAfterViewInit(): void {\r\n        // Expand the first row initially\r\n        //this.grid.expandRow(0);\r\n        jQuery(\".k-grid .k-filter-row\").hide();\r\n    }\r\n\r\n    /**\r\n     * event handlers\r\n     */\r\n    public onMainSearchBoxClick(eventValue: any) {\r\n        this.FilterWithAllSearchParams();\r\n    }\r\n\r\n    public handleUserListChange(eventValue: any) {\r\n        this.userList = this.sourceUserList\r\n                            .filter((s) => s.toLowerCase().indexOf(eventValue.toLowerCase()) !== -1);\r\n    }\r\n\r\n    public handleUserSelectionChange(eventValue: any) {\r\n        if (eventValue != \"\")\r\n            this.orderListGridData = this.FilterUserSelectionChange(eventValue);\r\n        else \r\n            this.FilterWithAllSearchParams();\r\n    }\r\n\r\n    public handleBusinessNameChange(eventValue: any) {\r\n        this.businessNameList = this.sourceBusinessNameList\r\n                                    .filter((x) => x.toLowerCase().indexOf(eventValue.toLowerCase()) !== -1);\r\n    }\r\n\r\n    public handleBusinessNameSelectionChange(eventValue: any) {\r\n        if (eventValue != \"\")\r\n            this.orderListGridData = this.FilterBusinessNameSelectionChange(eventValue);\r\n        else \r\n            this.FilterWithAllSearchParams();\r\n    }\r\n\r\n    public handleOrderStatusListChange(eventValue: any) {\r\n        let dropdownSelectionText = this.orderStatusTypeList.find((obj) =>\r\n            { return obj.value === eventValue }).text;\r\n       \r\n       this.FilterWithAllSearchParams();\r\n    }\r\n\r\n    public handleStartDateChange(event: any) {\r\n        if (this.fromDateNode.value > this.toDateNode.value) {\r\n            this.openDateSelectionErrorDialog();\r\n        }\r\n        else if ((this.toDateNode.value.getYear() - this.fromDateNode.value.getYear()) > 5) {\r\n            this.openDateRangeErrorDialog();\r\n        }\r\n        else {\r\n            this.FilterWithAllSearchParams();\r\n        }\r\n    }\r\n\r\n    public handleEndDateChange(event: any) {\r\n        if (this.fromDateNode.value > this.toDateNode.value) {\r\n            this.openDateSelectionErrorDialog();\r\n        }\r\n        else if ((this.toDateNode.value.getYear() - this.fromDateNode.value.getYear()) > 5) {\r\n            this.openDateRangeErrorDialog();\r\n        }\r\n        else {\r\n            this.FilterWithAllSearchParams();\r\n        }\r\n    }\r\n \r\n    public FilterUserSelectionChange(userNameVal: string): OrdersGridComponent {\r\n        return this.orderListGridData.filter((x) => { return x.projectOwnerName.trim() == userNameVal.trim() });\r\n    }\r\n\r\n    public FilterBusinessNameSelectionChange(businessNameVal: string): OrdersGridComponent {\r\n        return this.orderListGridData.filter((x) => { return x.businessName.trim() == businessNameVal.trim() });\r\n    }\r\n\r\n    //on date time picker change, also do further filters after server trip\r\n    public FilterWithAllSearchParams() {\r\n\r\n        if (this.fromDateNode.value.toLocaleString() == this.startDateValue.toLocaleString() &&\r\n            this.toDateNode.value.toLocaleString() == this.endDateValue.toLocaleString())\r\n        {\r\n            this.orderListGridData = this.default365DaysOrderList;\r\n        }\r\n        else if (this.fromDateNode.value > this.startDateFiveYear) {\r\n            this.orderListGridData = this.fiveYearOrderItemList\r\n                .filter((x) => {\r\n                    let convertedSubmitDate = new Date(Date.parse(x.submitDate));\r\n\r\n                    return convertedSubmitDate >= this.fromDateNode.value\r\n                        && convertedSubmitDate <= this.toDateNode.value;\r\n                });\r\n        }\r\n        else {\r\n            this.searchParams = {\r\n                startDate: this.fromDateNode.value.toLocaleDateString(),\r\n                endDate: this.toDateNode.value.toLocaleDateString()\r\n            }\r\n\r\n            this.orderListGridData = this.getOrdersBasedOnSearchParams(this.searchParams, this.inputParams = true);\r\n        }\r\n\r\n        this.FilterAgainWithRemainingInputParams(this.orderListGridData);  //filter more with other possible search params;\r\n    }\r\n\r\n    /**\r\n     * api calls through services\r\n     */\r\n    public getOrderItemsForLast365Days() {\r\n         \r\n        //this.loadingIconSvc.Start(jQuery(\"#orderListGrid\"));\r\n        this.blockUI.start('Loading...');\r\n        \r\n        return this.orderSvc.getLast365DaysOrderItemList()\r\n            .subscribe(data => {\r\n                this.fiveYearOrderItemList = data.model;\r\n\r\n                //var initialDate365Days = this.getFormattedDate(this.startDateValue, \"inCSharpFormat\");\r\n\r\n                this.default365DaysOrderList = this.fiveYearOrderItemList\r\n                    .filter((obj) => {\r\n                        let convertedSubmitDate = new Date(Date.parse(obj.submitDate));\r\n\r\n                        return convertedSubmitDate >= this.startDateValue\r\n                    });\r\n\r\n                this.orderListGridData = this.default365DaysOrderList;\r\n\r\n                //this.loadingIconSvc.Stop(jQuery(\"#orderListGrid\"));\r\n                this.blockUI.stop();\r\n            })\r\n    } \r\n\r\n    public getOrdersBasedOnSearchParams(searchParams: SearchOrders, inputParams: boolean) {\r\n        this.blockUI.start('Loading...');\r\n        //this.loadingIconSvc.Start(jQuery(\"#orderListGrid\"));    \r\n        \r\n        return this.orderSvc.getOrdersBasedOnSearchParams(searchParams)\r\n            .subscribe(data => {\r\n                this.orderListGridData = data.model;\r\n                this.blockUI.stop();\r\n                //this.loadingIconSvc.Stop(jQuery(\"#orderListGrid\"));\r\n            });\r\n    }\r\n\r\n    public getUserList() {\r\n        return this.orderSvc.getUserList()\r\n            .subscribe(data => {\r\n                this.sourceUserList = data.model.map(x => x.userFullName);\r\n            })\r\n    }\r\n\r\n    public getBusinessNameList() {\r\n        return this.orderSvc.getBusinessNameList()\r\n            .subscribe(data => {\r\n                this.sourceBusinessNameList = data.model.map(x => x.businessName);\r\n            })\r\n    }\r\n\r\n    public getOrderStatusTypeList() {\r\n        return this.orderSvc.getOrderStatusList()\r\n            .subscribe(data => {\r\n                this.orderStatusTypeList = [{ text: 'All', value: 0 }];\r\n\r\n                data.model.forEach((x, index) => {\r\n                    this.orderStatusTypeList.push({ text: x.displayText, value: x.keyId });\r\n                })\r\n\r\n                this.orderStatusTypeList.sort((a, b) => a.text < b.text ? -1 : a.text > b.text ? 1 : 0// sort by descending\r\n                );\r\n                 \r\n            });\r\n    }\r\n\r\n    /**\r\n     *  UI button Click Events\r\n     * */\r\n    public closeExportToExcelDialog() {\r\n        this.exportToExcelDialogOpen = false;\r\n    }\r\n\r\n    public onExportToExcelClick() {\r\n        this.openExportToExcelDialog();\r\n    }\r\n\r\n    public exportToExcel(grid: GridComponent): void {\r\n        //this.loadingIconSvc.Start(jQuery(\"#orderListGrid\")); \r\n\r\n        if (this.exportToExcelNode.value == \"Orders\") {\r\n            grid.data = this.orderListGridData;\r\n            grid.saveAsExcel();\r\n        }\r\n        else {\r\n            this.excelexport.save();\r\n        }\r\n\r\n        this.exportToExcelDialogOpen = false;\r\n        //this.loadingIconSvc.Stop(jQuery(\"#orderListGrid\")); \r\n    }\r\n\r\n    public onResetButtonClick() {\r\n        this.mainSearchBox.nativeElement.value = \"\";\r\n        this.userListNode.text = \"\";\r\n        this.businessNameNode.text = \"\";\r\n        this.defaultOrderStatus = 0;    \r\n\r\n        this.endDateValue = new Date();\r\n        this.startDateValue = this.addDays(new Date(), parseInt('365')); //set initial list to last 365 days\r\n\r\n        this.orderListGridData = this.default365DaysOrderList;\r\n    }\r\n\r\n    /* Common functions */\r\n    public addDays(date, days) {\r\n        var dateInMs = date.setDate(date.getDate() - days);\r\n        return new Date(dateInMs);\r\n    }\r\n    \r\n    public openDateSelectionErrorDialog() {\r\n        this.toastrSvc.Warning(\"'From Date' can not be less than 'To Date'. Please, select another date range.\")\r\n        this.onResetButtonClick();\r\n    }\r\n\r\n    public openDateRangeErrorDialog() {\r\n        this.toastrSvc.Warning(\"'Your selection returned large set of data. Please shorten your date range selection.\")\r\n        this.onResetButtonClick();\r\n    }\r\n\r\n    public openExportToExcelDialog() {\r\n        this.exportToExcelDialogOpen = true;\r\n        this.exportToExcelDialogTitle = \"Export To Excel\";\r\n        this.exportToExcelDialogMessage = \"Please select an export type:\";\r\n\r\n        this.orderListWithProducts = [];\r\n\r\n        this.orderListGridData.forEach((order, index) => {\r\n            this.quoteSvc.getQuoteItems(order.quoteId)\r\n                .then((resp: any) => {\r\n                    if (resp.isok) {\r\n                        this.productListItems = resp.model;                      \r\n\r\n                        this.productListItems.forEach((product, index) => {\r\n                            let extNetPriceValue = product.netPrice * product.quantity; //create additional properties by computing\r\n                            let extListPriceValue = product.listPrice * product.quantity; //create additional properties by computing\r\n                            Object.assign(product, { extNetPrice: extNetPriceValue, extListPrice: extListPriceValue });\r\n\r\n                            this.orderListWithProducts.push(Object.assign({}, order, product)); //final object for excel export with products\r\n                        });                         \r\n                    }\r\n\r\n                }).catch(error => {\r\n                    //console.log('Retrieval error: ${error}');\r\n                    console.log(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Filter with all input params\r\n     * @param recycledOrderListData\r\n     */\r\n    /**/\r\n    public FilterAgainWithRemainingInputParams(recycledOrderListData: any) {\r\n\r\n        let searchVal = this.mainSearchBox.nativeElement.value;\r\n        let userNameVal = this.userListNode.value;\r\n        let orderStatusVal = this.orderStatusNode.value;\r\n        let businessNameVal = this.businessNameNode.value;\r\n        let orderStatusDesc = this.orderStatusTypeList.find((obj) => { return obj.value == orderStatusVal }).text;\r\n\r\n        var orderListDataToReturn = null;\r\n\r\n        //empty input possiblility\r\n        //all empty except for 'All' as default order status\r\n        if ((searchVal == \"\") && (userNameVal == \"\") && (businessNameVal == \"\")) {\r\n            if (orderStatusDesc != 'All') {\r\n                orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                    return (y.orderStatusDescription === orderStatusDesc);\r\n                });\r\n            }\r\n            else {\r\n                orderListDataToReturn = recycledOrderListData;\r\n            }\r\n        }\r\n        //all input having some value possiblities\r\n        //search box, user, and business boxes have value\r\n        if ((searchVal != \"\") && (userNameVal != \"\") && (businessNameVal != \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.projectOwnerName.trim() == userNameVal.trim() &&\r\n                        y.orderStatusDescription == orderStatusDesc &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n                else {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.projectOwnerName.trim() == userNameVal.trim() &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n            });\r\n        }\r\n        //atleast two inputs having value possiblities\r\n        //user and business boxes have value\r\n        else if ((searchVal == \"\") && (userNameVal != \"\") && (businessNameVal != \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.projectOwnerName.trim() == userNameVal.trim() &&\r\n                        y.orderStatusDescription == orderStatusDesc &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n                else {\r\n                    return (y.projectOwnerName == userNameVal.trim() &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n            });\r\n        }\r\n        //search and user boxes have value\r\n        else if ((searchVal != \"\") && (userNameVal != \"\") && (businessNameVal == \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.projectOwnerName.trim() == userNameVal.trim() &&\r\n                        y.orderStatusDescription == orderStatusDesc);\r\n                }\r\n                else {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.projectOwnerName.trim() == userNameVal.trim());\r\n                }\r\n            });\r\n        }\r\n        // search and business boxes have value\r\n        else if ((searchVal != \"\") && (userNameVal == \"\") && (businessNameVal != \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.orderStatusDescription == orderStatusDesc &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n                else {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n            });\r\n        }\r\n        //only one input with a value possibilities\r\n        // only business box has a value\r\n        else if ((searchVal == \"\") && (userNameVal == \"\") && (businessNameVal != \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.orderStatusDescription == orderStatusDesc &&\r\n                        y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n                else {\r\n                    return (y.businessName.trim() == businessNameVal.trim());\r\n                }\r\n            });\r\n        }\r\n        // only user box has a value\r\n        else if ((searchVal == \"\") && (userNameVal != \"\") && (businessNameVal == \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.projectOwnerName.trim() == userNameVal.trim() &&\r\n                        y.orderStatusDescription == orderStatusDesc);\r\n                }\r\n                else {\r\n                    return (y.projectOwnerName.trim() == userNameVal.trim());\r\n                }\r\n            });\r\n        }\r\n        // only serach box has a value\r\n        else if ((searchVal != \"\") && (userNameVal == \"\") && (businessNameVal == \"\")) {\r\n            orderListDataToReturn = recycledOrderListData.filter((y) => {\r\n                if (orderStatusDesc != 'All') {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1 &&\r\n                        y.orderStatusDescription == orderStatusDesc);\r\n                }\r\n                else {\r\n                    return (y.projectName.indexOf(searchVal) !== -1 ||\r\n                        y.activeQuoteTitle.indexOf(searchVal) !== -1 ||\r\n                        y.poNumber.indexOf(searchVal) !== -1);\r\n                }\r\n            });\r\n        }      \r\n\r\n        this.orderListGridData = orderListDataToReturn;\r\n    }\r\n\r\n    public rowCallback = (context: RowClassArgs) => {\r\n        switch (context.dataItem.orderStatusDescription) {\r\n            case 'Submitted':\r\n                return { blue: true };\r\n            case 'Picked':\r\n                return { purple: true };\r\n            case 'Awaiting CSR':\r\n                return { yellow: true };\r\n            case 'Accepted':\r\n                return { lightgreen: true };\r\n            case 'Shipped':\r\n                return { green: true };\r\n            case 'Canceled':\r\n                return { grey: true };\r\n            case 'In Process':\r\n                return { pink: true };\r\n            default:\r\n                return {};\r\n        }\r\n    }\r\n}\r\n     \r\n \n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/components/orders-grid/orders-grid.component.ts","\r\nexport * from './components/order/order.component';\r\nexport * from './components/order-form/order-form.component';\r\nexport * from './components/order-item-products/order-item-products.component';\r\nexport * from './components/order-form-quote-items/order-form-quote-items.component';\r\nexport * from './components/orders-grid/orders-grid.component';\r\nexport * from './services/order-resolver.service';\r\nexport * from './services/order.service';\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/index.ts","\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { OrderComponent, OrdersGridComponent, OrderFormComponent } from './index';\nimport { CurrentUserResolver } from '../shared/services/common/user-resolver.service';\nimport { OrderResolver } from './services/order-resolver.service';\n\nconst orderRoutes: Routes = [\n    {\n        path: 'order', component: OrderComponent\r\n    },\n    {\n        path: 'order-list',\r\n        component: OrdersGridComponent,\r\n        resolve: { currentUser: CurrentUserResolver }\r\n    },\n    {\r\n        path: 'orderForm/:projectid/:quoteid/:recordState',\r\n        component: OrderFormComponent,\r\n        resolve: {\r\n            orderFormModel: OrderResolver,\r\n            currentUser: CurrentUserResolver\r\n        }\r\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(orderRoutes)],\n    exports: [RouterModule],\n})\nexport class OrdersRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/orders-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\r\nimport { GridModule, ExcelModule } from '@progress/kendo-angular-grid';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { AutoCompleteModule } from '@progress/kendo-angular-dropdowns';\r\nimport { PopupModule } from '@progress/kendo-angular-popup';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs'; \r\nimport { DialogModule } from '@progress/kendo-angular-dialog';\r\nimport { UploadModule } from '@progress/kendo-angular-upload'; \r\n\r\nimport { QuotesModule } from '../quotes/quotes.module';\r\nimport { AddressModule } from '../address/address.module';\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\n\r\nimport {    \r\n    OrderComponent,\r\n    OrderFormComponent,\r\n    OrderFormQuoteItemsComponent,\r\n    OrderItemProductsComponent,\r\n    OrdersGridComponent,\r\n    OrderResolver,\r\n    OrderService\r\n} from './index';\r\n\r\nexport const ORDER_COMPONENTS = [     \r\n    OrderComponent,\r\n    OrderFormComponent,\r\n    OrderFormQuoteItemsComponent,\r\n    OrderItemProductsComponent,\r\n    OrdersGridComponent,\r\n]\r\n\r\n@NgModule({\r\n    imports: [   \r\n        ButtonsModule,\r\n        GridModule,\r\n        ExcelModule,\r\n        DropDownsModule,\r\n        PopupModule,\r\n        InputsModule,\r\n        DateInputsModule, \r\n        DialogModule,\r\n        UploadModule,\r\n        AutoCompleteModule,\r\n        SharedModule.forRoot(),\r\n        QuotesModule,\r\n        AddressModule,\r\n        OrdersRoutingModule\r\n    ],\r\n    exports: ORDER_COMPONENTS,\r\n    declarations: ORDER_COMPONENTS,\r\n    providers: [\r\n        OrderResolver,\r\n        OrderService\r\n    ]\r\n})\r\nexport class OrdersModule { }\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/orders.module.ts","import { Injectable } from '@angular/core';\r\nimport {  ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'; \r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n \r\nimport { OrderService } from './order.service';\r\n\r\n@Injectable()\r\nexport class OrderResolver {\r\n\r\n    constructor(private orderSvc: OrderService) {\r\n    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        let projectId = route.params['projectid'];\r\n        let quoteId = route.params['quoteid'];\r\n        let recordState = route.params['recordState'];\r\n\r\n        if (recordState.toLowerCase() == \"new\") {\r\n            return this.orderSvc.orderForm(projectId, quoteId)\r\n                .map(orderFormModel => {\r\n                    if (orderFormModel) {\r\n                        return orderFormModel;\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }).catch(error => {\r\n                    //console.log('Retrieval error: ${error}');\r\n                    console.log(error);\r\n                    return Observable.of(null);\r\n                });\r\n        } else if (recordState.toLowerCase() == \"submitted\") {\r\n            return this.orderSvc.getSubmittedOrderForm(quoteId)\r\n                .map(orderFormModel => {\r\n                    if (orderFormModel) {\r\n                        return orderFormModel;\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }).catch(error => {\r\n                    //console.log('Retrieval error: ${error}');\r\n                    console.log(error);\r\n                    return Observable.of(null);\r\n                });\r\n        }\r\n        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/services/order-resolver.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n\r\nimport { ToastrService } from '../../shared/services/common/toastr.service';\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n\r\n    constructor(private toastrSvc: ToastrService, private http: Http) { }\r\n\r\n    private headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        // 'dataType': 'json',\r\n        'Accept': 'application/json'\r\n    });\r\n\r\n    public extractData(res: Response) {\r\n        let body = res.json();\r\n        return body || {};\r\n    }\r\n\r\n    public extractHtml(res: any) {\r\n        return res._body;\r\n    }\r\n\r\n    public handleError(error: any) {\r\n        // In a real world app, we might use a remote logging infrastructure\r\n        // We'd also dig deeper into the error to get a better message\r\n\r\n        console.error(error); // log to console instead\r\n        this.toastrSvc.Error(error.statusText);\r\n        return Observable.throw(error.statusText);\r\n    }\r\n\r\n    //Test\r\n    public getSubmittalOrder() {\r\n        return this.http.get(\"/api/Order/GetSubmittalOrder\", { headers: this.headers }).toPromise()\r\n            .then((resp: Response) => {\r\n                debugger\r\n                return resp;\r\n\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public orderForm(projectId: any, quoteId: any): Observable<any> {\r\n        return this.http.get(\"/api/Order/OrderForm?projectId=\" + projectId + \"&quoteId=\" + quoteId, { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public getSubmittedOrderForm(quoteId: any): Observable<any> {\r\n        return this.http.get(\"/api/Order/GetSubmittedOrder?quoteId=\" + quoteId, { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public postOrder(order: any): Observable<any> {\r\n        return this.http.post(\"/api/Order/PostOrder\", order, { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public sendOrderEmail(order: any): Observable<any> {\r\n        return this.http.post(\"/ProjectDashboard/SendEmailOrderSubmit\", order, { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //orders grid api calls\r\n    public getLast365DaysOrderItemList(): Observable<any> {\r\n        return this.http.get(\"/api/Order/GetOrdersForGrid\", { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public getUserList(): Observable<any> {\r\n        return this.http.get(\"/api/User/GetUsersViewable\", { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public getOrderStatusList(): Observable<any> {\r\n        return this.http.get(\"/api/Order/GetOrderStatusTypes\", { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public getBusinessNameList(): Observable<any> {\r\n        return this.http.get(\"/api/Business/GetBusinessList\", { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public getOrderItemsForLast365Days(): Observable<any> {\r\n        return this.http.get(\"/api/Order/GetOrdersForGrid\", { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public getOrdersBasedOnSearchParams(searchParams: any): Observable<any> {\r\n        return this.http.post(\"/api/Order/GetOrdersBasedOnSearchParams\", searchParams, { headers: this.headers })\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/orders/services/order.service.ts","export class SearchOrders {\r\n \r\n    public startDate: string;\r\n    public endDate: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/dttp-Projects/dc-lazyloading-angularcli/DPOweb.v2/src/app/shared/models/searchOrders.ts"],"sourceRoot":"webpack:///"}