//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DPO.Domain.DaikinUniversity.DaikinUN1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LOWSSoap", Namespace="http://www.cornerstoneondemand.com/Webservices/LO/")]
    public partial class LOWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LaunchLOOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLOOperationCompleted;
        
        private System.Threading.SendOrPostCallback WithdrawOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LOWS() {
            this.Url = global::DPO.Domain.DaikinUniversity.Properties.Settings.Default.DPO_Domain_DaikinUniversity_DaikinUN1_LOWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LaunchLOCompletedEventHandler LaunchLOCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event RequestCompletedEventHandler RequestCompleted;
        
        /// <remarks/>
        public event CompleteCompletedEventHandler CompleteCompleted;
        
        /// <remarks/>
        public event RemoveLOCompletedEventHandler RemoveLOCompleted;
        
        /// <remarks/>
        public event WithdrawCompletedEventHandler WithdrawCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cornerstoneondemand.com/Webservices/LO/LaunchLO", RequestNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", ResponseNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LaunchLO(string corpName, string userName, string object_id) {
            object[] results = this.Invoke("LaunchLO", new object[] {
                        corpName,
                        userName,
                        object_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LaunchLOAsync(string corpName, string userName, string object_id) {
            this.LaunchLOAsync(corpName, userName, object_id, null);
        }
        
        /// <remarks/>
        public void LaunchLOAsync(string corpName, string userName, string object_id, object userState) {
            if ((this.LaunchLOOperationCompleted == null)) {
                this.LaunchLOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLaunchLOOperationCompleted);
            }
            this.InvokeAsync("LaunchLO", new object[] {
                        corpName,
                        userName,
                        object_id}, this.LaunchLOOperationCompleted, userState);
        }
        
        private void OnLaunchLOOperationCompleted(object arg) {
            if ((this.LaunchLOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LaunchLOCompleted(this, new LaunchLOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cornerstoneondemand.com/Webservices/LO/Register", RequestNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", ResponseNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Register(string corpName, string userName, string loId, string comment, string ccFee) {
            object[] results = this.Invoke("Register", new object[] {
                        corpName,
                        userName,
                        loId,
                        comment,
                        ccFee});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string corpName, string userName, string loId, string comment, string ccFee) {
            this.RegisterAsync(corpName, userName, loId, comment, ccFee, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string corpName, string userName, string loId, string comment, string ccFee, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        corpName,
                        userName,
                        loId,
                        comment,
                        ccFee}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cornerstoneondemand.com/Webservices/LO/Request", RequestNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", ResponseNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Request(string corpName, string userName, string loId) {
            object[] results = this.Invoke("Request", new object[] {
                        corpName,
                        userName,
                        loId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RequestAsync(string corpName, string userName, string loId) {
            this.RequestAsync(corpName, userName, loId, null);
        }
        
        /// <remarks/>
        public void RequestAsync(string corpName, string userName, string loId, object userState) {
            if ((this.RequestOperationCompleted == null)) {
                this.RequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestOperationCompleted);
            }
            this.InvokeAsync("Request", new object[] {
                        corpName,
                        userName,
                        loId}, this.RequestOperationCompleted, userState);
        }
        
        private void OnRequestOperationCompleted(object arg) {
            if ((this.RequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCompleted(this, new RequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cornerstoneondemand.com/Webservices/LO/Complete", RequestNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", ResponseNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Complete(string corpName, string userName, string LoID, string comment, string Score) {
            object[] results = this.Invoke("Complete", new object[] {
                        corpName,
                        userName,
                        LoID,
                        comment,
                        Score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteAsync(string corpName, string userName, string LoID, string comment, string Score) {
            this.CompleteAsync(corpName, userName, LoID, comment, Score, null);
        }
        
        /// <remarks/>
        public void CompleteAsync(string corpName, string userName, string LoID, string comment, string Score, object userState) {
            if ((this.CompleteOperationCompleted == null)) {
                this.CompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteOperationCompleted);
            }
            this.InvokeAsync("Complete", new object[] {
                        corpName,
                        userName,
                        LoID,
                        comment,
                        Score}, this.CompleteOperationCompleted, userState);
        }
        
        private void OnCompleteOperationCompleted(object arg) {
            if ((this.CompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteCompleted(this, new CompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cornerstoneondemand.com/Webservices/LO/RemoveLO", RequestNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", ResponseNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveLO(string corpName, string userName, string loId, string reason, string comment) {
            object[] results = this.Invoke("RemoveLO", new object[] {
                        corpName,
                        userName,
                        loId,
                        reason,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLOAsync(string corpName, string userName, string loId, string reason, string comment) {
            this.RemoveLOAsync(corpName, userName, loId, reason, comment, null);
        }
        
        /// <remarks/>
        public void RemoveLOAsync(string corpName, string userName, string loId, string reason, string comment, object userState) {
            if ((this.RemoveLOOperationCompleted == null)) {
                this.RemoveLOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLOOperationCompleted);
            }
            this.InvokeAsync("RemoveLO", new object[] {
                        corpName,
                        userName,
                        loId,
                        reason,
                        comment}, this.RemoveLOOperationCompleted, userState);
        }
        
        private void OnRemoveLOOperationCompleted(object arg) {
            if ((this.RemoveLOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLOCompleted(this, new RemoveLOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cornerstoneondemand.com/Webservices/LO/Withdraw", RequestNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", ResponseNamespace="http://www.cornerstoneondemand.com/Webservices/LO/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Withdraw(string UserName, string LOID, string Reason, string Comment, bool SendEmailNotification) {
            object[] results = this.Invoke("Withdraw", new object[] {
                        UserName,
                        LOID,
                        Reason,
                        Comment,
                        SendEmailNotification});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WithdrawAsync(string UserName, string LOID, string Reason, string Comment, bool SendEmailNotification) {
            this.WithdrawAsync(UserName, LOID, Reason, Comment, SendEmailNotification, null);
        }
        
        /// <remarks/>
        public void WithdrawAsync(string UserName, string LOID, string Reason, string Comment, bool SendEmailNotification, object userState) {
            if ((this.WithdrawOperationCompleted == null)) {
                this.WithdrawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWithdrawOperationCompleted);
            }
            this.InvokeAsync("Withdraw", new object[] {
                        UserName,
                        LOID,
                        Reason,
                        Comment,
                        SendEmailNotification}, this.WithdrawOperationCompleted, userState);
        }
        
        private void OnWithdrawOperationCompleted(object arg) {
            if ((this.WithdrawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WithdrawCompleted(this, new WithdrawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LaunchLOCompletedEventHandler(object sender, LaunchLOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LaunchLOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LaunchLOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RequestCompletedEventHandler(object sender, RequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CompleteCompletedEventHandler(object sender, CompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveLOCompletedEventHandler(object sender, RemoveLOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void WithdrawCompletedEventHandler(object sender, WithdrawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WithdrawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WithdrawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591