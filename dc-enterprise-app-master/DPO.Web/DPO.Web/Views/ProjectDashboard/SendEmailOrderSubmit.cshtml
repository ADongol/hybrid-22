
@model DPO.Model.Light.OrderSendEmailModel
@using System.Text
@{
    DateTime projectDate = (Model.Order.ProjectDate != null) ? (DateTime)Model.Order.ProjectDate : DateTime.Now;
    DateTime now = DateTime.Now;
    projectDate = projectDate.Add(new TimeSpan(now.Hour, now.Minute, now.Second));

    string projectId = Model.Order.ProjectId.ToString();

    if (!Model.RenderTextVersion)
    {
        //projectId = Html.ActionLink(Model.order.ProjectId.ToString(), "Project", "ProjectDashboard",
        //        Request.Url.Scheme, Request.Url.Host, String.Empty, new { ProjectId = Model.order.ProjectId }, null).ToHtmlString();
        projectId = "<a href='" + Utilities.Config("dpo.base.url") + "v3/#/project/" + Model.Order.ProjectId + "'>" + Model.Order.ProjectId + "</a>";
    }

    //Hacking code to show the Discount Rquest details
    //Todo: need to refactory this code to load the discountRequestModel into OrderViewModel--Aaron 06/08/2016

    var user = ViewData["CurrentUser"] as UserSessionModel;

    DiscountRequestServices discountService = new DiscountRequestServices();
    var discountRequest = discountService.GetDiscountRequestModel(user, Model.Order.ProjectId, Model.Order.QuoteId).Model as DiscountRequestModel;

    decimal totalSale = 0;
    
    totalSale = discountRequest.StandardTotals.TotalSell + discountRequest.StartUpCosts + discountRequest.Quote.TotalFreight;

    
    var totalNet = Model.Order.TotalNetPrice;

    //var requestedDiscountPercentage = (Model.RequestedDiscountPercent) * 100;
    //var approvedDiscountPercentage = (Model.ApprovedDiscountPercent) * 100;

    var requestedDiscountPercentage = (Model.RequestedDiscountPercent);
    var approvedDiscountPercentage = (Model.ApprovedDiscountPercent);


    if (requestedDiscountPercentage == 0)
    {
        requestedDiscountPercentage = Model.Order.RequestedDiscountPercentage;
    }

    if (approvedDiscountPercentage == 0)
    {
        approvedDiscountPercentage = Model.Order.ApprovedDiscountPercentage;
    }

    //var requestedDiscountAmount = (totalSale * requestedDiscountPercentage) / 100;
    //var approvedDiscountAmount = (totalSale * approvedDiscountPercentage) / 100;

    var requestedDiscountAmount = (totalSale * requestedDiscountPercentage);
    var approvedDiscountAmount = (totalSale * approvedDiscountPercentage);

    //var isExpedite = (Model.IsExpedite == true) ? "Yes" : "No";

    string OrderSubmitConfirmEmailMessage = " Thank you for your order! Your order will be reviewed/processed within 1 business day." +
                            "If you need to cancel your order please contact your Daikin Customer Service Representative. <br/><br/>";

    string emailMessage = OrderSubmitConfirmEmailMessage + "<br/>" +
                          string.Format(@" An Order for Project '{0}' and quote '{1}' has been submitted by {2}
                                of {3}.<br /> Project Date: {4}<br />
                                PO Number: {5} <br />
                                TotalNet: {6}<br />
                                Discount Requested: {7}%<br />
                                Discount Approved: {8}%<br />
                                Requested Discount Amount: {9}<br />
                                Approved Discount Amount: {10}<br />
                                Project Reference: {11}",
                                Model.Order.ProjectName, Model.Order.QuoteTitle, Model.Order.ProjectOwner,
                                Model.Order.BusinessName, projectDate,
                                (Model.Order.PONumber != null) ? Model.Order.PONumber : string.Empty,
                                totalNet.ToString("C"),
                                string.Format("{0:0.00}", requestedDiscountPercentage * 100),
                                string.Format("{0:0.00}", approvedDiscountPercentage * 100),
                                requestedDiscountAmount.ToString("C"),
                                approvedDiscountAmount.ToString("C"),
                                projectId.ToString());
}

@*<br />
    Is Expedite: {12}<br />
    Expedite Reason: {13}",
    , isExpedite, Model.OrderExpediteReason*@

@if (Model.RenderTextVersion)
{
    Layout = null;
    @emailMessage.Replace("<br />", String.Empty)
}
else
{
    Layout = "~/Views/Shared/EmailTemplate.cshtml";

    <table>
        <tr>
            <td style="padding-left: 28px; padding-top: 20px; font-family: Helvetica, Arial, sans-serif; ">
                @Html.Raw(emailMessage)
            </td>
        </tr>
    </table>
}
