webpackJsonp(["main"],{

/***/ "./src/$$_lazy_route_resource lazy recursive":
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/account/components/login.component.css":
/***/ (function(module, exports) {

module.exports = "#login-bg {\r\n    background-image: url(/Images/project-office-bg.png);\r\n    background-size: cover;\r\n    height: 92%;\r\n}\r\n\r\n#hidden-div {\r\n    height: 100px;\r\n}\r\n\r\n#login-form {\r\n    max-width: 450px;\r\n    \r\n}\r\n\r\n@media (min-width: 1200px) {\r\n}\r\n\r\n@media (max-width: 576px) {\r\n    .container-fluid {\r\n        width: auto;\r\n    }\r\n}\r\n"

/***/ }),

/***/ "./src/app/account/components/login.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div id=\"login-bg\">\r\n    <div id=\"hidden-div\" class=\"hidden-xs hidden-sm\"></div>\r\n    <div id=\"login-form\" class='container-fluid'>\r\n        <div class=\"main-content\">\r\n            <div>\r\n                <div id=\"signIn\">\r\n                    <h1>Sign In</h1>\r\n                    <form *ngIf=\"user\" #form=\"ngForm\" novalidate>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label\">Email Address</label>\r\n                            <input type=\"text\" class=\"form-control\" #email=\"ngModel\" required name=\"email\" [(ngModel)]=\"user.email\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" #password=\"ngModel\" required name=\"password\" [(ngModel)]=\"user.password\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" name=\"persistent\" [(ngModel)]=\"user.persistent\" /> Remember me\r\n                                </label>\r\n                                <a class=\"pull-right\" href=\"/Account/RequestNewPassword\">Forgot Password</a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"logIn()\" style=\"width:93%\">Sign In</button>\r\n                        </div>\r\n                        <hr />\r\n                        <div class=\"form-group\">\r\n                            <a class=\"btn btn-default\" [routerLink]=\"['/account/userRegistration']\" style=\"width:93%\">Create a new account</a>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/account/components/login.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
//import { BlockUI, NgBlockUI } from 'ng-block-ui';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var LoginComponent = /** @class */ (function () {
    function LoginComponent(router, route, toastrSvc, userSvc, accountSvc, enums) {
        //this.accountSvc.getUserLoginModel().then(this.getUserLoginModelCallback.bind(this));
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.enums = enums;
        this.loginJumpDefault = { text: "Home", value: "/v3/#/home" };
        var self = this;
        this.accountSvc.getUserLoginModel()
            .subscribe(function (data) {
            self.user = data.model;
            self.user.selectedLink = "/v3/#/home";
            //self.loginJumpOptions = this.user.links.items;
        }, function (err) { return console.log("Error: ", err); });
    }
    LoginComponent.prototype.ngOnInit = function () {
        //Clear BasketId
        this.accountSvc.resetBasketQuoteId();
    };
    LoginComponent.prototype.selectedLinkChange = function (event) {
        this.user.selectedLink = event.value;
        //this.user.selectedLink = event;
    };
    LoginComponent.prototype.logIn = function () {
        var _this = this;
        var self = this;
        var data = {
            Email: this.user.email,
            Password: this.user.password,
            SelectedLink: this.user.selectedLink,
            Persistent: this.user.persistent,
        };
        this.accountSvc.logIn(data).then(function (resp) {
            //self.loadingIconSvc.Stop(jQuery("#productPageContainer"));
            self.toastrSvc.displayUserRegistrationResponseMessages(resp);
            if (resp.isok) {
                //window.location.href = resp.model;
                window.location.href = _this.user.selectedLink;
                self.userSvc.userIsAuthenticated = true;
                _this.userSvc.getCurrentUser().then(_this.getCurrentUserCallback.bind(_this));
                //self.userAuthenticationEvt.emit({});
            }
        });
    };
    LoginComponent.prototype.getCurrentUserCallback = function (resp) {
        if (resp.isok) {
            this.userSvc.currentUser = resp.model;
            for (var _i = 0, _a = resp.messages.items; _i < _a.length; _i++) {
                var message = _a[_i];
                if (message.type == 40) {
                    this.toastrSvc.Success(message.text);
                }
            }
        }
        else {
            //resp is null
            //for (let message of resp.messages.items) {
            //    if (message.type == 10) {// error
            //        this.toastrSvc.Error(message.text);
            //    }
            //}
        }
    };
    LoginComponent = __decorate([
        core_1.Component({
            selector: "login",
            template: __webpack_require__("./src/app/account/components/login.component.html"),
            styles: [__webpack_require__("./src/app/account/components/login.component.css")],
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService,
            enums_1.Enums])
    ], LoginComponent);
    return LoginComponent;
}());
exports.LoginComponent = LoginComponent;
;


/***/ }),

/***/ "./src/app/account/components/registration-acknowledgement.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"registration-acknowledgement\" class='container-fluid dk-blue-background'>\r\n    <div class=\"main-content\">\r\n        <div class=\"main-form\">\r\n            <h4>\r\n                THANK YOU FOR REGISTERING TO DAIKIN CITY\r\n            </h4>\r\n            <p>Your account admin (and Daikin) have received your account profile information, and will be processed within 2 business days.</p>\r\n            <p>You will be notified via email once the registration is processed. Please contact your account admin for more details.</p>\r\n            <p>You may logon to Daikin City at this time with restricted access rights while your account is in process.</p>\r\n            <p>Click the button below to go to Daikin City Login.</p>\r\n            <a [routerLink]=\"['/account/login']\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-home\"></span> Login</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/account/components/registration-acknowledgement.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var RegistrationAcknowledgementComponent = /** @class */ (function () {
    function RegistrationAcknowledgementComponent(router, route, toastrSvc, userSvc, accountSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.enums = enums;
    }
    RegistrationAcknowledgementComponent = __decorate([
        core_1.Component({
            selector: "registration-acknowledgement",
            template: __webpack_require__("./src/app/account/components/registration-acknowledgement.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService,
            enums_1.Enums])
    ], RegistrationAcknowledgementComponent);
    return RegistrationAcknowledgementComponent;
}());
exports.RegistrationAcknowledgementComponent = RegistrationAcknowledgementComponent;


/***/ }),

/***/ "./src/app/account/components/user-registration-faq.component.css":
/***/ (function(module, exports) {

module.exports = "body {\r\n}\r\n"

/***/ }),

/***/ "./src/app/account/components/user-registration-faq.component.html":
/***/ (function(module, exports) {

module.exports = "<div class='container-fluid' style=\"margin:20px;\">\r\n    <div class=\"text-center\"><h2 style=\"color:#007FCC; font-weight:bold;\">User Registration FAQ</h2></div>\r\n    <div class=\"text-center\"><p>Email: daikincity@daikincomfort.com. Contact: 1.866.432.4546 Option 6</p></div>\r\n    <div>\r\n        <ol type=\"1\">\r\n            <li style=\"font-size:large; font-weight:bold;\">\r\n                Looking for an Account ID?\r\n            </li>\r\n            <ol type=\"a\">\r\n                <li>Contact Your Business Sales Manager (Super User).</li>\r\n                <li>Contact Daikin City Support Team for super user information.</li>\r\n                <li>Note: Daikin City Account ID is a unique ID for your company to signup in Daikin City. In general Account-ID is 7-8 digit long and starts with ‘DC’ (DC123456) or ‘A’ (A123456). It is not (or associated with) your Customer ID (Financial ID).</li>\r\n            </ol>\r\n            <br />\r\n\r\n            <li style=\"font-size:large; font-weight:bold;\">\r\n                Error Message: The email is already in use\r\n            </li>\r\n            <ol type=\"a\">\r\n                <li>This email is already signed up and cannot register again.</li>\r\n                <li>Users not approved within 24 hours after submitting registration, please check your emails for additional information/verification requirement from Daikin City Support Team.</li>\r\n            </ol>\r\n            <br />\r\n\r\n            <li style=\"font-size:large; font-weight:bold;\">\r\n                Error Message: Business is not enabled\r\n            </li>\r\n            <ol type=\"a\">\r\n                <li>Another user from your business has signed up in Daikin City today as well. Business will be enabled within one business day with your profile approval.</li>\r\n                <li>Users not approved within 24 hours after submitting registration, please check your emails for additional information/verification requirement from Daikin City Support Team.</li>\r\n            </ol>\r\n            <br />\r\n\r\n            <li style=\"font-size:large; font-weight:bold;\">\r\n                Error Message: Awaiting for Approval\r\n            </li>\r\n            <ol type=\"a\">\r\n                <li>User already signed up and awaiting for Daikin City to verify and approve access.</li>\r\n                <li>Please allow Daikin 1 business day to process your profile registration.</li>\r\n                <li>User not approved within 1 business day, please check your email for information/verification requirement from Daikin City Support Team.</li>\r\n            </ol>\r\n            <br />\r\n\r\n            <li style=\"font-size:large; font-weight:bold;\">\r\n                What is my username and password?\r\n            </li>\r\n            <ol type=\"a\">\r\n                <li>Username is your email address.</li>\r\n                <li>Click “Forgot Password” at sign in page to reset.</li>\r\n            </ol>\r\n            <br />\r\n\r\n            <li style=\"font-size:large; font-weight:bold;\">\r\n                How to expedite my approval\r\n            </li>\r\n            <ol type=\"a\">\r\n                <li>Sign up with Daikin City Account ID.</li>\r\n                <li>Provide the associate Daikin Manufacture Reps/ Distributors/Branch.</li>\r\n                <ol type=\"i\">\r\n                    <li >Notes: Where does your business buy Daikin products?</li>\r\n                </ol>\r\n            </ol>\r\n\r\n        </ol>\r\n        \r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/account/components/user-registration-faq.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var UserRegistrationFAQComponent = /** @class */ (function () {
    function UserRegistrationFAQComponent() {
    }
    UserRegistrationFAQComponent = __decorate([
        core_1.Component({
            selector: "user-registration-faq",
            template: __webpack_require__("./src/app/account/components/user-registration-faq.component.html"),
            styles: [__webpack_require__("./src/app/account/components/user-registration-faq.component.css")],
        }),
        __metadata("design:paramtypes", [])
    ], UserRegistrationFAQComponent);
    return UserRegistrationFAQComponent;
}());
exports.UserRegistrationFAQComponent = UserRegistrationFAQComponent;


/***/ }),

/***/ "./src/app/account/components/user-registration.component.css":
/***/ (function(module, exports) {

module.exports = "#signup-form {\r\n    background-color: #BDEBFF;\r\n}\r\n\r\n    #signup-form .main-content {\r\n        background-color: #FFFFFF;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n    #signup-form .main-content {\r\n        width: 1100px;\r\n        margin: auto;\r\n    }\r\n}\r\n\r\n    #signup-form .section.form {\r\n    background-color: #F4FCFE;\r\n    margin: 20px;\r\n    padding: 30px;\r\n}\r\n\r\n    @media (max-width: 576px) {\r\n    #signup-form .section.form {\r\n        margin: 0px;\r\n    }\r\n}\r\n\r\n    #signup-form .section.form h4 {\r\n    padding-left: 10px;\r\n}\r\n\r\n    #signup-form .form-group p {\r\n    font-weight: bold;\r\n    margin: 0 0 5px;\r\n}\r\n\r\n    #signup-form .section.action {\r\n    background-color: #DEF5FF;\r\n    margin: 18px;\r\n}\r\n\r\n    @media (max-width: 576px) {\r\n    #signup-form .section.action {\r\n        margin: 0px;\r\n    }\r\n}\r\n\r\n    input[type=search]::-webkit-search-cancel-button {\r\n    -webkit-appearance: searchfield-cancel-button;\r\n}\r\n\r\n    /*.blue-tooltip + .tooltip > .tooltip-inner {background-color: #c5dee9;}*/\r\n\r\n    /*.tooltip-inner {\r\n    color:black !important;\r\n    background-color:white !important;\r\n}*/\r\n\r\n"

/***/ }),

/***/ "./src/app/account/components/user-registration.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"signup-form\" class='container-fluid'>\r\n    <div class=\"main-content \">\r\n        <div style=\"margin:20px;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 text-left\">\r\n                    <h1 style=\"padding:5px;\">\r\n                        Register\r\n                    </h1>\r\n                </div>\r\n                <div class=\"col-md-6 text-right\" style=\"padding:20px;\">\r\n                    <a class=\"btn btn-default\" [routerLink]=\"['/account/userRegistrationFAQ']\">FAQ</a>\r\n                </div>\r\n\r\n            </div>\r\n             \r\n\r\n            <form #signUpForm=\"ngForm\" novalidate>\r\n                <div class=\"section form\">\r\n                    <fieldset id=\"personal-details\">\r\n                        <h4>Personal Details</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">First Name</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\"\r\n                                               #firstName=\"ngModel\" required\r\n                                               name=\"firstName\"\r\n                                               [(ngModel)]=\"user.firstName\">\r\n                                        <div *ngIf=\"firstName.invalid && firstName.touched\" class=\"alert alert-danger\">\r\n                                            First Name is required.\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 col-sm-12 form-group\">\r\n                                        <label class=\"control-label\">Middle Name</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\"\r\n                                               #middleName name=\"middleName\" [(ngModel)]=\"user.middleName\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">Last Name</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\" #lastName=\"ngModel\" required\r\n                                               name=\"lastName\" [(ngModel)]=\"user.lastName\">\r\n                                        <div *ngIf=\"lastName.invalid && lastName.touched\" class=\"alert alert-danger\">\r\n                                            Last Name is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col col-md-6 col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 col-sm-12 form-group required\" [class.has-error]=\"email.invalid && email.touched\">\r\n                                        <label class=\"control-label\">Email</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\" #email=\"ngModel\"\r\n                                               required name=\"email\" [(ngModel)]=\"user.email\"\r\n                                               placeholder=\"Enter your business email account\"\r\n                                               title=\"Users registering without business email (Gmail, hotmail, ect.) will not be approved or may take additional time to verify and approve access to Daikin City.\">\r\n                                        <div *ngIf=\"email.invalid && email.touched\" class=\"alert alert-danger\">\r\n                                            Email is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 col-sm-12 form-group\">\r\n                                        <label class=\"control-label\">Mobile Phone Number</label>\r\n                                        <input type=\"text\" class=\"form-control\"\r\n                                               #mobileNumber name=\"mobileNumber\"\r\n                                               [(ngModel)]=\"user.contact.mobileNumber\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">Password</label>\r\n                                        <input type=\"password\" id=\"userPassword\"\r\n                                               class=\"form-control input-sm\"\r\n                                               #password=\"ngModel\" required\r\n                                               name=\"password\" [(ngModel)]=\"user.password\">\r\n\r\n                                        <div style=\"width:70%\">\r\n                                            <div id=\"passwordStrengthBkg\">\r\n                                                <div id=\"passwordStrengthBar\"></div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div *ngIf=\"password.invalid && password.touched\" class=\"alert alert-danger\">\r\n                                            Password is required.\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">Confirm Password</label>\r\n                                        <input type=\"password\" class=\"form-control input-sm\"\r\n                                               #confirmPassword=\"ngModel\" required\r\n                                               name=\"confirmPassword\" [(ngModel)]=\"user.confirmPassword\">\r\n                                        <div *ngIf=\"confirmPassword.invalid && confirmPassword.touched\" class=\"alert alert-danger\">\r\n                                            Confirm Password is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </fieldset>\r\n                </div>\r\n\r\n                <div class=\"section form\">\r\n                    <fieldset id=\"business-details\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-sm-12\">\r\n\r\n                                <h4>Business Details</h4>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group required\">\r\n                                        <p>Business Type</p>\r\n                                        <!--<input type=\"text\" class=\"form-control\" #businessTypeId required name=\"businessTypeId\" [(ngModel)]=\"user.business.businessTypeId\">-->\r\n                                        <kendo-dropdownlist [data]=\"user.business.businessTypes.items\"\r\n                                                            [textField]=\"'text'\"\r\n                                                            [valueField]=\"'value'\"\r\n                                                            name=\"businessType\"\r\n                                                            #businessTypeId=\"ngModel\" required\r\n                                                            [valuePrimitive]=\"true\"\r\n                                                            [(ngModel)]=\"user.business.businessTypeId\"\r\n                                                            (valueChange)=\"BusinessTypeChange($event)\"\r\n                                                            [disabled]=\"businessTypeDLLDisabled\">\r\n                                        </kendo-dropdownlist>\r\n                                        <div *ngIf=\"businessTypeId.invalid && businessTypeId.touched\"\r\n                                             class=\"alert alert-danger\" style=\"width:170px\">\r\n                                            Business Type is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"showBusinessInfo\">\r\n                                    <div class=\"row\" >\r\n                                        <div class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                            <label class=\"control-label\">Enter Account ID </label>\r\n                                            <span style=\"color:#00A1E4;\" class=\"glyphicon glyphicon-info-sign\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Account-ID is a unique Daikin City ID for your company.&#13;In general Account-ID is 7 - 8 digit long and starts with ‘DC’ (DC123456) or ‘A’ (A123456).&#13;Please contact your company admin or business sales manager for Account-ID.&#13;Email daikincity@daikincomfort.com or call 1.866.432.4546 Option 6.\"></span>\r\n                                            <div>\r\n                                                <input type=\"search\" id=\"businessSearchBox\"\r\n                                                       class=\"form-control k-input k-textbox\" #accountId\r\n                                                       name=\"accountId\" [(ngModel)]=\"user.accountId\"\r\n                                                       (ngModelChange)=\"lookupBusiness($event)\"\r\n                                                       [disabled]=\"disableAccountIdField\">\r\n                                                <button id=\"businessSearchBtn\" class=\"searchBtn\">\r\n                                                    <span class=\"k-icon k-i-search\"></span>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div *ngIf=\"foundBusiness && searchBtnClicked\" class=\"col col-md-12 col-sm-12 form-group\">\r\n                                            <label class=\"control-label\">Business Address</label>\r\n                                            <div>\r\n                                                {{business.address.addressLine1}}\r\n                                            </div>\r\n                                            <div>\r\n                                                {{business.address.addressLine2}}\r\n                                            </div>\r\n                                            <div>\r\n                                                {{business.address.location}}, {{business.address.stateName}}, {{business.address.postalCode}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <label> Do not have a Daikin Account ID? </label>\r\n                                            <p style=\"font-size:small;\"> Please enter information below.</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <hr />\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12 col-sm-12 form-group required\">\r\n                                            <label class=\"control-label\">Your Business Name</label>\r\n                                            <input type=\"search\" class=\"form-control input-sm\"\r\n                                                   #businessName=\"ngModel\" required\r\n                                                   name=\"businessName\"\r\n                                                   (ngModel)=\"user.business.businessName\"\r\n                                                   (ngModelChange)=\"businessNameChange($event)\"\r\n                                                   [disabled]=\"disableBusinessNameField\">\r\n                                            <div *ngIf=\"businessName.invalid && businessName.touched\" class=\"alert alert-danger\">\r\n                                                Business Name is required.\r\n                                            </div>\r\n                                        </div>\r\n                                       \r\n                                    </div>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div *ngIf=\"(user.business.businessTypeId == enums.BusinessTypeEnum.Dealer || user.business.businessTypeId == enums.BusinessTypeEnum.EngineerArchitect)\" class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                            <p>\r\n                                                Distributor/Manufacturer Rep/Branch Name\r\n                                                <span style=\"color:#00A1E4;\" class=\"glyphicon glyphicon-info-sign\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Select Distributor, Manufacturer Rep or Daikin Branch you are associated with.&#13;Email daikincity@daikincomfort.com or call 1.866.432.4546 Option 6. \"></span>\r\n                                            </p>\r\n\r\n\r\n                                            <kendo-combobox #DistRepsCombo\r\n                                                            required\r\n                                                            #parentBusiness=\"ngModel\"\r\n                                                            name=\"parentBusinessId\"\r\n                                                            [data]=\"distributorsAndRepsList\"\r\n                                                            [textField]=\"'businessName'\" [valueField]=\"'businessId'\"\r\n                                                            [(ngModel)]=\"user.business.parentBusinessId\"\r\n                                                            [valuePrimitive]=\"true\"\r\n                                                            [filterable]=\"true\"\r\n                                                            (filterChange)=\"distributorsAndRepsFilter($event)\"\r\n                                                            (valueChange)=\"distRepsComboChange($event)\"\r\n                                                            [placeholder]=\"'Enter at least 2 characters'\"\r\n                                                            style=\"width:100%\"\r\n                                                            title=\"Enter at least 2 characters\"\r\n                                                            [disabled]=\"disableBusinessNameField\">\r\n                                            </kendo-combobox>\r\n                                            <div *ngIf=\"parentBusiness.invalid && parentBusiness.touched\" class=\"alert alert-danger\" style=\"width:170px\">\r\n                                                Distributor/Manufacturer Rep name is required.\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                <!--Old Logic-->\r\n                                <!--<div [hidden]=\"!showDakinAccRadioBtn\" class=\"col col-md-12 col-sm-12 form-group\">\r\n                                    <label class=\"control-label\">Do you have a Daikin account?</label>\r\n                                    <div class=\"radio\">\r\n                                        <label><input type=\"radio\" name=\"daikinAccRadioBtn\"\r\n                                                      value=\"true\" [(ngModel)]=\"hasDaikinAccount\"\r\n                                                      (ngModelChange)=\"HasDaikinAccountChange($event)\">Yes\r\n                                        </label>\r\n                                        <label><input type=\"radio\" name=\"daikinAccRadioBtn\"\r\n                                                      value=\"false\" [(ngModel)]=\"hasDaikinAccount\"\r\n                                                      (ngModelChange)=\"HasDaikinAccountChange($event)\">No\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div [hidden]=\"!showAccountIdSearch\" class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                    <label class=\"control-label\">Account ID</label>\r\n                                    <div>\r\n                                        <input type=\"text\" id=\"businessSearchBox\"\r\n                                               class=\"form-control k-input k-textbox\" #accountId\r\n                                               name=\"accountId\" [(ngModel)]=\"user.accountId\"\r\n                                               (ngModelChange)=\"lookupBusiness($event)\">\r\n                                        <button id=\"businessSearchBtn\" class=\"searchBtn\">\r\n                                            <span class=\"k-icon k-i-search\"></span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-8\" style=\"font-size:smaller;font-weight:100;color: grey;\">\r\n                                            <i>Account-ID is a unique Daikin City ID for your company. In general Account-ID is 7 - 8 digit long and starts with ‘DC’ (DC123456) or ‘A’ (A123456). Please contact your company admin or business sales manager for Account-ID</i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"hasDaikinAccount === 'false'\" class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                    <label class=\"control-label\">Business Name</label>\r\n                                    <input type=\"text\" class=\"form-control input-sm\"\r\n                                           #businessName=\"ngModel\" required\r\n                                           name=\"businessName\" [(ngModel)]=\"user.business.businessName\">\r\n                                    <div *ngIf=\"businessName.invalid && businessName.touched\" class=\"alert alert-danger\">\r\n                                        Business Name is required.\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"(user.business.businessTypeId == enums.BusinessTypeEnum.Dealer || user.business.businessTypeId == enums.BusinessTypeEnum.EngineerArchitect) && hasDaikinAccount === 'false'\" class=\"col col-md-12 col-sm-12 form-group required\">\r\n                                    <p>Distributor/Manufacturer Rep/Branch Name</p>\r\n\r\n                                    <kendo-combobox #DistRepsCombo\r\n                                                    required\r\n                                                    #parentBusiness=\"ngModel\"\r\n                                                    name=\"parentBusinessId\"\r\n                                                    [data]=\"distributorsAndRepsList\"\r\n                                                    [textField]=\"'businessName'\" [valueField]=\"'businessId'\"\r\n                                                    [(ngModel)]=\"user.business.parentBusinessId\"\r\n                                                    [valuePrimitive]=\"true\"\r\n                                                    [filterable]=\"true\"\r\n                                                    (filterChange)=\"distributorsAndRepsFilter($event)\"\r\n                                                    (valueChange)=\"distRepsComboChange($event)\"\r\n                                                    [placeholder]=\"'Enter at least 2 characters'\"\r\n                                                    style=\"width:100%\"\r\n                                                    title=\"Enter at least 2 characters\">\r\n                                    </kendo-combobox>\r\n                                    <div *ngIf=\"parentBusiness.invalid && parentBusiness.touched\" class=\"alert alert-danger\" style=\"width:170px\">\r\n                                        Distributor/Manufacturer Rep name is required.\r\n                                    </div>\r\n\r\n                                </div>-->\r\n\r\n                                <!--<div *ngIf=\"foundBusiness && searchBtnClicked\" class=\"col col-md-12 col-sm-12 form-group\">\r\n                                    <label class=\"control-label\">Business Address</label>\r\n                                    <div>\r\n                                        {{business.address.addressLine1}}\r\n                                    </div>\r\n                                    <div>\r\n                                        {{business.address.addressLine2}}\r\n                                    </div>\r\n                                    <div>\r\n                                        {{business.address.location}}, {{business.address.stateName}}, {{business.address.postalCode}}\r\n                                    </div>\r\n                                </div>-->\r\n                            </div>\r\n\r\n                            <div class=\"col-md-6 col-sm-12\">\r\n                                <h4 id=\"businessAddressLabel\">Business Address</h4>\r\n                                <div class=\"checkbox\" *ngIf=\"foundBusiness && searchBtnClicked\">\r\n                                    <label><input type=\"checkbox\" (change)=\"UseBusinessAddressToggle($event)\">Use Business Address</label>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group required\">\r\n                                        <p>Country</p>\r\n                                        <kendo-dropdownlist [data]=\"user.address.countries.items\"\r\n                                                            [textField]=\"'text'\"\r\n                                                            [valueField]=\"'value'\"\r\n                                                            name=\"country\" #countryCode=\"ngModel\" required\r\n                                                            [valuePrimitive]=\"true\"\r\n                                                            [(ngModel)]=\"user.address.countryCode\"\r\n                                                            [disabled]=\"useBusinessAddress\">\r\n                                        </kendo-dropdownlist>\r\n                                        <div *ngIf=\"countryCode.invalid && countryCode.touched\" class=\"alert alert-danger\" style=\"width:170px\">\r\n                                            Country is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">Address Line 1</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\"\r\n                                               #addressLine1=\"ngModel\" required\r\n                                               name=\"addressLine1\" [(ngModel)]=\"user.address.addressLine1\"\r\n                                               [disabled]=\"useBusinessAddress\">\r\n                                        <div *ngIf=\"addressLine1.invalid && addressLine1.touched\" class=\"alert alert-danger\">\r\n                                            Address Line1 is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group\">\r\n                                        <label class=\"control-label\">Address Line 2</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\" #addressLine2\r\n                                               name=\"addressLine2\" [(ngModel)]=\"user.address.addressLine2\"\r\n                                               [disabled]=\"useBusinessAddress\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">City</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\" #location=\"ngModel\" required\r\n                                               name=\"location\" [(ngModel)]=\"user.address.location\"\r\n                                               [disabled]=\"useBusinessAddress\">\r\n                                        <div *ngIf=\"location.invalid && location.touched\" class=\"alert alert-danger\">\r\n                                            City is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6 col-sm-12 form-group required\">\r\n                                        <p>State/Province</p>\r\n                                        <kendo-dropdownlist [data]=\"user.address.states.items\"\r\n                                                            [textField]=\"'text'\"\r\n                                                            [valueField]=\"'value'\"\r\n                                                            name=\"state\" #stateId=\"ngModel\" required\r\n                                                            [(ngModel)]=\"user.address.stateId\"\r\n                                                            [valuePrimitive]=\"true\"\r\n                                                            [disabled]=\"useBusinessAddress\">\r\n                                        </kendo-dropdownlist>\r\n\r\n                                        <div *ngIf=\"stateId.invalid && stateId.touched\" class=\"alert alert-danger\" style=\"width:170px\">\r\n                                            State is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6 col-sm-12 form-group required\">\r\n                                        <label class=\"control-label\">Zip Code</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\" #postalCode=\"ngModel\"\r\n                                               required name=\"postalCode\"\r\n                                               [(ngModel)]=\"user.address.postalCode\"\r\n                                               [disabled]=\"useBusinessAddress\">\r\n                                        <div *ngIf=\"postalCode.invalid && postalCode.touched\" class=\"alert alert-danger\">\r\n                                            Zip Code is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group\">\r\n                                        <label class=\"control-label\">Office Phone Number</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\" #officeNumber\r\n                                               name=\"officeNumber\"\r\n                                               [(ngModel)]=\"user.contact.officeNumber\"\r\n                                               [disabled]=\"useBusinessAddress\">\r\n                                        <!--<kendo-maskedtextbox [mask]=\"phoneNumberMask\" name=\"officeNumber\" [(ngModel)]=\"user.contact.officeNumber\"></kendo-maskedtextbox>-->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 form-group\">\r\n                                        <label class=\"control-label\">Web Address</label>\r\n                                        <input type=\"text\" class=\"form-control input-sm\"\r\n                                               #webAddress name=\"webAddress\"\r\n                                               [(ngModel)]=\"user.contact.webAddress\" [disabled]=\"useBusinessAddress\"\r\n                                               autocomplete=\"off\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n                <div class=\"section action text-center\">\r\n                    <div style=\"padding:10px;\">\r\n                        <button class=\"btn btn-default\" style=\"width:70px;\" (click)=\"backToLogin()\">Cancel</button>\r\n                        <button class=\"btn btn-primary\" style=\"width:70px;\" (click)=\"register()\" type=\"submit\" [disabled]=\"signUpForm.invalid\">Register</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!--<h3>Form valid: {{signUpForm.valid}}</h3>-->\r\n                <!--<h3>Form invalid: {{signUpForm.form.invalid}}</h3>\r\n                <h3>Form status: {{signUpForm.form.status}}</h3>-->\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/account/components/user-registration.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var password_service_1 = __webpack_require__("./src/app/shared/services/password.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var business_service_1 = __webpack_require__("./src/app/business/services/business.service.ts");
var kendo_angular_dropdowns_1 = __webpack_require__("./node_modules/@progress/kendo-angular-dropdowns/dist/es/index.js");
var UserRegistrationComponent = /** @class */ (function () {
    function UserRegistrationComponent(router, route, toastrSvc, userSvc, accountSvc, businessSvc, passwordSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.businessSvc = businessSvc;
        this.passwordSvc = passwordSvc;
        this.enums = enums;
        this.businessTypeDLLDisabled = false;
        this.foundBusiness = false;
        this.searchBtnClicked = false;
        this.showAccountIdSearch = false; // old logic
        this.showDakinAccRadioBtn = false; // old logic
        this.showBusinessInfo = false;
        this.useBusinessAddress = false;
        this.hasDaikinAccount = false;
        this.defaultItem = { text: "Select...", value: null };
        this.phoneNumberMask = "(000) 000-0000";
        //public phoneNumberMask1: string = "(000) 000-0000";
        this.disableAccountIdField = false;
        this.disableBusinessNameField = false;
        this.user = this.route.snapshot.data['user'].model;
        console.log("Mitra testing ", this.user);
        //debugger;
    }
    UserRegistrationComponent.prototype.ngOnInit = function () {
        //this.pageTitle = this.route.snapshot.data['pageTitle'];
        this.user.business.parentBusinessId = null;
        this.getDistributorsAndReps();
        this.setupPasswordStrengthIndicator();
        //this.setupSearchBusiness();
        //jQuery('[data-toggle="tooltip"]').tooltip();
    };
    UserRegistrationComponent.prototype.ngDoCheck = function () {
        //debugger;
        console.log("Do Check");
        jQuery('[data-toggle="tooltip"]').tooltip();
        this.setupSearchBusiness();
    };
    UserRegistrationComponent.prototype.getDistributorsAndReps = function () {
        var self = this;
        this.businessSvc.getDistributorsAndReps("")
            .subscribe(function (data) {
            self.distributorsAndReps = data.model;
        }, function (err) { return console.log("Error: ", err); });
    };
    UserRegistrationComponent.prototype.distributorsAndRepsFilter = function (value) {
        if (value.length >= 2) {
            //this.distributorsAndRepsList = this.distributorsAndReps.filter((s:any) => s.businessName.toLowerCase().indexOf(value.toLowerCase()) !== -1);
            this.distributorsAndRepsList = this.distributorsAndReps
                .filter(function (s) { return s.businessName.toLowerCase().startsWith(value.toLowerCase()); });
        }
        else {
            this.distRepsCombo.toggle(false);
        }
    };
    UserRegistrationComponent.prototype.distRepsComboChange = function (event) {
    };
    UserRegistrationComponent.prototype.setupPasswordStrengthIndicator = function () {
        var self = this;
        jQuery("#userPassword").keyup(function (event) {
            event.stopImmediatePropagation();
            var password = jQuery("#userPassword")[0].value;
            self.showPasswordStrength(password);
        });
    };
    UserRegistrationComponent.prototype.showPasswordStrength = function (password) {
        if (this.passwordSvc.PasswordStrengthLevel(password) == 0) {
            jQuery('#passwordStrengthBar').css("background-color", "#ddd");
            jQuery('#passwordStrengthBar').css("width", "0%");
        }
        else if (this.passwordSvc.PasswordStrengthLevel(password) == 1) {
            jQuery('#passwordStrengthBar').css("background-color", "#ff704d");
            jQuery('#passwordStrengthBar').css("width", "10%");
        }
        else if (this.passwordSvc.PasswordStrengthLevel(password) == 2) {
            jQuery('#passwordStrengthBar').css("background-color", "#ffcc66");
            jQuery('#passwordStrengthBar').css("width", "30%");
        }
        else if (this.passwordSvc.PasswordStrengthLevel(password) == 3) {
            jQuery('#passwordStrengthBar').css("background-color", "#ffcc66");
            jQuery('#passwordStrengthBar').css("width", "50%");
        }
        else if (this.passwordSvc.PasswordStrengthLevel(password) == 4) {
            jQuery('#passwordStrengthBar').css("background-color", "#80bfff");
            jQuery('#passwordStrengthBar').css("width", "70%");
        }
        else if (this.passwordSvc.PasswordStrengthLevel(password) >= 5) {
            jQuery('#passwordStrengthBar').css("background-color", "#5cd65c");
            jQuery('#passwordStrengthBar').css("width", "100%");
        }
    };
    UserRegistrationComponent.prototype.setupSearchBusiness = function () {
        var self = this;
        jQuery("#businessSearchBox").keyup(function (event) {
            event.stopImmediatePropagation();
            var value = jQuery("#businessSearchBox")[0].value;
            if (value) {
                self.businessTypeDLLDisabled = true;
            }
            else {
                self.businessTypeDLLDisabled = false;
                self.useBusinessAddress = false;
            }
            if (event.keyCode == 13) {
                jQuery("#businessSearchBtn").click();
            }
        });
        jQuery("#businessSearchBtn").click(function (event) {
            self.searchBtnClicked = true;
            event.stopImmediatePropagation();
            var value = jQuery("#businessSearchBox")[0].value;
            if (value) {
                self.accountSvc.businessAddressLookup(value).then(self.businessAddressLookupCallback.bind(self));
            }
            else {
                self.foundBusiness = false;
                self.user.existingBusiness = self.enums.ExistingBusinessEnum.New;
                self.useBusinessAddress = false;
            }
        });
    };
    UserRegistrationComponent.prototype.lookupBusiness = function (event) {
        this.searchBtnClicked = false;
        var self = this;
        //var value = jQuery("#businessSearchBox")[0].value;
        if (this.user.accountId != "") {
            self.disableBusinessNameField = true;
            self.HasDaikinAccount();
            self.accountSvc.businessAddressLookup(this.user.accountId)
                .then(function (resp) {
                if (resp.model.businessId != null && resp.model.businessId != 0) {
                    self.applyAccountId(resp);
                }
                else {
                    self.foundBusiness = false;
                    self.user.existingBusiness = self.enums.ExistingBusinessEnum.New;
                    self.useBusinessAddress = false;
                    console.log("foundBusiness : " + self.foundBusiness);
                }
            }).catch(function (error) {
                console.log(error);
            });
        }
        else {
            self.businessTypeDLLDisabled = false;
            self.disableBusinessNameField = false;
            self.foundBusiness = false;
            self.user.existingBusiness = self.enums.ExistingBusinessEnum.New;
            self.useBusinessAddress = false;
        }
    };
    UserRegistrationComponent.prototype.businessAddressLookupCallback = function (resp) {
        if (resp.isok) {
            if (resp.model.accountId != null || resp.model.daikinCityId != null) {
                this.applyAccountId(resp);
            }
            else {
                this.toastrSvc.Warning("Business not found!");
                this.foundBusiness = false;
                this.user.existingBusiness = this.enums.ExistingBusinessEnum.New;
                this.useBusinessAddress = false;
            }
        }
    };
    UserRegistrationComponent.prototype.businessNameChange = function (input) {
        this.user.business.businessName = input;
        if (this.user.business.businessName == "") {
            this.disableAccountIdField = false;
        }
        else {
            this.disableAccountIdField = true;
            this.DoNotHasDaikinAccount();
        }
    };
    UserRegistrationComponent.prototype.applyAccountId = function (resp) {
        this.business = resp.model;
        this.user.business.businessId = resp.model.businessId;
        this.user.business.businessName = resp.model.businessName;
        this.user.business.accountId = resp.model.accountId;
        this.user.business.daikinCityId = resp.model.daikinCityId;
        //this.user.business = resp.model;
        this.foundBusiness = true;
        this.user.existingBusiness = this.enums.ExistingBusinessEnum.Existing;
        if (this.useBusinessAddress) {
            this.UseBusinessAddress();
        }
    };
    UserRegistrationComponent.prototype.UseBusinessAddressToggle = function (event) {
        if (event.target.checked) {
            this.useBusinessAddress = true;
            this.UseBusinessAddress();
        }
        else {
            this.useBusinessAddress = false;
            this.user.useBusinessAddress = false;
            if (this.user.address != null) {
                this.user.address.addressId = null;
            }
            if (this.user.contact != null) {
                this.user.contact.contactId = null;
            }
        }
    };
    UserRegistrationComponent.prototype.UseBusinessAddress = function () {
        if (this.useBusinessAddress) {
            this.user.useBusinessAddress = true;
            this.user.address = Object.assign({}, this.business.address);
            this.user.address.stateId = this.business.address.stateId.toString();
            this.user.contact = Object.assign({}, this.business.contact);
        }
    };
    UserRegistrationComponent.prototype.BusinessTypeChange = function (selectedItem) {
        this.showBusinessInfo = true;
        if (selectedItem.value == this.enums.BusinessTypeEnum.Daikin
            || selectedItem.value == this.enums.BusinessTypeEnum.Distributor
            || selectedItem.value == this.enums.BusinessTypeEnum.ManufacturerRep) {
            this.showAccountIdSearch = true; // old logic
            this.showDakinAccRadioBtn = false;
            this.hasDaikinAccount = true;
            jQuery('#businessAddressLabel').text("USER ADDRESS DETAILS");
        }
        else {
            this.showAccountIdSearch = false; // old logic
            this.foundBusiness = false;
            this.showDakinAccRadioBtn = true;
            jQuery('#businessAddressLabel').text("BUSINESS ADDRESS");
        }
    };
    UserRegistrationComponent.prototype.HasDaikinAccountChange = function (event) {
        if (event == "true") {
            this.HasDaikinAccount();
        }
        else {
            this.DoNotHasDaikinAccount();
        }
    };
    UserRegistrationComponent.prototype.HasDaikinAccount = function () {
        this.showAccountIdSearch = true;
        jQuery('#businessAddressLabel').text("USER ADDRESS DETAILS");
        this.user.existingBusiness = this.enums.ExistingBusinessEnum.Existing;
    };
    UserRegistrationComponent.prototype.DoNotHasDaikinAccount = function () {
        this.user.existingBusiness = this.enums.ExistingBusinessEnum.New;
        this.showAccountIdSearch = false;
        this.foundBusiness = false;
        this.useBusinessAddress = false;
        this.user.useBusinessAddress = false;
        this.businessTypeDLLDisabled = false;
        this.user.accountId = null;
        this.user.business.accountId = null;
        jQuery('#businessAddressLabel').text("BUSINESS ADDRESS");
    };
    UserRegistrationComponent.prototype.backToLogin = function () {
        window.location.href = "/v3/#/account/login";
        //this.router.navigateByUrl('/v3/#/account/login');
    };
    UserRegistrationComponent.prototype.register = function () {
        var self = this;
        if (this.user.password != this.user.confirmPassword) {
            this.toastrSvc.ErrorFadeOut("Password and confirm password do not match!");
        }
        else if (this.accountIdValid()) {
            //self.loadingIconSvc.Start(jQuery("#content"));
            self.blockUI.start();
            this.accountSvc.userRegistration(this.user).then(function (resp) {
                if (resp.IsOK) {
                    //this.accountSvc.universityUserRegistration(this.user).then((resp: any) => {
                    //    if (!resp.IsOK) {
                    //        self.blockUI.stop();
                    //        if (resp != null && resp.Messages != null) {
                    //            for (let message of resp.Messages.Items) {
                    //                if (message.Type == 40) {// success
                    //                    self.toastrSvc.Success(message.Text);
                    //                } else if (message.Type == 10) {// error
                    //                    self.toastrSvc.UserRegistionError(message.Text);
                    //                }
                    //            }
                    //        }
                    //    }
                    //});
                    //self.loadingIconSvc.Stop(jQuery("#content"));
                    self.blockUI.stop();
                    window.location.href = '/v3/#/account/registrationAcknowledgement';
                    //self.router.navigateByUrl('/v3/#/registrationAcknowledgement');
                }
                else {
                    //self.loadingIconSvc.Stop(jQuery("#content"));
                    self.blockUI.stop();
                    //self.toastrSvc.displayResponseMessages(resp);
                    if (resp != null && resp.Messages != null) {
                        for (var _i = 0, _a = resp.Messages.Items; _i < _a.length; _i++) {
                            var message = _a[_i];
                            if (message.Type == 40) {
                                self.toastrSvc.Success(message.Text);
                            }
                            else if (message.Type == 10) {
                                self.toastrSvc.UserRegistionError(message.Text);
                            }
                        }
                    }
                }
            }).catch(function (error) {
                //self.loadingIconSvc.Stop(jQuery("#content"));
                //this.blockUI.stop();
                console.log('Retrieval error: jQuery{error}');
                console.log(error);
            });
        }
    };
    UserRegistrationComponent.prototype.accountIdValid = function () {
        if (this.user.business.businessTypeId == this.enums.BusinessTypeEnum.Daikin
            || this.user.business.businessTypeId == this.enums.BusinessTypeEnum.Distributor
            || this.user.business.businessTypeId == this.enums.BusinessTypeEnum.ManufacturerRep) {
            if (this.user.accountId == null || this.user.accountId == "") {
                this.toastrSvc.UserRegistionError("Account Id is required.");
                return false;
            }
            else if (!this.foundBusiness) {
                this.toastrSvc.UserRegistionError("Account Id is not found.");
                return false;
            }
            else if (this.foundBusiness) {
                return true;
            }
        }
        else {
            if (this.hasDaikinAccount == false) {
                return true;
            }
            if (this.hasDaikinAccount == true && !this.foundBusiness) {
                this.toastrSvc.UserRegistionError("Account Id is required.");
                return false;
            }
            else if (this.foundBusiness) {
                return true;
            }
        }
    };
    UserRegistrationComponent.prototype.onAccountIdFocus = function () {
        //this.disableAccountIdField = false;
        //this.disableBusinessNameField = true;
    };
    UserRegistrationComponent.prototype.onBusinessNameFocus = function () {
        //this.disableAccountIdField = true;
        //this.disableBusinessNameField = false;
    };
    __decorate([
        core_1.ViewChild('DistRepsCombo'),
        __metadata("design:type", kendo_angular_dropdowns_1.ComboBoxComponent)
    ], UserRegistrationComponent.prototype, "distRepsCombo", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], UserRegistrationComponent.prototype, "blockUI", void 0);
    UserRegistrationComponent = __decorate([
        core_1.Component({
            selector: "user-registration",
            template: __webpack_require__("./src/app/account/components/user-registration.component.html"),
            styles: [__webpack_require__("./src/app/account/components/user-registration.component.css")]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, toastr_service_1.ToastrService,
            user_service_1.UserService, account_service_1.AccountService,
            business_service_1.BusinessService, password_service_1.PasswordService,
            enums_1.Enums])
    ], UserRegistrationComponent);
    return UserRegistrationComponent;
}());
exports.UserRegistrationComponent = UserRegistrationComponent;
;


/***/ }),

/***/ "./src/app/account/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/account/components/login.component.ts"));
__export(__webpack_require__("./src/app/account/components/registration-acknowledgement.component.ts"));
__export(__webpack_require__("./src/app/account/components/user-registration.component.ts"));
__export(__webpack_require__("./src/app/account/components/user-registration-faq.component.ts"));


/***/ }),

/***/ "./src/app/account/services/account.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var AccountService = /** @class */ (function () {
    function AccountService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    AccountService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    AccountService.prototype.extractHtml = function (res) {
        return res._body;
    };
    AccountService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    AccountService.prototype.getUserLoginModel = function () {
        return this.http.get("/api/AccountApi/GetUserLoginModel", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.logIn = function (body) {
        return this.http.post("/api/AccountApi/Login", body, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.getUserRegistrationModel = function () {
        return this.http.get("/api/AccountApi/UserRegistration", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.getCurrentUser = function () {
        return this.http.get("/api/User/GetCurrentUser", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.userRegistration = function (data) {
        return this.http.post("/Account/RegisterUser", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.universityUserRegistration = function (data) {
        return this.http.post("/DaikinUniversity/RegisterUser", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.businessAddressLookup = function (accountId) {
        return this.http.get("/api/AccountApi/BusinessAddressLookup?accountId=" + accountId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    AccountService.prototype.resetBasketQuoteId = function () {
        return this.http.get("/api/AccountApi/ResetBasketQuoteId", { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    AccountService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], AccountService);
    return AccountService;
}());
exports.AccountService = AccountService;


/***/ }),

/***/ "./src/app/account/services/user-resolver.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var UserResolver = /** @class */ (function () {
    function UserResolver(accountSvc) {
        this.accountSvc = accountSvc;
    }
    UserResolver.prototype.resolve = function (route, state) {
        return this.accountSvc.getUserRegistrationModel()
            .map(function (user) {
            if (user) {
                return user;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    UserResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [account_service_1.AccountService])
    ], UserResolver);
    return UserResolver;
}());
exports.UserResolver = UserResolver;
var CurrentUserResolver = /** @class */ (function () {
    function CurrentUserResolver(accountSvc) {
        this.accountSvc = accountSvc;
    }
    CurrentUserResolver.prototype.resolve = function (route, state) {
        return this.accountSvc.getCurrentUser()
            .map(function (currentUser) {
            if (currentUser) {
                return currentUser;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    CurrentUserResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [account_service_1.AccountService])
    ], CurrentUserResolver);
    return CurrentUserResolver;
}());
exports.CurrentUserResolver = CurrentUserResolver;


/***/ }),

/***/ "./src/app/address/address.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-5\">\r\n        <label class=\"control-label\">Address Line 1</label>\r\n        <input type=\"text\" class=\"form-control\" #addressLine1=\"ngModel\" name=\"addressLine1\" [(ngModel)]=\"address.addressLine1\">\r\n    </div>\r\n    <div class=\"form-group col-md-5\">\r\n        <label class=\"control-label\">Address Line 2</label>\r\n        <input type=\"text\" class=\"form-control\" #addressLine2=\"ngModel\" name=\"addressLine2\" [(ngModel)]=\"address.addressLine2\">\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-2\">\r\n        <label class=\"control-label\">Country</label>\r\n        <select class=\"form-control\" [(ngModel)]=\"address.countryCode\" (ngModelChange)=\"countryCodeChange($event)\" name=\"countryCode\">\r\n            <option [value]=\"null\" selected disabled>Select ...</option>\r\n            <option *ngFor=\"let item of address.countries.items\"\r\n                    [value]=\"item.value\">\r\n                {{item.text}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group col-md-3\">\r\n        <label class=\"control-label\">State</label>\r\n        <select class=\"form-control\" [(ngModel)]=\"address.stateId\" name=\"state\" (ngModelChange)=\"stateChange($event)\">\r\n            <option [value]=\"null\" selected disabled>Select ...</option>\r\n            <option *ngFor=\"let item of address.states.items\"\r\n                    [value]=\"item.value\">\r\n                {{item.text}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group col-md-2\">\r\n        <label class=\"control-label\">City</label>\r\n        <input type=\"text\" class=\"form-control\" #location=\"ngModel\" name=\"location\" [(ngModel)]=\"address.location\">\r\n    </div>\r\n\r\n    <div class=\"form-group col-md-3\">\r\n        <label class=\"control-label\">Zip Code</label>\r\n        <input type=\"text\" class=\"form-control\" #postalCode=\"ngModel\" name=\"postalCode\" [(ngModel)]=\"address.postalCode\">\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/address/address.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import 'rxjs/Rx';
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
var AddressComponent = /** @class */ (function () {
    function AddressComponent(router, route, toastrSvc, userSvc, http, projectSvc, addressSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.http = http;
        this.projectSvc = projectSvc;
        this.addressSvc = addressSvc;
        //public selectedState: { text: string, value: number } = { text: null, value: null };
        this.defaultItem = { text: "Select ...", value: null };
    }
    AddressComponent.prototype.ngOnInit = function () {
        var type = this.addressType;
        //this.selectedState.text = this.address.stateName;
        //this.selectedState.value = this.address.stateId;
    };
    AddressComponent.prototype.countryCodeChange = function (event) {
        var _this = this;
        var countryCode = event;
        this.addressSvc.getStatesByCountry(countryCode)
            .subscribe(function (resp) {
            if (resp.isok) {
                var states = resp.model;
                _this.address.states.items = resp.model.items;
                _this.address.stateId = null;
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    AddressComponent.prototype.stateChange = function (value) {
        for (var i = 0; i < this.address.states.items.length; i++) {
            if (this.address.states.items[i].value == value) {
                this.address.stateName = this.address.states.items[i].text;
            }
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddressComponent.prototype, "project", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddressComponent.prototype, "address", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddressComponent.prototype, "addressType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddressComponent.prototype, "projectEditForm", void 0);
    AddressComponent = __decorate([
        core_1.Component({
            selector: 'address',
            template: __webpack_require__("./src/app/address/address.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            http_1.Http, project_service_1.ProjectService, address_service_1.AddressService])
    ], AddressComponent);
    return AddressComponent;
}());
exports.AddressComponent = AddressComponent;
;


/***/ }),

/***/ "./src/app/address/services/address.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var AddressService = /** @class */ (function () {
    function AddressService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    AddressService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    AddressService.prototype.extractHtml = function (res) {
        return res._body;
    };
    AddressService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        //console.error(error); // log to console instead
        console.log(error);
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    AddressService.prototype.getStatesByCountry = function (countryCode) {
        return this.http.get("/Api/Address/GetStatesByCountry?countryCode=" + countryCode, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    AddressService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], AddressService);
    return AddressService;
}());
exports.AddressService = AddressService;


/***/ }),

/***/ "./src/app/app.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div id=\"content\">\r\n    <block-ui></block-ui>\r\n\r\n    <div class=\"header\" id=\"daikin-header\">\r\n\r\n        <header-buttons [isAuthenticated]=\"userSvc.userIsAuthenticated\"></header-buttons>\r\n    </div>\r\n\r\n\r\n    <div id=\"hiddenUserBasket\"></div>\r\n\r\n    <!--Website maintenance popup message-->\r\n    <div id=\"testModeModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Website under maintenance</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <p *ngIf=\"webconfig\">{{webconfig.testMode.testModeMessage}}</p>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Proceed anyway</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <router-outlet> </router-outlet>\r\n\r\n\r\n\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/app.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
//import { ROUTER_DIRECTIVES } from '@angular/router';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from './shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var password_service_1 = __webpack_require__("./src/app/shared/services/password.service.ts");
//import { ProductFamilyEnum } from './shared/enums/productFamilyEnum';
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var business_service_1 = __webpack_require__("./src/app/business/services/business.service.ts");
var user_resolver_service_1 = __webpack_require__("./src/app/account/services/user-resolver.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var AppComponent = /** @class */ (function () {
    function AppComponent(router, toastrSvc, userSvc, webconfigSvc, passwordSvc) {
        //this.blockUI.start('Loading...'); // Start blocking
        var _this = this;
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.webconfigSvc = webconfigSvc;
        this.passwordSvc = passwordSvc;
        this.pageTitle = 'Daikin Project Office';
        this.isAuthenticated = false;
        this.loading = true;
        //setTimeout(() => {
        //    this.blockUI.stop(); // Stop blocking
        //}, 2000);
        router.events.subscribe(function (event) {
            _this.navigationInterceptor(event);
        });
    }
    AppComponent.prototype.ngOnChanges = function () {
    };
    AppComponent.prototype.ngOnInit = function () {
        //var hash = window.location.hash;
        //this.userSvc.isAuthenticated().then(this.isAuthenticatedCallBack.bind(this));
        this.userSvc.getCurrentUser().then(this.getCurrentUserCallback.bind(this));
        //Website testing message
        var self = this;
        this.webconfigSvc.getWebConfig().then(function (resp) {
            self.webconfig = resp;
            if (self.webconfig.testMode.isTesting.toLowerCase() == 'true') {
                jQuery("#testModeModal").modal();
            }
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
    };
    AppComponent.prototype.ngAfterViewChecked = function () { };
    AppComponent.prototype.getCurrentUserCallback = function (resp) {
        if (resp != null && resp != undefined) {
            if (resp.isok) {
                this.isAuthenticated = true;
                this.userSvc.userIsAuthenticated = true;
                this.currentUser = resp.model;
                this.userSvc.currentUser = resp.model;
                //this.setupActiveTab();
                for (var _i = 0, _a = resp.messages.items; _i < _a.length; _i++) {
                    var message = _a[_i];
                    if (message.type == 40) {
                        this.toastrSvc.Success(message.text);
                    }
                }
            }
            else {
                this.isAuthenticated = false;
                this.userSvc.userIsAuthenticated = false;
                //resp is null
                //for (let message of resp.messages.items) {
                //    if (message.type == 10) {// error
                //        this.toastrSvc.Error(message.text);
                //    }
                //}
            }
        }
        else {
            this.isAuthenticated = false;
            this.userSvc.userIsAuthenticated = false;
        }
    };
    AppComponent.prototype.navigationInterceptor = function (event) {
        if (event instanceof router_1.NavigationStart) {
            this.loading = true;
            //this.loadingIconSvc.Start(jQuery("#content"));
            this.blockUI.start('Loading...');
        }
        if (event instanceof router_1.NavigationEnd) {
            this.loading = false;
            //this.loadingIconSvc.Stop(jQuery("#content"));
            this.blockUI.stop();
        }
        // Set loading state to false in both of the below events to hide the spinner in case a request fails
        if (event instanceof router_1.NavigationCancel) {
            this.loading = false;
            //this.loadingIconSvc.Stop(jQuery("#content"));
            this.blockUI.stop();
        }
        if (event instanceof router_1.NavigationError) {
            this.loading = false;
            //this.loadingIconSvc.Stop(jQuery("#content"));
            this.blockUI.stop();
        }
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], AppComponent.prototype, "blockUI", void 0);
    AppComponent = __decorate([
        core_1.Component({
            selector: 'app-root',
            template: __webpack_require__("./src/app/app.component.html"),
            //directives: [ROUTER_DIRECTIVES, HeaderButtonsComponent, ProjectsComponent],
            providers: [
                toastr_service_1.ToastrService,
                //LoadingIconService,
                user_service_1.UserService,
                password_service_1.PasswordService,
                enums_1.Enums,
                account_service_1.AccountService,
                business_service_1.BusinessService,
                user_resolver_service_1.UserResolver,
                //ProjectService,
                //ProductService,
                //OrderService,
                //SystemConfiguratorService,
                //SplitSystemConfiguratorService,
                //ToolsService,
                //BasketService,
                webconfig_service_1.WebConfigService
            ]
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService,
            webconfig_service_1.WebConfigService, password_service_1.PasswordService])
    ], AppComponent);
    return AppComponent;
}());
exports.AppComponent = AppComponent;
;


/***/ }),

/***/ "./src/app/app.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
//Angular Modules
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
//Added when upgraded Kendo UI & Angular 5 (3/26/2018)
var http_1 = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
var http_2 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import { FormsModule, ReactiveFormsModule } from '@angular/forms';
var platform_browser_1 = __webpack_require__("./node_modules/@angular/platform-browser/esm5/platform-browser.js");
var animations_1 = __webpack_require__("./node_modules/@angular/platform-browser/esm5/animations.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
//Services
var common_service_1 = __webpack_require__("./src/app/shared/services/common.service.ts");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var user_resolver_service_1 = __webpack_require__("./src/app/account/services/user-resolver.service.ts");
var user_resolver_service_2 = __webpack_require__("./src/app/account/services/user-resolver.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
var base_error_handler_service_1 = __webpack_require__("./src/app/shared/services/base-error-handler.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var email_service_1 = __webpack_require__("./src/app/shared/services/email.service.ts");
//Kendo Modules
var kendo_angular_buttons_1 = __webpack_require__("./node_modules/@progress/kendo-angular-buttons/dist/es/index.js");
var kendo_angular_grid_1 = __webpack_require__("./node_modules/@progress/kendo-angular-grid/dist/es/index.js");
var kendo_angular_dropdowns_1 = __webpack_require__("./node_modules/@progress/kendo-angular-dropdowns/dist/es/index.js");
var kendo_angular_popup_1 = __webpack_require__("./node_modules/@progress/kendo-angular-popup/dist/es/index.js");
var kendo_angular_inputs_1 = __webpack_require__("./node_modules/@progress/kendo-angular-inputs/dist/es/index.js");
var kendo_angular_dateinputs_1 = __webpack_require__("./node_modules/@progress/kendo-angular-dateinputs/dist/es/index.js");
var kendo_angular_layout_1 = __webpack_require__("./node_modules/@progress/kendo-angular-layout/dist/es/index.js");
var kendo_angular_dialog_1 = __webpack_require__("./node_modules/@progress/kendo-angular-dialog/dist/es/index.js");
var kendo_angular_upload_1 = __webpack_require__("./node_modules/@progress/kendo-angular-upload/dist/es/index.js");
//BlockUI
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
//Modules
var ng2_dragula_1 = __webpack_require__("./node_modules/ng2-dragula/index.js");
var shared_module_1 = __webpack_require__("./src/app/shared/shared.module.ts");
//import { HomeModule } from './home/home.module';
//import { AccountModule } from './account/account.module';
//DPO Web Components
var app_component_1 = __webpack_require__("./src/app/app.component.ts");
var app_routes_1 = __webpack_require__("./src/app/app.routes.ts");
//import { HeaderButtonsComponent } from './shared/header/header-buttons.component';
var home_component_1 = __webpack_require__("./src/app/home/home.component.ts");
//Account
var index_1 = __webpack_require__("./src/app/account/index.ts");
var project_tabs_component_1 = __webpack_require__("./src/app/shared/projectTabs/project-tabs.component.ts");
var address_component_1 = __webpack_require__("./src/app/address/address.component.ts");
//Projects
var index_2 = __webpack_require__("./src/app/project/index.ts");
//Product
var index_3 = __webpack_require__("./src/app/product/index.ts");
//Basket
var basket_component_1 = __webpack_require__("./src/app/basket/basket.component.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
//Quote
var index_4 = __webpack_require__("./src/app/quote/index.ts");
//Order
var index_5 = __webpack_require__("./src/app/order/index.ts");
//Discount
var discountRequest_service_1 = __webpack_require__("./src/app/discount/services/discountRequest.service.ts");
var discount_request_component_1 = __webpack_require__("./src/app/discount/discount-request.component.ts");
//Commission Request
var commissionRequest_service_1 = __webpack_require__("./src/app/commission/services/commissionRequest.service.ts");
var calculate_commission_dialog_component_1 = __webpack_require__("./src/app/commission/calculate-commission-dialog.component.ts");
var commission_request_component_1 = __webpack_require__("./src/app/commission/commission-request.component.ts");
//tools 
var index_6 = __webpack_require__("./src/app/tools/index.ts");
//Submittal Package
var index_7 = __webpack_require__("./src/app/submittal/index.ts");
// Learning Management System Components
//import { LmsCatalogModule } from './lms-catalog/lms-catalog.module'
var index_8 = __webpack_require__("./src/app/lms-catalog/index.ts");
//Redirect page
var redirect_page_component_1 = __webpack_require__("./src/app/shared/redirect/redirect-page.component.ts");
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        core_1.NgModule({
            declarations: [
                app_component_1.AppComponent,
                //HeaderButtonsComponent,
                home_component_1.HomeComponent,
                index_1.LoginComponent,
                index_1.UserRegistrationComponent,
                index_1.RegistrationAcknowledgementComponent,
                index_1.UserRegistrationFAQComponent,
                project_tabs_component_1.ProjectTabsComponent,
                address_component_1.AddressComponent,
                index_2.ProjectEditComponent,
                index_2.ProjectInternalComponent,
                index_2.ProjectsComponent,
                index_2.ProjectGridComponent,
                index_2.TransferProjectPopupComponent,
                index_2.DeleteProjectsPopupComponent,
                index_2.ExportProjectsPopupComponent,
                index_2.ProjectComponent,
                index_2.ProjectPipelineNotesUpdateComponent,
                index_2.ProjectQuotesComponent,
                basket_component_1.BasketComponent,
                index_4.ActiveQuoteInfoComponent,
                index_4.AddImportProductsDialogComponent,
                index_4.ImportProductsDialogComponent,
                index_4.OptionItemsComponent,
                index_4.QuoteButtonBarComponent,
                index_4.QuoteCommissionRequestsComponent,
                index_4.QuoteDetailsComponent,
                index_4.QuoteDiscountRequestsComponent,
                index_4.QuoteEditComponent,
                index_4.QuoteItemsListComponent,
                index_4.QuoteOrdersComponent,
                index_4.QuoteComponent,
                index_4.SelectProductsDialogComponent,
                index_4.TagEditPopupComponent,
                index_5.OrderComponent,
                index_5.OrderFormComponent,
                index_5.OrderFormQuoteItemsComponent,
                index_5.OrdersGridComponent,
                index_5.OrderItemProductsComponent,
                index_5.EditProjectLocationComponent,
                index_5.EditCustomerAddressComponent,
                index_5.EditSellerAddressComponent,
                discount_request_component_1.DiscountRequestComponent,
                commission_request_component_1.CommissionRequestComponent,
                calculate_commission_dialog_component_1.CalculateCommissionDialogComponent,
                index_3.ProductsComponent,
                index_3.ProductListComponent,
                index_3.ProductDetailsListViewComponent,
                index_3.ProductDetailsTableViewComponent,
                index_3.ProductDetailsGridViewComponent,
                index_3.ProductImageComponent,
                index_3.ProductSpecBarsComponent,
                index_3.ProductQuantityInputComponent,
                index_3.ProductQuantityAddComponent,
                index_3.ProductDetailsComponent,
                index_3.ProductOverviewComponent,
                index_3.ProductOverviewInfoComponent,
                index_3.RelatedDocsAndAssrComponent,
                index_3.ProductAccessoriesComponent,
                index_3.TechnicalSpecificationsComponent,
                index_3.TechnicalSpecificationsAccessoriesComponent,
                index_3.TechnicalSpecificationsOtherComponent,
                index_3.TechnicalSpecificationsSystemHPComponent,
                basket_component_1.BasketComponent,
                index_3.ProductFamilyGridComponent,
                index_6.ToolListComponent,
                index_6.UnitaryMatchupComponent,
                index_6.MatchupMasterGridComponent,
                index_6.MatchupDetailGridComponent,
                index_6.FurnaceDDLComponent,
                index_6.LCSplitMatchupComponent,
                index_6.SplitMatchupMasterGridComponent,
                index_6.SplitMatchupDetailGridComponent,
                index_7.SubmittalPackageComponent,
                index_7.QuotePackageGridComponent,
                index_7.AttachedFilesComponent,
                index_7.UploadFilesModalComponent,
                // LMS
                index_8.LmsCatalogComponent,
                index_8.LmsCatalogGridComponent,
                redirect_page_component_1.RedirectPageComponent
            ],
            imports: [
                shared_module_1.SharedModule,
                //CommonModule,
                //FormsModule,
                //ReactiveFormsModule, 
                platform_browser_1.BrowserModule,
                animations_1.BrowserAnimationsModule,
                http_1.HttpClientModule,
                http_2.HttpModule,
                http_2.JsonpModule,
                app_routes_1.AppRoutingModule,
                ng2_dragula_1.DragulaModule,
                kendo_angular_buttons_1.ButtonsModule,
                kendo_angular_layout_1.LayoutModule,
                kendo_angular_grid_1.GridModule,
                kendo_angular_grid_1.ExcelModule,
                kendo_angular_dropdowns_1.DropDownsModule,
                kendo_angular_popup_1.PopupModule,
                kendo_angular_inputs_1.InputsModule,
                kendo_angular_dateinputs_1.DateInputsModule,
                kendo_angular_dialog_1.DialogModule,
                kendo_angular_upload_1.UploadModule,
                ng2_dragula_1.DragulaModule,
                ng_block_ui_1.BlockUIModule.forRoot(),
            ],
            providers: [{ provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy },
                base_error_handler_service_1.BaseErrorHandlerService,
                common_service_1.CommonService,
                toastr_service_1.ToastrService,
                account_service_1.AccountService,
                user_service_1.UserService,
                user_resolver_service_1.UserResolver,
                user_resolver_service_2.CurrentUserResolver,
                address_service_1.AddressService,
                index_2.ProjectService,
                index_3.ProductService,
                index_2.ProjectResolver,
                index_2.ProjectQuotesResolver,
                index_4.QuoteService,
                index_4.QuoteResolver,
                index_4.QuoteEditResolver,
                index_4.QuoteItemsResolver,
                discountRequest_service_1.DiscountRequestService,
                commissionRequest_service_1.CommissionRequestService,
                index_5.OrderService,
                index_5.OrderResolver,
                basket_service_1.BasketService,
                index_7.SubmittalPackageService,
                index_6.ToolListService,
                index_6.LCSplitMatchupService,
                index_6.UnitaryMatchupService,
                index_6.UnitaryMatchupResolver,
                // LMS
                index_8.LmsCatalogService,
                webconfig_service_1.WebConfigService,
                email_service_1.EmailService
            ],
            bootstrap: [app_component_1.AppComponent]
        })
    ], AppModule);
    return AppModule;
}());
exports.AppModule = AppModule;


/***/ }),

/***/ "./src/app/app.routes.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import { HomeModule } from './home/home.module';
//import { AccountModule } from './account/account.module';
var user_resolver_service_1 = __webpack_require__("./src/app/account/services/user-resolver.service.ts");
var user_resolver_service_2 = __webpack_require__("./src/app/account/services/user-resolver.service.ts");
var unitary_matchup_resolver_service_1 = __webpack_require__("./src/app/tools/services/unitary-matchup-resolver.service.ts");
var home_component_1 = __webpack_require__("./src/app/home/home.component.ts");
var login_component_1 = __webpack_require__("./src/app/account/components/login.component.ts");
var user_registration_component_1 = __webpack_require__("./src/app/account/components/user-registration.component.ts");
var registration_acknowledgement_component_1 = __webpack_require__("./src/app/account/components/registration-acknowledgement.component.ts");
var user_registration_faq_component_1 = __webpack_require__("./src/app/account/components/user-registration-faq.component.ts");
var project_resolver_service_1 = __webpack_require__("./src/app/project/services/project-resolver.service.ts");
var project_resolver_service_2 = __webpack_require__("./src/app/project/services/project-resolver.service.ts");
var project_edit_component_1 = __webpack_require__("./src/app/project/components/project-edit.component.ts");
var project_component_1 = __webpack_require__("./src/app/project/components/project.component.ts");
var projects_component_1 = __webpack_require__("./src/app/project/components/projects.component.ts");
var quote_component_1 = __webpack_require__("./src/app/quote/components/quote.component.ts");
var quote_edit_component_1 = __webpack_require__("./src/app/quote/components/quote-edit.component.ts");
var quote_resolver_service_1 = __webpack_require__("./src/app/quote/services/quote-resolver.service.ts");
var quote_resolver_service_2 = __webpack_require__("./src/app/quote/services/quote-resolver.service.ts");
var quote_resolver_service_3 = __webpack_require__("./src/app/quote/services/quote-resolver.service.ts");
var products_component_1 = __webpack_require__("./src/app/product/components/products.component.ts");
var product_details_component_1 = __webpack_require__("./src/app/product/components/productDetails/product-details.component.ts");
var unitary_matchup_component_1 = __webpack_require__("./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.ts");
var lc_split_matchup_component_1 = __webpack_require__("./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.ts");
var tool_list_component_1 = __webpack_require__("./src/app/tools/components/tool-list/tool-list.component.ts");
var order_component_1 = __webpack_require__("./src/app/order/components/order.component.ts");
var order_form_component_1 = __webpack_require__("./src/app/order/components/order-form.component.ts");
var orders_grid_component_1 = __webpack_require__("./src/app/order/components/orders-grid.component.ts");
var order_resolver_service_1 = __webpack_require__("./src/app/order/services/order-resolver.service.ts");
var discount_request_component_1 = __webpack_require__("./src/app/discount/discount-request.component.ts");
var commission_request_component_1 = __webpack_require__("./src/app/commission/commission-request.component.ts");
var submittal_package_component_1 = __webpack_require__("./src/app/submittal/components/submittal-package.component.ts");
var lms_catalog_grid_component_1 = __webpack_require__("./src/app/lms-catalog/components/lms-catalog-grid.component.ts");
var redirect_page_component_1 = __webpack_require__("./src/app/shared/redirect/redirect-page.component.ts");
var routes = [
    {
        path: '',
        redirectTo: 'account',
        pathMatch: 'full'
    },
    {
        path: 'home',
        component: home_component_1.HomeComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
        //loadChildren: () => HomeModule
        //loadChildren: 'app/home/home.module#HomeModule'
    },
    //{
    //    path: 'account',
    //    //loadChildren: () => AccountModule
    //    //loadChildren: 'app/account/account.module#AccountModule'
    //},
    {
        path: 'account',
        children: [
            { path: '', redirectTo: 'login', pathMatch: 'full' },
            { path: 'login', component: login_component_1.LoginComponent },
            {
                path: 'userRegistration',
                component: user_registration_component_1.UserRegistrationComponent,
                //data: { pageTitle: 'User Registration' },
                resolve: { user: user_resolver_service_1.UserResolver }
            },
            {
                path: 'registrationAcknowledgement', component: registration_acknowledgement_component_1.RegistrationAcknowledgementComponent
            },
            {
                path: 'userRegistrationFAQ', component: user_registration_faq_component_1.UserRegistrationFAQComponent
            }
        ]
    },
    {
        path: 'projectCreate',
        component: project_edit_component_1.ProjectEditComponent,
        resolve: {
            projectModel: project_resolver_service_1.ProjectResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'projectEdit/:id',
        component: project_edit_component_1.ProjectEditComponent,
        resolve: {
            projectModel: project_resolver_service_1.ProjectResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'project/:id',
        component: project_component_1.ProjectComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver,
            projectModel: project_resolver_service_1.ProjectResolver,
            projectQuotesModel: project_resolver_service_2.ProjectQuotesResolver
        }
    },
    {
        path: 'projectQuotes/:id',
        component: project_component_1.ProjectComponent,
        resolve: {
            projectModel: project_resolver_service_1.ProjectResolver,
            projectQuotesModel: project_resolver_service_2.ProjectQuotesResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'projects',
        component: projects_component_1.ProjectsComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'quoteCreate/:projectid',
        component: quote_edit_component_1.QuoteEditComponent,
        resolve: {
            quoteModel: quote_resolver_service_2.QuoteEditResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'quoteEdit/:projectid/:quoteid',
        component: quote_edit_component_1.QuoteEditComponent,
        resolve: {
            quoteModel: quote_resolver_service_2.QuoteEditResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'quote/:id/:recordState',
        component: quote_component_1.QuoteComponent,
        resolve: {
            quoteModel: quote_resolver_service_1.QuoteResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'quoteItems/:id/:recordState',
        component: quote_component_1.QuoteComponent,
        resolve: {
            quoteModel: quote_resolver_service_1.QuoteResolver,
            quoteItems: quote_resolver_service_3.QuoteItemsResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'product',
        component: products_component_1.ProductsComponent,
        children: [
            //{ path: 'list', component: ProductListComponent, outlet: 'productList' },
            { path: ':id', component: product_details_component_1.ProductDetailsComponent, outlet: 'productDetails' }
        ],
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'tools',
        component: tool_list_component_1.ToolListComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'tools/unitaryMatchup',
        component: unitary_matchup_component_1.UnitaryMatchupComponent,
        resolve: {
            tonnageList: unitary_matchup_resolver_service_1.UnitaryMatchupResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'tools/lcSplitMatchup',
        component: lc_split_matchup_component_1.LCSplitMatchupComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'discountRequest/:discountRequestId/:projectId/:quoteId',
        component: discount_request_component_1.DiscountRequestComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'commissionRequest/:commissionRequestId/:projectId/:quoteId',
        component: commission_request_component_1.CommissionRequestComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'order',
        component: order_component_1.OrderComponent
    },
    {
        path: 'orders',
        component: orders_grid_component_1.OrdersGridComponent,
        resolve: {
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'orderForm/:projectid/:quoteid/:recordState',
        component: order_form_component_1.OrderFormComponent,
        resolve: {
            orderFormModel: order_resolver_service_1.OrderResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'submittalPackage/:projectid/:quoteid',
        component: submittal_package_component_1.SubmittalPackageComponent,
        resolve: {
            quoteModel: quote_resolver_service_2.QuoteEditResolver,
            currentUser: user_resolver_service_2.CurrentUserResolver
        }
    },
    {
        path: 'lms-catalog',
        component: lms_catalog_grid_component_1.LmsCatalogGridComponent
    },
    {
        path: 'redirect',
        component: redirect_page_component_1.RedirectPageComponent
    }
];
exports.AppRoutingModule = router_1.RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' });


/***/ }),

/***/ "./src/app/basket/basket.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"userBasketInnerDiv\" *ngIf=\"userBasket\">\r\n\r\n    <div *ngIf=\"!basketQuoteId || basketQuoteId == 0\">\r\n        You are currently browsing products, <a href=\"/v3/#/projects\">choose a quote within a project</a> to begin adding products.\r\n    </div>\r\n    <div *ngIf=\"basketQuoteId > 0\" class=\"row\">\r\n        <div class=\"row\" style=\"margin-bottom:5px;\">\r\n\r\n            <div class=\"col-lg-6 col-md-6\"><img src=\"/Images/quote-icon.png\" style=\"top:2.75em; padding-right:10px;\" /><a href=\"/v3/#/quoteItems/{{userBasket.quoteId}}/existingRecord\">{{userBasket.description}}</a></div>\r\n            <div class=\"col-lg-6 col-md-6\">\r\n                <a class=\"btn btn-primary pull-right\" href=\"/v3/#/quoteItems/{{userBasket.quoteId}}/existingRecord\">BACK TO QUOTE</a>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-6\" id=\"quoteItemCount\">{{userBasket.quoteItemCount}} items in active quote</div>\r\n           \r\n            <div [hidden]=\"productData == null\" class=\"col-lg-6 col-md-6 \">\r\n                <a id=\"addProductsToQuoteBtn\" class=\"btn btn-primary pull-right\">ADD PRODUCTS TO QUOTE</a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/basket/basket.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var BasketComponent = /** @class */ (function () {
    function BasketComponent(toastrSvc, userSvc, productSvc, basketSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
    }
    BasketComponent.prototype.ngOnInit = function () {
        this.productSvc.getBasketQuoteId().then(this.getBasketQuoteIdCallback.bind(this));
    };
    BasketComponent.prototype.ngDoCheck = function () {
    };
    BasketComponent.prototype.ngAfterViewChecked = function () {
        var hash = window.location.hash;
        if (hash.includes("#/product/(productDetails:")) {
            jQuery("#addProductsToQuoteBtn").hide();
        }
        else {
            jQuery("#addProductsToQuoteBtn").show();
        }
    };
    BasketComponent.prototype.getBasketQuoteIdCallback = function (resp) {
        if (resp.isok) {
            this.basketQuoteId = resp.model;
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], BasketComponent.prototype, "userBasket", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], BasketComponent.prototype, "productFamilyId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], BasketComponent.prototype, "productModelTypeId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], BasketComponent.prototype, "productData", void 0);
    BasketComponent = __decorate([
        core_1.Component({
            selector: 'basket',
            template: __webpack_require__("./src/app/basket/basket.component.html")
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, user_service_1.UserService,
            product_service_1.ProductService, basket_service_1.BasketService])
    ], BasketComponent);
    return BasketComponent;
}());
exports.BasketComponent = BasketComponent;
;


/***/ }),

/***/ "./src/app/basket/services/basket.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import 'rxjs/Rx';
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var BasketService = /** @class */ (function () {
    function BasketService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
    }
    BasketService.prototype.getBasket = function () {
        var headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        return this.http.get("/api/User/getBasket", { headers: headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    BasketService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    BasketService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    BasketService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], BasketService);
    return BasketService;
}());
exports.BasketService = BasketService;


/***/ }),

/***/ "./src/app/business/services/business.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var BusinessService = /** @class */ (function () {
    function BusinessService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    BusinessService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    BusinessService.prototype.extractHtml = function (res) {
        return res._body;
    };
    BusinessService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    //public businessAddressLookup(accountId: any) {
    //    return this.http.get("/api/AccountApi/BusinessAddressLookup?accountId=" + accountId, { headers: this.headers }).toPromise()
    //        .then(this.extractData)
    //        .catch(this.handleError);
    //}
    BusinessService.prototype.getDistributorsAndReps = function (businessName) {
        //return this.http.get("/api/Business/GetBusinessList", { headers: this.headers }).toPromise()
        //    .then(this.extractData)
        //    .catch(this.handleError);
        return this.http.get("/api/AccountApi/GetDistributorsAndReps?businessName=" + businessName, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    BusinessService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], BusinessService);
    return BusinessService;
}());
exports.BusinessService = BusinessService;


/***/ }),

/***/ "./src/app/commission/calculate-commission-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<button *ngIf=\"quote.quoteOptions.canCalculateCommission\" class=\"btn btn-default\" \r\n        data-toggle=\"modal\" data-target=\"#calculateCommissionPopup\" \r\n        data-backdrop=\"static\"><span class=\"k-icon k-i-calculator\">\r\n            </span> CALCULATE COMMISSION\r\n</button>\r\n\r\n<div *ngIf=\"commissionRequest\" id=\"calculateCommissionPopup\" class=\"modal fade\" role=\"dialog\">\r\n    \r\n    <div class=\"modal-dialog modal-lg\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">OPPORTUNITY COMMISSION AMOUNT REQUESTED</h4>\r\n            </div>\r\n            <div class=\"modal-body \">\r\n                <div>Total net price based on requested commissions</div>\r\n                \r\n                <!-----------------VRV----------------->\r\n                <!--TODO: should add missing Commission Percentages for Multiplier 0.201 -> 2.369 in database to avoid confusion-->\r\n                <hr>\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListVRV > 0\" \r\n                     style=\"padding-left:15px; padding-right:15px;\">\r\n\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-left-section\">\r\n                        <div>Enter sell multiplier for VRV and Accessories in this opportunity?</div>\r\n                        <div>\r\n                            <kendo-numerictextbox name=\"requestedMultiplierVRV\"\r\n                                                  [(ngModel)]=\"commissionRequest.requestedMultiplierVRV\" \r\n                                                  [min]=\"0.2\" [max]=\"1.5\" [step]=\"0.001\" [decimals]=\"3\" [format]=\"'n3'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountVRV($event)\">\r\n                            </kendo-numerictextbox>\r\n                        </div>\r\n                        <div style=\"color:gray; font-style:italic\">Please enter the range between 0.2 and 1.5</div>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-right-section\">\r\n                        <div>Total List</div>\r\n                        <div>{{commissionRequest.approvedTotalsCommission.totalListVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Total Net</div>\r\n                        <div>{{commissionRequest.totalNetVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Approved Commission Percent</div>\r\n                        <!--<div>{{commissionRequest.requestedCommissionPercentageVRV | number: '1.0-3'}}%</div>-->\r\n                        <div>{{commissionRequest.requestedCommissionPercentageVRV | percent: '1.0-4'}}</div>\r\n                        <div>Commission Amount</div>\r\n                        <div>{{commissionRequest.requestedCommissionVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Net Material Value Multiplier</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialMultiplierVRV | number: '1.0-3'}}</div>\r\n                        <div>Net Material Value</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialValueVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                <!-----------------Ductless----------------->\r\n                <hr>\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListSplit > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-left-section\">\r\n                        <div>Enter sell multiplier for Ductless in this opportunity?</div>\r\n                        <div>\r\n                            <kendo-numerictextbox name=\"requestedMultiplierSplit\"\r\n                                                  [(ngModel)]=\"commissionRequest.requestedMultiplierSplit\" \r\n                                                  [min]=\"0.35\" [max]=\"1.5\" [step]=\"0.001\" [decimals]=\"3\" [format]=\"'n3'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountSplit($event)\">\r\n                            </kendo-numerictextbox>\r\n                        </div>\r\n                        <div style=\"color:gray; font-style:italic\">Please enter the range between 0.35 and 1.5</div>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-right-section\">\r\n                        <div>Total List</div>\r\n                        <div>{{commissionRequest.approvedTotalsCommission.totalListSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Total Net</div>\r\n                        <div>{{commissionRequest.totalNetSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Approved Commission Percent</div>\r\n                        <!--<div>{{commissionRequest.requestedCommissionPercentageSplit | number: '1.0-3'}}%</div>-->\r\n                        <div>{{commissionRequest.requestedCommissionPercentageSplit | percent: '1.0-4'}}</div>\r\n                        <div>Commission Amount</div>\r\n                        <div>{{commissionRequest.requestedCommissionSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Net Material Value Multiplier</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialMultiplierSplit | number: '1.0-3'}}</div>\r\n                        <div>Net Material Value</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialValueSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n               \r\n                <!-----------------Unitary----------------->\r\n                <hr>\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListUnitary > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-left-section\">\r\n                        <div>Enter sell multiplier for Unitary in this opportunity?</div>\r\n                        <div>\r\n                            <kendo-numerictextbox name=\"requestedMultiplierUnitary\"\r\n                                                  [(ngModel)]=\"commissionRequest.requestedMultiplierUnitary\" \r\n                                                  [min]=\"0.7\" [max]=\"1.0\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'n2'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountUnitary($event)\">\r\n                            </kendo-numerictextbox>\r\n                        </div>\r\n                        <div style=\"color:gray; font-style:italic\">Please enter the range between 0.7 and 1.0</div>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-right-section\">\r\n                        <div>Total List</div>\r\n                        <div>{{commissionRequest.approvedTotalsCommission.totalListUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Total Net</div>\r\n                        <div>{{commissionRequest.totalNetUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Approved Commission Percent</div>\r\n                        <!--<div>{{commissionRequest.requestedCommissionPercentageUnitary| number: '1.0-3'}}%</div>-->\r\n                        <div>{{commissionRequest.requestedCommissionPercentageUnitary| percent: '1.0-4'}}</div>\r\n                        <div>Commission Amount</div>\r\n                        <div>{{commissionRequest.requestedCommissionUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Net Material Value Multiplier</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialMultiplierUnitary | number: '1.0-3'}}</div>\r\n                        <div>Net Material Value</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialValueUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-----------------LC Package----------------->\r\n                <hr>\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListLCPackage > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-left-section\">\r\n                        <div>Enter sell multiplier for LC Package in this opportunity?</div>\r\n                        <div>\r\n                            <kendo-numerictextbox name=\"requestedMultiplierLCPackage\"\r\n                                                  [(ngModel)]=\"commissionRequest.requestedMultiplierLCPackage\" \r\n                                                  [min]=\"0.75\" [max]=\"1.0\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'n2'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountLCPackage($event)\">\r\n                            </kendo-numerictextbox>\r\n                        </div>\r\n                        <div style=\"color:gray; font-style:italic\">Please enter the range between 0.75 and 1.0</div>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-right-section\">\r\n                        <div>Total List</div>\r\n                        <div>{{commissionRequest.approvedTotalsCommission.totalListLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Total Net</div>\r\n                        <div>{{commissionRequest.totalNetLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Approved Commission Percent</div>\r\n                        <!--<div>{{commissionRequest.requestedCommissionPercentageLCPackage | number: '1.0-3'}}%</div>-->\r\n                        <div>{{commissionRequest.requestedCommissionPercentageLCPackage | percent: '1.0-4'}}</div>\r\n                        <div>Commission Amount</div>\r\n                        <div>{{commissionRequest.requestedCommissionLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Net Material Value Multiplier</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialMultiplierLCPackage | number: '1.0-3'}}</div>\r\n                        <div>Net Material Value</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialValueLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-----------------TOTALS----------------->\r\n                <hr>\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalList > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-left-section\">\r\n                        <h4>TOTAL COMMISSION</h4>\r\n                        <label>Total Net Multiplier</label>\r\n                        <div>{{commissionRequest.requestedMultiplier | number: '1.0-3'}}</div>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-right-section\">\r\n                        <div>Total List</div>\r\n                        <div>{{commissionRequest.approvedTotalsCommission.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Total Net</div>\r\n                        <div>{{commissionRequest.totalNet| currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Approved Commission Percent</div>\r\n                        <!--<div>{{commissionRequest.requestedCommissionPercentage | number: '1.0-3'}}%</div>-->\r\n                        <div>{{commissionRequest.requestedCommissionPercentage | percent: '1.0-4'}}</div>\r\n                        <div>Commission Amount</div>\r\n                        <div>{{commissionRequest.requestedCommissionTotal | currency:'USD':true:'1.2-2'}}</div>\r\n                        <div>Net Material Value Multiplier</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialValueMultiplier| number: '1.0-3'}}</div>\r\n                        <div>Net Material Value</div>\r\n                        <div>{{commissionRequest.requestedNetMaterialValue | currency:'USD':true:'1.2-2'}}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n              \r\n            </div> \r\n            <!--End of Modal Body-->\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"cancel()\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"save()\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/commission/calculate-commission-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var commissionRequest_service_1 = __webpack_require__("./src/app/commission/services/commissionRequest.service.ts");
var CalculateCommissionDialogComponent = /** @class */ (function () {
    function CalculateCommissionDialogComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, commissionRequestSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.commissionRequestSvc = commissionRequestSvc;
        this.enums = enums;
        this.reloadQuoteEvent = new core_1.EventEmitter();
    }
    //public originalvalues: any;
    CalculateCommissionDialogComponent.prototype.ngOnInit = function () {
        this.getCommissionCalculationModel();
    };
    CalculateCommissionDialogComponent.prototype.getCommissionCalculationModel = function () {
        var self = this;
        this.commissionRequestSvc.getCommissionCalculationModel(this.quote.projectId, this.quote.quoteId, this.quote.commissionRequestId, this.quote.commissionRequestStatusTypeId).then(function (resp) {
            if (resp.isok) {
                self.commissionRequest = resp.model;
                //self.originalvalues = resp.model;
                self.calculateAll();
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    CalculateCommissionDialogComponent.prototype.calculateDiscountAmountVRV = function () {
        var self = this;
        this.commissionRequest.totalNetVRV = this.commissionRequest.approvedTotalsCommission.totalListVRV * this.commissionRequest.requestedMultiplierVRV;
        var data = {
            MultiplierCategoryTypeId: 2,
            Multiplier: this.commissionRequest.requestedMultiplierVRV
        };
        this.commissionRequestSvc.getCommissionPercentage(data)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageVRV = resp.model.commissionPercentage;
                //self.commissionRequest.requestedCommissionVRV = self.commissionRequest.totalNetVRV * self.commissionRequest.requestedCommissionPercentageVRV / 100;
                self.commissionRequest.requestedCommissionVRV = self.commissionRequest.totalNetVRV * self.commissionRequest.requestedCommissionPercentageVRV;
                self.commissionRequest.requestedNetMaterialValueVRV = self.commissionRequest.totalNetVRV - self.commissionRequest.requestedCommissionVRV;
                self.commissionRequest.requestedNetMaterialMultiplierVRV = self.commissionRequest.requestedNetMaterialValueVRV / self.commissionRequest.approvedTotalsCommission.totalListVRV;
                self.calculateTotals();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CalculateCommissionDialogComponent.prototype.calculateDiscountAmountSplit = function () {
        var self = this;
        this.commissionRequest.totalNetSplit = this.commissionRequest.approvedTotalsCommission.totalListSplit * this.commissionRequest.requestedMultiplierSplit;
        var data = {
            MultiplierCategoryTypeId: 1,
            Multiplier: this.commissionRequest.requestedMultiplierSplit
        };
        this.commissionRequestSvc.getCommissionPercentage(data)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageSplit = resp.model.commissionPercentage;
                //self.commissionRequest.requestedCommissionSplit = self.commissionRequest.totalNetSplit * self.commissionRequest.requestedCommissionPercentageSplit/100;
                self.commissionRequest.requestedCommissionSplit = self.commissionRequest.totalNetSplit * self.commissionRequest.requestedCommissionPercentageSplit;
                self.commissionRequest.requestedNetMaterialValueSplit = self.commissionRequest.totalNetSplit - self.commissionRequest.requestedCommissionSplit;
                self.commissionRequest.requestedNetMaterialMultiplierSplit = self.commissionRequest.requestedNetMaterialValueSplit / self.commissionRequest.approvedTotalsCommission.totalListSplit;
                self.calculateTotals();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CalculateCommissionDialogComponent.prototype.calculateDiscountAmountLCPackage = function () {
        var self = this;
        this.commissionRequest.totalNetLCPackage = this.commissionRequest.approvedTotalsCommission.totalListLCPackage * this.commissionRequest.requestedMultiplierLCPackage;
        var data = {
            MultiplierCategoryTypeId: 4,
            Multiplier: this.commissionRequest.requestedMultiplierLCPackage
        };
        this.commissionRequestSvc.getCommissionPercentage(data)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageLCPackage = resp.model.commissionPercentage;
                //self.commissionRequest.requestedCommissionLCPackage = self.commissionRequest.totalNetLCPackage * self.commissionRequest.requestedCommissionPercentageLCPackage / 100;
                self.commissionRequest.requestedCommissionLCPackage = self.commissionRequest.totalNetLCPackage * self.commissionRequest.requestedCommissionPercentageLCPackage;
                self.commissionRequest.requestedNetMaterialValueLCPackage = self.commissionRequest.totalNetLCPackage - self.commissionRequest.requestedCommissionLCPackage;
                self.commissionRequest.requestedNetMaterialMultiplierLCPackage = self.commissionRequest.requestedNetMaterialValueLCPackage / self.commissionRequest.approvedTotalsCommission.totalListLCPackage;
                self.calculateTotals();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CalculateCommissionDialogComponent.prototype.calculateDiscountAmountUnitary = function () {
        var self = this;
        //Todo: Why do we have to do this?
        //this.commissionRequest.requestedMultiplier = this.commissionRequest.requestedMultiplierUnitary;
        this.commissionRequest.totalNetUnitary = this.commissionRequest.approvedTotalsCommission.totalListUnitary * this.commissionRequest.requestedMultiplierUnitary;
        this.commissionRequestSvc.getUnitaryCommissionPercentage(this.commissionRequest)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageUnitary = resp.model.commissionPercentage;
                //self.commissionRequest.requestedCommissionUnitary = self.commissionRequest.totalNetUnitary * self.commissionRequest.requestedCommissionPercentageUnitary / 100;
                self.commissionRequest.requestedCommissionUnitary = self.commissionRequest.totalNetUnitary * self.commissionRequest.requestedCommissionPercentageUnitary;
                self.commissionRequest.requestedNetMaterialValueUnitary = self.commissionRequest.totalNetUnitary - self.commissionRequest.requestedCommissionUnitary;
                self.commissionRequest.requestedNetMaterialMultiplierUnitary = self.commissionRequest.requestedNetMaterialValueUnitary / self.commissionRequest.approvedTotalsCommission.totalListUnitary;
                self.calculateTotals();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CalculateCommissionDialogComponent.prototype.calculateTotals = function () {
        this.commissionRequest.totalNet = this.commissionRequest.totalNetVRV + this.commissionRequest.totalNetSplit + this.commissionRequest.totalNetUnitary + this.commissionRequest.totalNetLCPackage;
        this.commissionRequest.requestedMultiplier = this.commissionRequest.totalNet / this.commissionRequest.approvedTotalsCommission.totalList;
        this.commissionRequest.requestedCommissionTotal = this.commissionRequest.requestedCommissionVRV + this.commissionRequest.requestedCommissionSplit + this.commissionRequest.requestedCommissionUnitary + this.commissionRequest.requestedCommissionLCPackage;
        //this.commissionRequest.requestedCommissionPercentage = this.commissionRequest.requestedCommissionTotal / this.commissionRequest.totalNet * 100;
        this.commissionRequest.requestedCommissionPercentage = this.commissionRequest.requestedCommissionTotal / this.commissionRequest.totalNet;
        this.commissionRequest.requestedNetMaterialValue = this.commissionRequest.requestedNetMaterialValueVRV + this.commissionRequest.requestedNetMaterialValueSplit + this.commissionRequest.requestedNetMaterialValueUnitary + this.commissionRequest.requestedNetMaterialValueLCPackage;
        this.commissionRequest.requestedNetMaterialValueMultiplier = this.commissionRequest.requestedNetMaterialValue / this.commissionRequest.approvedTotalsCommission.totalList;
    };
    CalculateCommissionDialogComponent.prototype.calculateAll = function () {
        this.calculateDiscountAmountVRV();
        this.calculateDiscountAmountSplit();
        this.calculateDiscountAmountLCPackage();
        this.calculateDiscountAmountUnitary();
    };
    CalculateCommissionDialogComponent.prototype.save = function () {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.commissionRequestSvc.postCommissionCalculation(this.commissionRequest)
            .then(function (resp) {
            if (resp.isok) {
                self.toastrSvc.displayResponseMessages(resp);
                ///self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                self.reloadQuoteEvent.emit();
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
                //self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
            }
        })
            .catch(function (error) {
            console.log(error);
            //self.loadingIconSvc.Stop(jQuery("#content"));
            _this.blockUI.stop();
        });
    };
    CalculateCommissionDialogComponent.prototype.cancel = function () {
        //this.commissionRequest = this.originalvalues;
        this.getCommissionCalculationModel();
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], CalculateCommissionDialogComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], CalculateCommissionDialogComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], CalculateCommissionDialogComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], CalculateCommissionDialogComponent.prototype, "quoteItems", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], CalculateCommissionDialogComponent.prototype, "reloadQuoteEvent", void 0);
    CalculateCommissionDialogComponent = __decorate([
        core_1.Component({
            selector: "calculate-commission-dialog",
            template: __webpack_require__("./src/app/commission/calculate-commission-dialog.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            commissionRequest_service_1.CommissionRequestService,
            enums_1.Enums])
    ], CalculateCommissionDialogComponent);
    return CalculateCommissionDialogComponent;
}());
exports.CalculateCommissionDialogComponent = CalculateCommissionDialogComponent;


/***/ }),

/***/ "./src/app/commission/commission-request.component.css":
/***/ (function(module, exports) {

module.exports = ".commissionRequestForm {\r\n    background-color: #E5F2FA;\r\n}\r\n\r\n/*Desktop*/\r\n\r\n@media (min-width: 1200px) {\r\n    .commissionRequestForm {\r\n        padding: 20px 100px;\r\n    }\r\n}\r\n\r\nhr {\r\n    border-top-color:#a6d7ef;\r\n}\r\n\r\nlegend {\r\n    border-bottom-color: #a0a0a0;\r\n    color: #00a1e4;\r\n    font-weight: bold;\r\n}\r\n\r\nh5 {\r\n    color: #00A1E4;\r\n    text-transform: uppercase;\r\n    font-family: \"museo-sans\", sans-serif;\r\n    font-weight: 600;\r\n}\r\n\r\n.dactbl-heading {\r\n    background-color: #E6EEF1;\r\n    text-transform: uppercase;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    text-align: center;\r\n    font-size: 15px;\r\n}\r\n\r\n.bluecell {\r\n    background-color: #DFF6FE;\r\n    color: #00A1E4;\r\n}\r\n\r\n.lightgreycell {\r\n    background-color:#E6EEF1;\r\n    color:black;\r\n}\r\n\r\n.no-margin {\r\n    margin:0px;\r\n}\r\n\r\n.border-bottom {\r\n    border-bottom: 1px solid #a6d7ef;\r\n}\r\n\r\n.padding-15 {\r\n    padding: 15px;\r\n}\r\n\r\n.totalcell {\r\n    font-size:24px;\r\n}\r\n\r\n/*Mobile*/\r\n\r\n/*@media (max-width: 576px) {\r\n    \r\n    .addressEdit {\r\n        float:right;\r\n    }\r\n}*/\r\n\r\n"

/***/ }),

/***/ "./src/app/commission/commission-request.component.html":
/***/ (function(module, exports) {

module.exports = "<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div *ngIf=\"!commissionRequest\" style=\"padding:10px;\">\r\n    <!--<span class=\"k-icon k-i-loading\" style=\"width:100%; font-size:32px;\"></span>-->\r\n</div>\r\n\r\n<div id=\"main-container\" *ngIf=\"commissionRequest\" class='container-fluid'>\r\n   \r\n    <!--<div>Project Id: {{projectId}}</div>\r\n    <div>Quote Id: {{quoteId}}</div>\r\n    <div>Commission request Id: {{commissionRequestId}}</div>-->\r\n    <ul class=\"breadcrumbs\">\r\n        <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n        <li><a href=\"/v3/#/project/{{commissionRequest.projectId}}\">{{commissionRequest.project.name}}</a></li>\r\n        <li><a href=\"/v3/#/quote/{{commissionRequest.quoteId}}/existingRecord\">{{commissionRequest.quote.title}}</a></li>\r\n        <li>Commission Authorization Request (CR)</li>\r\n    </ul>\r\n\r\n    <div>\r\n        <div class=\"pull-right\" *ngIf=\"commissionRequest.commissionRequestId\">\r\n            <button class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#printModal\"><span class=\"glyphicon glyphicon-print\"></span> Print Request</button>\r\n            <button class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#exportModal\"><span class=\"k-icon k-i-file-excel\"></span> Export Request</button>\r\n        </div>\r\n        <h3>COMMISSION  AUTHORIZATION REQUEST</h3>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <h4 [ngSwitch]=\"commissionRequest.commissionRequestStatusTypeId\">\r\n                <span *ngSwitchCase=\"0\">NEW REQUEST</span>\r\n                <span *ngSwitchCase=\"2\">STATUS: PENDING</span>\r\n                <span *ngSwitchCase=\"4\">STATUS: REJECTED</span>\r\n                <span *ngSwitchCase=\"6\">STATUS: APPROVED</span>\r\n                <span *ngSwitchCase=\"8\">STATUS: DELETED</span>\r\n            </h4>\r\n        </div>\r\n        <div *ngIf=\"commissionRequest.hasOldCOM && commissionRequest.commissionRequestStatusTypeId == 0\" class=\"col-md-8 text-right\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"loadOldCOM\" (ngModelChange)=\"autofillChange()\" name=\"loadOldCOM\" /> <span style=\"font-weight:bold; color:#00A1E4;\"> Load selections from the most recent commission request</span><br />\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"commissionRequestForm\">\r\n        <form #commissionRequestForm=\"ngForm\" novalidate>\r\n            <fieldset>\r\n                <legend>PROJECT SYSTEMS AND COMPETITIVE POSITION OF OPPORTUNITY</legend>\r\n                <!--Project Details-->\r\n                <!--<fieldset>\r\n                    <legend>Project Details</legend>-->\r\n\r\n                <div class=\"row no-gutters\" style=\"padding: 0px 0px 10px 0px;\">\r\n                    <div class=\"col-md-11 col-xs-12\">\r\n                        <h5>Project Details</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Name: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.name}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Reference: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.projectId}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Registration Date: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.projectDate  | date: 'shortDate'}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Bid Date: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.bidDate | date: 'shortDate'}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Estimated Close: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.estimatedClose | date: 'shortDate'}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Estimated Delivery: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.estimatedDelivery | date: 'shortDate'}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Construction Type: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.constructionTypeDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Status: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.projectStatusDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Type: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.projectTypeDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Open Status: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.projectOpenStatusDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Vertical Market: </div> \r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.verticalMarketDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Status Notes: </div>\r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.description}}</div>\r\n                    </div>\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                </div>\r\n                \r\n                <div class=\"row no-gutters\" style=\"padding: 10px 0px;\">\r\n                    <div class=\"col-md-11 col-xs-12\">\r\n                        <h5>Shipping Address/Project location</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"col-md-1 hidden-xs\"></div>\r\n                    <div class=\"col-md-1 visible-xs pull-right\">\r\n                        <div><span class=\"glyphicon glyphicon-pencil\">\r\n                            </span><a data-toggle=\"modal\" data-target=\"#editShipToAddressModal\" data-backdrop=\"static\"> Edit</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Business Name: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.shipToName; else elseBlock\">\r\n                            {{commissionRequest.project.shipToName}}\r\n                        </div>\r\n                        <input type=\"text\" style=\"display:none;\" \r\n                               class=\"form-control\" required \r\n                               [(ngModel)]=\"commissionRequest.project.shipToName\" \r\n                               name=\"shipToName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Country: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.shipToAddress.countryCode; else elseBlock\">\r\n                            {{commissionRequest.project.shipToAddress.countryCode}}\r\n                        </div>\r\n                        <input type=\"text\" style=\"display:none;\" \r\n                               class=\"form-control\" required \r\n                               [(ngModel)]=\"commissionRequest.project.shipToAddress.countryCode\" \r\n                               name=\"shipToAddressCountryCode\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 1: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.shipToAddress.addressLine1; else elseBlock\">{{commissionRequest.project.shipToAddress.addressLine1}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.shipToAddress.addressLine1\" name=\"shipToAddressAddressLine1\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 2: </div>\r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.shipToAddress.addressLine2}}</div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Location: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.shipToAddress.location; else elseBlock\">{{commissionRequest.project.shipToAddress.location}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.shipToAddress.location\" name=\"shipToAddressLocation\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">State: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.shipToAddress.stateName; else elseBlock\">{{commissionRequest.project.shipToAddress.stateName}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.shipToAddress.stateName\" name=\"shipToAddressStateName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Zip Code: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.shipToAddress.postalCode; else elseBlock\">{{commissionRequest.project.shipToAddress.postalCode}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.shipToAddress.postalCode\" name=\"shipToAddressPostalCode\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Square Footage: </div> <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.squareFootage}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Number Of Floors: </div> <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.numberOfFloors}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-1 hidden-xs\">\r\n                        <div><span class=\"glyphicon glyphicon-pencil\"></span><a data-toggle=\"modal\" data-target=\"#editShipToAddressModal\" data-backdrop=\"static\"> Edit</a></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--</fieldset>-->\r\n                <!--Dealer/Contractor-->\r\n                <!--<fieldset>\r\n                <legend>Dealer/Contractor</legend>-->\r\n\r\n                <div class=\"row no-gutters\" style=\"padding: 10px 0px;\">\r\n                    <div class=\"col-md-11 col-xs-12\">\r\n                        <h5>Dealer/Contractor</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n\r\n                    <div class=\"visible-xs col-md-1 pull-right\">\r\n                        <div><span class=\"glyphicon glyphicon-pencil\"></span><a data-toggle=\"modal\" data-target=\"#editCustomerAddressModal\" data-backdrop=\"static\"> Edit</a></div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Dealer/Contractor Name: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" required *ngIf=\"commissionRequest.project.dealerContractorName; else elseBlock\">{{commissionRequest.project.dealerContractorName}}</div>\r\n\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.dealerContractorName\" name=\"dealerContractorName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Business Name: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.customerName; else elseBlock\">{{commissionRequest.project.customerName}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.customerName\" name=\"customerName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Country: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.customerAddress.countryCode; else elseBlock\">{{commissionRequest.project.customerAddress.countryCode}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.customerAddress.countryCode\" name=\"customerAddressCountryCode\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 1: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.customerAddress.addressLine1; else elseBlock\">{{commissionRequest.project.customerAddress.addressLine1}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.customerAddress.addressLine1\" name=\"customerAddressAddressLine1\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 2: </div>\r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.customerAddress.addressLine2}}</div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Location: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.customerAddress.location; else elseBlock\">{{commissionRequest.project.customerAddress.location}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.customerAddress.location\" name=\"customerAddressLocation\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">State: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.customerAddress.stateName; else elseBlock\">{{commissionRequest.project.customerAddress.stateName}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.customerAddress.stateName\" name=\"customerAddressStateName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Zip Code: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.customerAddress.postalCode; else elseBlock\">{{commissionRequest.project.customerAddress.postalCode}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.customerAddress.postalCode\" name=\"customerAddressPostalCode\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n                    </div>\r\n                    <div class=\"col-md-1 hidden-xs\">\r\n                        <div><span class=\"glyphicon glyphicon-pencil\"></span><a data-toggle=\"modal\" data-target=\"#editCustomerAddressModal\" data-backdrop=\"static\"> Edit</a></div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row no-gutters\" style=\"padding: 10px 0px;\">\r\n                    <div class=\"col-md-11 col-xs-12\">\r\n                        <h5>Seller</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n\r\n                    <div class=\"visible-xs col-md-1 pull-right\">\r\n                        <div><span class=\"glyphicon glyphicon-pencil\"></span><a data-toggle=\"modal\" data-target=\"#editSellerAddressModal\" data-backdrop=\"static\"> Edit</a></div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Business Name: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.sellerName; else elseBlock\">{{commissionRequest.project.sellerName}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.sellerName\" name=\"sellerName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Country: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.sellerAddress.countryCode; else elseBlock\">{{commissionRequest.project.sellerAddress.countryCode}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.sellerAddress.countryCode\" name=\"sellerAddress.countryCode\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 1: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.sellerAddress.addressLine1; else elseBlock\">{{commissionRequest.project.sellerAddress.addressLine1}}</div>\r\n\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.sellerAddress.addressLine1\" name=\"sellerAddress.addressLine1\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 2: </div>\r\n                        <div class=\"col-md-6 col-xs-12\">{{commissionRequest.project.sellerAddress.addressLine2}}</div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Location: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.sellerAddress.location; else elseBlock\">{{commissionRequest.project.sellerAddress.location}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.sellerAddress.location\" name=\"sellerAddress.location\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">State: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.sellerAddress.stateName; else elseBlock\">{{commissionRequest.project.sellerAddress.stateName}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.sellerAddress.stateName\" name=\"sellerAddress.stateName\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Zip Code: </div>\r\n                        <div class=\"col-md-6 col-xs-12\" *ngIf=\"commissionRequest.project.sellerAddress.postalCode; else elseBlock\">{{commissionRequest.project.sellerAddress.postalCode}}</div>\r\n                        <input type=\"text\" style=\"display:none;\" class=\"form-control\" required [(ngModel)]=\"commissionRequest.project.sellerAddress.postalCode\" name=\"sellerAddress.postalCode\" />\r\n                        <ng-template #elseBlock>\r\n                            <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                        </ng-template>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-1 hidden-xs\">\r\n                        <div><span class=\"glyphicon glyphicon-pencil\"></span><a data-toggle=\"modal\" data-target=\"#editSellerAddressModal\" data-backdrop=\"static\"> Edit</a></div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n                <hr />\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Project System Basis Of Design</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"commissionRequest.systemBasisDesignTypeId\" name=\"systemBasisDesignType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of commissionRequest.systemBasisDesignTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Zone Strategy</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"commissionRequest.zoneStrategyTypeId\" name=\"zoneStrategyType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of commissionRequest.zoneStrategyTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Select Brand Specified</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"commissionRequest.brandSpecifiedTypeId\" name=\"brandSpecifiedType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of commissionRequest.brandSpecifiedTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Select Approved Equals</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"commissionRequest.brandApprovedTypeId\" name=\"brandApprovedType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of commissionRequest.brandApprovedTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Funding Type</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"commissionRequest.fundingTypeId\" name=\"FundingType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of commissionRequest.fundingTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr />\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <p class=\"control-label\">Is a copy of competitors price to customer available?</p>\r\n                        <kendo-switch [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                      [(ngModel)]=\"commissionRequest.hasCompetitorPrice\"\r\n                                      [onLabel]=\"'Yes'\"\r\n                                      [offLabel]=\"'No'\"\r\n                                      name=\"hasCompetitorPrice\"></kendo-switch>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label\" [ngClass]=\"{'required': commissionRequest.hasCompetitorPrice}\">Enter Competitor Price</label>\r\n                        <!--<input type=\"number\" class=\"form-control\" [(ngModel)]=\"commissionRequest.competitorPrice\" name=\"competitorPrice\" />-->\r\n                        <kendo-numerictextbox id=\"competitorPrice\" class=\"form-control\"\r\n                                              [disabled]=\"!commissionRequest.hasCompetitorPrice || commissionRequest.commissionRequestStatusTypeId != 0\"\r\n                                              [required]=\"commissionRequest.hasCompetitorPrice\"\r\n                                              [format]=\"'c0'\"\r\n                                              [min]=\"0\"\r\n                                              [(ngModel)]=\"commissionRequest.competitorPrice\" name=\"competitorPrice\">\r\n                        </kendo-numerictextbox>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <!--Competitor Quote File-->\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <p class=\"control-label\">Is a copy of competitors quote to customer available?</p>\r\n                        <kendo-switch [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                      [(ngModel)]=\"commissionRequest.hasCompetitorQuote\"\r\n                                      [onLabel]=\"'Yes'\"\r\n                                      [offLabel]=\"'No'\"\r\n                                      name=\"hasCompetitorQuote\"></kendo-switch>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\" *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                        <label class=\"control-label\" [ngClass]=\"{'required': commissionRequest.hasCompetitorQuote}\">Attach Copy Of Competitors Quote</label>\r\n\r\n\r\n                        <kendo-upload [disabled]=\"!commissionRequest.hasCompetitorQuote\"\r\n                                      [required]=\"commissionRequest.hasCompetitorQuote\"\r\n                                      [autoUpload]=\"true\"\r\n                                      [saveUrl]=\"'/api/commissionRequest/UploadCompetitorQuoteFile'\"\r\n                                      [multiple]=\"false\"\r\n                                      [(ngModel)]=\"competitorQuoteFiles\"\r\n                                      name=\"competitorQuoteFile\"\r\n                                      (select)=\"selectCompetitorQuoteFile($event)\"\r\n                                      (upload)=\"uploadEventHandler($event)\"\r\n                                      [withCredentials]=\"true\"\r\n                                      (success)=\"successEventHandler($event)\"\r\n                                      (error)=\"errorEventHandler($event)\">\r\n                        </kendo-upload>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\" *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 0 && commissionRequest.hasCompetitorQuote\">\r\n                        <label class=\"control-label\">Competitors quote attached</label>\r\n                        <div>\r\n                            <a href=\"/document/dar/{{commissionRequest.quoteId}}/?filename={{commissionRequest.competitorQuoteFileName}}\" target=\"_blank\">\r\n                                {{commissionRequest.competitorQuoteFileName}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n            </fieldset>\r\n\r\n            <!--Standard Discount-->\r\n            <fieldset>\r\n                <legend>REP/DISTRIBUTOR AND DAIKIN INFORMATION AND COSTING FOR OPPORTUNITY</legend>\r\n\r\n                <div class=\"dactbl-heading border-bottom\">Total net price based on standard multiplier(s)</div>\r\n                <hr class=\"no-margin\" />\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Total Listed Value Of This Project Offering</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">{{commissionRequest.standardTotals.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Total Net (VRV-GNA + RA-QA + Unitary + LC Package)</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">\r\n                        {{commissionRequest.standardTotals.totalNet | currency:'USD':true:'1.2-2'}}\r\n                        ({{commissionRequest.standardTotals.totalNetVRV | currency:'USD':true:'1.2-2'}} +\r\n                        {{commissionRequest.standardTotals.totalNetSplit | currency:'USD':true:'1.2-2'}} +\r\n                        {{commissionRequest.standardTotals.totalNetUnitary | currency:'USD':true:'1.2-2'}} +\r\n                        {{commissionRequest.standardTotals.totalNetLCPackage | currency:'USD':true:'1.2-2'}})\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Start up / Commissioning costs</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">\r\n                        <kendo-numerictextbox [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                              [format]=\"'c0'\"\r\n                                              [min]=\"0\"\r\n                                              [(ngModel)]=\"commissionRequest.startUpCosts\" name=\"startUpCosts\"\r\n                                              (ngModelChange)=\"startupCostChange()\">\r\n                        </kendo-numerictextbox>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Other Third party costs</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">\r\n                        <kendo-numerictextbox [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                              [format]=\"'c0'\"\r\n                                              [min]=\"0\"\r\n                                              [(ngModel)]=\"commissionRequest.thirdPartyEquipmentCosts\" name=\"thirdPartyEquipmentCosts\"\r\n                                              (ngModelChange)=\"thirdPartyEquipmentCostsChange()\">\r\n                        </kendo-numerictextbox>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </fieldset>\r\n\r\n            <!--Commission calculation-->\r\n            <fieldset>\r\n                <legend>REQUESTED SELL MULTIPLIER AND COMMISSION CALCULATION</legend>\r\n\r\n                <div class=\"dactbl-heading border-bottom\">Total net price based on requested commissions</div>\r\n\r\n                <div class=\"row no-gutters\" *ngIf=\"canApproveCommissions && commissionRequest.commissionRequestStatusTypeId == 2\">\r\n                    <div class=\"pull-right\">\r\n                        <input type=\"checkbox\" [(ngModel)]=\"commissionManuallyInput\" name=\"commissionManuallyInput\" /> Manually Enter Commission <br />\r\n                    </div>\r\n                </div>\r\n                <!-----------------VRV----------------->\r\n                <!--TODO: should add missing Commission Percentages for Multiplier 0.201 -> 2.369 in database to avoid confusion-->\r\n                <hr class=\"no-margin\">\r\n\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListVRV > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-left-section\">\r\n                        <!--New Request-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                            <div>Enter sell multiplier for VRV and Accessories in this opportunity.</div>\r\n                            <div>\r\n                                <kendo-numerictextbox name=\"requestedMultiplierVRV\"\r\n                                                      [(ngModel)]=\"commissionRequest.requestedMultiplierVRV\"\r\n                                                      [min]=\"0.2\" [max]=\"1.5\" [step]=\"0.001\" [decimals]=\"3\" [format]=\"'n3'\" [autoCorrect]=\"false\"\r\n                                                      (ngModelChange)=\"calculateDiscountAmountVRV($event)\">\r\n                                </kendo-numerictextbox>\r\n                            </div>\r\n                            <div style=\"color:gray; font-style:italic\">Please enter the range between 0.2 and 1.5</div>\r\n                        </div>\r\n\r\n                        <!--Pending-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2 || commissionRequest.commissionRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                <div>Enter sell multiplier for VRV and Accessories in this opportunity.</div>\r\n                                <div>\r\n                                    <kendo-numerictextbox name=\"requestedMultiplierVRV\"\r\n                                                          [(ngModel)]=\"commissionRequest.requestedMultiplierVRV\"\r\n                                                          [min]=\"0.2\" [max]=\"1.5\" [step]=\"0.001\" [decimals]=\"3\" [format]=\"'n3'\" [autoCorrect]=\"false\"\r\n                                                          (ngModelChange)=\"calculateDiscountAmountVRV($event)\">\r\n                                    </kendo-numerictextbox>\r\n                                </div>\r\n                                <div style=\"color:gray; font-style:italic\">Please enter the range between 0.2 and 1.5</div>\r\n                            </div>\r\n                            <ng-template #elseBlock>\r\n                                <div>Requested sell multiplier for VRV and Accessories in this opportunity.</div>\r\n                                <div>{{commissionRequest.requestedMultiplierVRV}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                            <div>Approved sell multiplier for VRV and Accessories in this opportunity.</div>\r\n                            <div>{{commissionRequest.approvedMultiplierVRV}}</div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-right-section\">\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Total List</label>\r\n                                <div>{{commissionRequest.approvedTotalsCommission.totalListVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Purchase Order Amount</label>\r\n                                <div>{{commissionRequest.totalNetVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <!--New Record-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                                    <label>Commission Percent</label>\r\n                                    <!--<div>{{commissionRequest.requestedCommissionPercentageVRV | number: '1.0-3'}}%</div>-->\r\n                                    <div>{{commissionRequest.requestedCommissionPercentageVRV | percent : '1.0-4'}}</div>\r\n                                </div>\r\n\r\n                                <!--Pending-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2\">\r\n                                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                        <label>Commission Percent</label>\r\n                                        <div>\r\n                                            <!--<input type=\"number\" style=\"width:60px;\" required\r\n                                                   [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\"\r\n                                                   [(ngModel)]=\"commissionRequest.requestedCommissionPercentageVRV\"\r\n                                                   name=\"requestedCommissionPercentageVRV\"\r\n                                                   (ngModelChange)=\"commissionPercentageVRVChange($event)\" />%-->\r\n                                            <kendo-numerictextbox [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\" style=\"width:90px;\"\r\n                                                                  [(ngModel)]=\"commissionRequest.requestedCommissionPercentageVRV\"\r\n                                                                  name=\"requestedCommissionPercentageVRV\"\r\n                                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.0001\" [decimals]=\"4\" [format]=\"'p3'\"\r\n                                                                  (ngModelChange)=\"commissionPercentageVRVChange($event)\">\r\n                                            </kendo-numerictextbox>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ng-template #elseBlock>\r\n                                        <label>Commission Percent</label>\r\n                                        <!--<div>{{commissionRequest.requestedCommissionPercentageVRV | number: '1.0-3'}}%</div>-->\r\n                                        <div>{{commissionRequest.requestedCommissionPercentageVRV | percent : '1.0-4'}}</div>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Percent</label>\r\n                                    <div>{{commissionRequest.approvedCommissionPercentageVRV | percent: '1.0-4'}}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.requestedCommissionVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.approvedCommissionVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value Multiplier</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialMultiplierVRV | number: '1.0-3'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialValueVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-----------------Ductless----------------->\r\n                <hr class=\"no-margin\">\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListSplit > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-left-section\">\r\n                        <!--New Request-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                            <div>Enter sell multiplier for Ductless in this opportunity?</div>\r\n                            <div>\r\n                                <kendo-numerictextbox name=\"requestedMultiplierSplit\"\r\n                                                      [(ngModel)]=\"commissionRequest.requestedMultiplierSplit\"\r\n                                                      [min]=\"0.35\" [max]=\"1.5\" [step]=\"0.001\" [decimals]=\"3\" [format]=\"'n3'\" [autoCorrect]=\"false\"\r\n                                                      (ngModelChange)=\"calculateDiscountAmountSplit($event)\">\r\n                                </kendo-numerictextbox>\r\n                            </div>\r\n                            <div style=\"color:gray; font-style:italic\">Please enter the range between 0.35 and 1.5</div>\r\n                        </div>\r\n\r\n                        <!--Pending-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2 || commissionRequest.commissionRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                <div>Enter sell multiplier for Ductless and Accessories in this opportunity.</div>\r\n                                <div>\r\n                                    <kendo-numerictextbox name=\"requestedMultiplierSplit\"\r\n                                                          [(ngModel)]=\"commissionRequest.requestedMultiplierSplit\"\r\n                                                          [min]=\"0.35\" [max]=\"1.5\" [step]=\"0.001\" [decimals]=\"3\" [format]=\"'n3'\" [autoCorrect]=\"false\"\r\n                                                          (ngModelChange)=\"calculateDiscountAmountSplit($event)\">\r\n                                    </kendo-numerictextbox>\r\n                                </div>\r\n                                <div style=\"color:gray; font-style:italic\">Please enter the range between 0.35 and 1.5</div>\r\n                            </div>\r\n                            <ng-template #elseBlock>\r\n                                <div>Requested sell multiplier for Ductless and Accessories in this opportunity.</div>\r\n                                <div>{{commissionRequest.requestedMultiplierSplit}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <!--Approved-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                            <div>Approved sell multiplier for Ductless and Accessories in this opportunity.</div>\r\n                            <div>{{commissionRequest.approvedMultiplierSplit}}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-right-section\">\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Total List</label>\r\n                                <div>{{commissionRequest.approvedTotalsCommission.totalListSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Purchase Order Amount</label>\r\n                                <div>{{commissionRequest.totalNetSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <!--New Record-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                                    <label>Commission Percent</label>\r\n                                    <!--<div>{{commissionRequest.requestedCommissionPercentageSplit | number: '1.0-3'}}%</div>-->\r\n                                    <div>{{commissionRequest.requestedCommissionPercentageSplit | percent: '1.0-4'}}</div>\r\n                                </div>\r\n\r\n                                <!--Pending-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2\">\r\n                                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                        <label>Commission Percent</label>\r\n                                        <div>\r\n                                            <!--<input type=\"number\" style=\"width:60px;\" required\r\n                                                   [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\"\r\n                                                   [(ngModel)]=\"commissionRequest.requestedCommissionPercentageSplit\"\r\n                                                   name=\"requestedCommissionPercentageSplit\"\r\n                                                   (ngModelChange)=\"commissionPercentageSplitChange($event)\" />%-->\r\n                                            <kendo-numerictextbox [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\" style=\"width:90px;\"\r\n                                                                  [(ngModel)]=\"commissionRequest.requestedCommissionPercentageSplit\"\r\n                                                                  name=\"requestedCommissionPercentageSplit\"\r\n                                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.0001\" [decimals]=\"4\" [format]=\"'p3'\"\r\n                                                                  (ngModelChange)=\"commissionPercentageSplitChange($event)\">\r\n                                            </kendo-numerictextbox>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ng-template #elseBlock>\r\n                                        <label>Commission Percent</label>\r\n                                        <!--<div>{{commissionRequest.requestedCommissionPercentageSplit | number: '1.0-3'}}%</div>-->\r\n                                        <div>{{commissionRequest.requestedCommissionPercentageSplit | percent: '1.0-4'}}</div>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Percent</label>\r\n                                    <div>{{commissionRequest.approvedCommissionPercentageSplit | percent: '1.0-4'}}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.requestedCommissionSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.approvedCommissionSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value Multiplier</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialMultiplierSplit | number: '1.0-3'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialValueSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-----------------Unitary----------------->\r\n                <hr class=\"no-margin\">\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListUnitary > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-left-section\">\r\n                        <!--New Request-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                            <div>Enter sell multiplier for Unitary in this opportunity?</div>\r\n                            <div>\r\n                                <kendo-numerictextbox name=\"requestedMultiplierUnitary\"\r\n                                                      [(ngModel)]=\"commissionRequest.requestedMultiplierUnitary\"\r\n                                                      [min]=\"0.7\" [max]=\"1.0\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'n2'\" [autoCorrect]=\"false\"\r\n                                                      (ngModelChange)=\"calculateDiscountAmountUnitary($event)\">\r\n                                </kendo-numerictextbox>\r\n                            </div>\r\n                            <div style=\"color:gray; font-style:italic\">Please enter the range between 0.7 and 1.0</div>\r\n                        </div>\r\n\r\n                        <!--Pending-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2 || commissionRequest.commissionRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                <div>Enter sell multiplier for Unitary and Accessories in this opportunity.</div>\r\n                                <div>\r\n                                    <kendo-numerictextbox name=\"requestedMultiplierUnitary\"\r\n                                                          [(ngModel)]=\"commissionRequest.requestedMultiplierUnitary\"\r\n                                                          [min]=\"0.7\" [max]=\"1.0\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'n2'\" [autoCorrect]=\"false\"\r\n                                                          (ngModelChange)=\"calculateDiscountAmountUnitary($event)\">\r\n                                    </kendo-numerictextbox>\r\n                                </div>\r\n                                <div style=\"color:gray; font-style:italic\">Please enter the range between 0.7 and 1.0</div>\r\n                            </div>\r\n                            <ng-template #elseBlock>\r\n                                <div>Requested sell multiplier for Unitary and Accessories in this opportunity.</div>\r\n                                <div>{{commissionRequest.requestedMultiplierUnitary}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                            <div>Approved sell multiplier for Unitary and Accessories in this opportunity.</div>\r\n                            <div>{{commissionRequest.approvedMultiplierUnitary}}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-right-section\">\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Total List</label>\r\n                                <div>{{commissionRequest.approvedTotalsCommission.totalListUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Purchase Order Amount</label>\r\n                                <div>{{commissionRequest.totalNetUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <!--New Record-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                                    <label>Commission Percent</label>\r\n                                    <!--<div>{{commissionRequest.requestedCommissionPercentageUnitary | number: '1.0-3'}}%</div>-->\r\n                                    <div>{{commissionRequest.requestedCommissionPercentageUnitary | percent: '1.0-4'}}</div>\r\n                                </div>\r\n\r\n                                <!--Pending-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2\">\r\n                                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                        <label>Commission Percent</label>\r\n                                        <div>\r\n                                            <!--<input type=\"number\" style=\"width:60px;\" required\r\n                                                   [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\"\r\n                                                   [(ngModel)]=\"commissionRequest.requestedCommissionPercentageUnitary\"\r\n                                                   name=\"requestedCommissionPercentageUnitary\"\r\n                                                   (ngModelChange)=\"commissionPercentageUnitaryChange($event)\" />%-->\r\n                                            <kendo-numerictextbox [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\" style=\"width:90px;\"\r\n                                                                  [(ngModel)]=\"commissionRequest.requestedCommissionPercentageUnitary\"\r\n                                                                  name=\"requestedCommissionPercentageUnitary\"\r\n                                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.0001\" [decimals]=\"4\" [format]=\"'p3'\"\r\n                                                                  (ngModelChange)=\"commissionPercentageUnitaryChange($event)\">\r\n                                            </kendo-numerictextbox>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ng-template #elseBlock>\r\n                                        <label>Commission Percent</label>\r\n                                        <!--<div>{{commissionRequest.requestedCommissionPercentageUnitary | number: '1.0-3'}}%</div>-->\r\n                                        <div>{{commissionRequest.requestedCommissionPercentageUnitary | percent: '1.0-4'}}</div>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Percent</label>\r\n                                    <div>{{commissionRequest.approvedCommissionPercentageUnitary | percent: '1.0-4'}}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.requestedCommissionUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.approvedCommissionUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value Multiplier</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialMultiplierUnitary | number: '1.0-3'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialValueUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-----------------LC Package----------------->\r\n                <hr class=\"no-margin\">\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalListLCPackage > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-left-section\">\r\n                        <!--New Request-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                            <div>Enter sell multiplier for LC Package in this opportunity?</div>\r\n                            <div>\r\n                                <kendo-numerictextbox name=\"requestedMultiplierLCPackage\"\r\n                                                      [(ngModel)]=\"commissionRequest.requestedMultiplierLCPackage\"\r\n                                                      [min]=\"0.75\" [max]=\"1.0\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'n2'\" [autoCorrect]=\"false\"\r\n                                                      (ngModelChange)=\"calculateDiscountAmountLCPackage($event)\">\r\n                                </kendo-numerictextbox>\r\n                            </div>\r\n                            <div style=\"color:gray; font-style:italic\">Please enter the range between 0.75 and 1.0</div>\r\n\r\n                        </div>\r\n\r\n                        <!--Pending-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2 || commissionRequest.commissionRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                <div>Enter sell multiplier for LC Package and Accessories in this opportunity.</div>\r\n                                <div>\r\n                                    <kendo-numerictextbox name=\"requestedMultiplierLCPackage\"\r\n                                                          [(ngModel)]=\"commissionRequest.requestedMultiplierLCPackage\"\r\n                                                          [min]=\"0.75\" [max]=\"1.0\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'n2'\" [autoCorrect]=\"false\"\r\n                                                          (ngModelChange)=\"calculateDiscountAmountLCPackage($event)\">\r\n                                    </kendo-numerictextbox>\r\n                                </div>\r\n                                <div style=\"color:gray; font-style:italic\">Please enter the range between 0.75 and 1.0</div>\r\n                            </div>\r\n                            <ng-template #elseBlock>\r\n                                <div>Requested sell multiplier for LC Package and Accessories in this opportunity.</div>\r\n                                <div>{{commissionRequest.requestedMultiplierLCPackage}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                            <div>Approved sell multiplier for LC Package and Accessories in this opportunity.</div>\r\n                            <div>{{commissionRequest.approvedMultiplierLCPackage}}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-right-section\">\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Total List</label>\r\n                                <div>{{commissionRequest.approvedTotalsCommission.totalListLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Purchase Order Amount</label>\r\n                                <div>{{commissionRequest.totalNetLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\">\r\n                                    <label>Commission Percent</label>\r\n                                    <!--<div>{{commissionRequest.requestedCommissionPercentageLCPackage | number: '1.0-3'}}%</div>-->\r\n                                    <div>{{commissionRequest.requestedCommissionPercentageLCPackage | percent: '1.0-4'}}</div>\r\n                                </div>\r\n\r\n                                <!--Pending-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2\">\r\n                                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                                        <label>Commission Percent</label>\r\n                                        <div>\r\n                                            <!--<input type=\"number\" style=\"width:60px;\" required\r\n                                                   [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\"\r\n                                                   [(ngModel)]=\"commissionRequest.requestedCommissionPercentageLCPackage\"\r\n                                                   name=\"requestedCommissionPercentageLCPackage\"\r\n                                                   (ngModelChange)=\"commissionPercentageLCPackageChange($event)\" />%-->\r\n                                            <kendo-numerictextbox [attr.disabled]=\"commissionManuallyInput? null : 'disabled'\" style=\"width:90px;\"\r\n                                                                  [(ngModel)]=\"commissionRequest.requestedCommissionPercentageLCPackage\"\r\n                                                                  name=\"requestedCommissionPercentageLCPackage\"\r\n                                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.0001\" [decimals]=\"4\" [format]=\"'p3'\"\r\n                                                                  (ngModelChange)=\"commissionPercentageLCPackageChange($event)\">\r\n                                            </kendo-numerictextbox>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ng-template #elseBlock>\r\n                                        <label>Commission Percent</label>\r\n                                        <!--<div>{{commissionRequest.requestedCommissionPercentageLCPackage | number: '1.0-3'}}%</div>-->\r\n                                        <div>{{commissionRequest.requestedCommissionPercentageLCPackage | percent: '1.0-4'}}</div>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Percent</label>\r\n                                    <div>{{commissionRequest.approvedCommissionPercentageLCPackage | percent: '1.0-4'}}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.requestedCommissionLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n\r\n                                <!--Approved-->\r\n                                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                    <label>Commission Amount</label>\r\n                                    <div>{{commissionRequest.approvedCommissionLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value Multiplier</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialMultiplierLCPackage | number: '1.0-3'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialValueLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-----------------TOTALS----------------->\r\n                <hr class=\"no-margin\">\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalList > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-4 commission-form-left-section\">\r\n                        <h4>TOTAL COMMISSION</h4>\r\n                        <label>Total Net Multiplier</label>\r\n                        <div>{{commissionRequest.requestedMultiplier | number: '1.0-3'}}</div>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-8 commission-form-right-section lightgreycell\">\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Total List</label>\r\n                                <div>{{commissionRequest.approvedTotalsCommission.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Purchase Order Amount</label>\r\n                                <div>{{commissionRequest.totalNet| currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <!--New/Pending-->\r\n                            <div class=\"col col-xs-12 col-md-12\" *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 6\">\r\n                                <label>Commission Percent</label>\r\n                                <!--<div>{{commissionRequest.requestedCommissionPercentage | number: '1.0-3'}}%</div>-->\r\n                                <div>{{commissionRequest.requestedCommissionPercentage | percent: '1.0-4'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\" *ngIf=\"commissionRequest.commissionRequestStatusTypeId != 6\">\r\n                                <label>Commission Amount</label>\r\n                                <div>{{commissionRequest.requestedCommissionTotal | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                            <!--Approved-->\r\n                            <div class=\"col col-xs-12 col-md-12\" *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                <label>Commission Percent</label>\r\n                                <div>{{commissionRequest.approvedCommissionPercentage | percent: '1.0-4'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\" *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\">\r\n                                <label>Commission Amount</label>\r\n                                <div>{{commissionRequest.approvedCommissionTotal | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col col-xs-12 col-md-4\">\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value Multiplier</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialValueMultiplier| number: '1.0-3'}}</div>\r\n                            </div>\r\n                            <div class=\"col col-xs-12 col-md-12\">\r\n                                <label>Net Material Value</label>\r\n                                <div>{{commissionRequest.requestedNetMaterialValue | currency:'USD':true:'1.2-2'}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr class=\"no-margin\" />\r\n                <div class=\"row row-eq-height\" *ngIf=\"commissionRequest.approvedTotalsCommission.totalList > 0\" style=\"padding-left:15px; padding-right:15px;\">\r\n                    <div class=\"col col-xs-12 col-md-5 commission-form-left-section\">\r\n                        <label>Total revised Rep/Dist selling price as aresult of Commission</label>\r\n                    </div>\r\n                    <div class=\"col col-xs-12 col-md-7 commission-form-right-section lightgreycell totalcell\" style=\"padding:10px 10px 10px 35px;\">\r\n                        <div>{{commissionRequest.totalRevised | currency:'USD':true:'1.2-2'}}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!--Notes-->\r\n                <hr style=\"margin:0px 0px 20px 0px;\" />\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-12 padding-15\">\r\n                        <label class=\"control-label required\">Any further information or reason for commission request</label>\r\n                        <textarea class=\"form-control\" name=\"notes\"\r\n                                  [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                  [(ngModel)]=\"commissionRequest.notes\" rows=\"2\" required></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2 || commissionRequest.commissionRequestStatusTypeId == 4 || commissionRequest.commissionRequestStatusTypeId == 6\" class=\"row no-gutters border-bottom\">\r\n                    <div class=\"form-group col-md-12 padding-15\">\r\n                        <label class=\"control-label required\">Response from approval team:</label>\r\n                        <textarea class=\"form-control\" required name=\"responseNotes\"\r\n                                  [attr.disabled]=\"!canApproveCommissions ? 'disabled' : null\"\r\n                                  [(ngModel)]=\"commissionRequest.responseNotes\" rows=\"2\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Email List-->\r\n                <hr />\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-12 padding-15\">\r\n                        <label class=\"control-label\">Enter Daikin City users' emails you want to notify about this request. Place commas or semicolon between each email</label>\r\n                        <textarea class=\"form-control\" name=\"emailsList\"\r\n                                  [attr.disabled]=\"commissionRequest.commissionRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                  [(ngModel)]=\"commissionRequest.emailsList\" rows=\"2\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n\r\n            <!--Submit-->\r\n            <fieldset>\r\n                <!--New Request-->\r\n                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 0\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <a class=\"btn btn-default\" href=\"/v3/#/quote/{{commissionRequest.quoteId}}/existingRecord\" style=\"width:70px;\">Cancel</a>\r\n                    <button class=\"btn btn-primary\" style=\"width:70px;\" [disabled]=\"commissionRequestForm.invalid\" (click)=\"submit()\">Submit</button>\r\n                </div>\r\n\r\n                <!--Pending-->\r\n                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 2\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                        <button class=\"btn btn-default\" (click)=\"reject()\">Reject Request</button>\r\n                        <button class=\"btn btn-primary\" [disabled]=\"commissionRequestForm.invalid\" (click)=\"approve()\">Approve Request</button>\r\n                    </div>\r\n                    <ng-template #elseBlock>\r\n                        <!--<a class=\"btn btn-default\" href=\"/v3/#/quote/{{commissionRequest.quoteId}}/existingRecord\">Back To Quote</a>-->\r\n                        <button class=\"btn btn-default\" (click)=\"delete()\">Delete Request</button>\r\n                    </ng-template>\r\n                </div>\r\n                <!--Rejected-->\r\n                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 4\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                        <button class=\"btn btn-primary\" [disabled]=\"commissionRequestForm.invalid\" (click)=\"approve()\">Approve Request</button>\r\n                    </div>\r\n                    <ng-template #elseBlock>\r\n                        <a class=\"btn btn-default\" href=\"/v3/#/quote/{{commissionRequest.quoteId}}/existingRecord\">Back To Quote</a>\r\n                    </ng-template>\r\n                </div>\r\n                <!--Approved-->\r\n                <div *ngIf=\"commissionRequest.commissionRequestStatusTypeId == 6\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <div *ngIf=\"canApproveCommissions; else elseBlock\">\r\n                        <button class=\"btn btn-default\" (click)=\"reject()\">Reject Request</button>\r\n                    </div>\r\n                    <ng-template #elseBlock>\r\n                        <a class=\"btn btn-default\" href=\"/v3/#/quote/{{commissionRequest.quoteId}}/existingRecord\">Back To Quote</a>\r\n                    </ng-template>\r\n                </div>\r\n\r\n            </fieldset>\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- Modal -->\r\n<edit-project-location *ngIf=\"commissionRequest\" [(project)]=\"commissionRequest.project\"></edit-project-location>\r\n\r\n<!-- Modal -->\r\n<edit-customer-address *ngIf=\"commissionRequest\" [(project)]=\"commissionRequest.project\"></edit-customer-address>\r\n\r\n<!-- Modal -->\r\n<edit-seller-address *ngIf=\"commissionRequest\" [(project)]=\"commissionRequest.project\"></edit-seller-address>\r\n\r\n\r\n<!--Print Modal -->\r\n<div *ngIf=\"commissionRequest\" id=\"printModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHOW COST PRICING</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Should cost pricing be included in this print report?</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <a href=\"/Document/CommissionRequestPrint/{{commissionRequest.commissionRequestId}}?QuoteId={{commissionRequest.quoteId}}&ProjectId={{commissionRequest.projectId}}\" target=\"_blank\" onclick=\"$('#printModal').modal('hide')\" class=\"btn btn-default\">No</a>\r\n                <a href=\"/Document/CommissionRequestPrintWithCostPricing/{{commissionRequest.commissionRequestId}}?QuoteId={{commissionRequest.quoteId}}&ProjectId={{commissionRequest.projectId}}\" target=\"_blank\" onclick=\"$('#printModal').modal('hide')\" class=\"btn btn-default\">Yes</a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!--Export Modal -->\r\n<div *ngIf=\"commissionRequest\" id=\"exportModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHOW COST PRICING</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Should cost pricing be included in this export?</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <a href=\"/ProjectDashboard/CommissionRequestExport?CommissionRequestId={{commissionRequest.commissionRequestId}}&ProjectId={{commissionRequest.projectId}}&QuoteId={{commissionRequest.quoteId}}\" target=\"_blank\" onclick=\"$('#exportModal').modal('hide')\" class=\"btn btn-default\">No</a>\r\n                <a href=\"/ProjectDashboard/CommissionRequestExportWithCostPricing?CommissionRequestId={{commissionRequest.commissionRequestId}}&ProjectId={{commissionRequest.projectId}}&QuoteId={{commissionRequest.quoteId}}\" target=\"_blank\" onclick=\"$('#exportModal').modal('hide')\" class=\"btn btn-default\">Yes</a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/commission/commission-request.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var commissionRequest_service_1 = __webpack_require__("./src/app/commission/services/commissionRequest.service.ts");
var email_service_1 = __webpack_require__("./src/app/shared/services/email.service.ts");
var CommissionRequestComponent = /** @class */ (function () {
    function CommissionRequestComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, commissionRequestSvc, emailSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.commissionRequestSvc = commissionRequestSvc;
        this.emailSvc = emailSvc;
        this.enums = enums;
        this.commissionManuallyInput = false;
        this.user = this.route.snapshot.data['currentUser'].model;
        this.quoteId = this.route.snapshot.paramMap.get('quoteId');
        this.projectId = this.route.snapshot.paramMap.get('projectId');
        this.commissionRequestId = this.route.snapshot.paramMap.get('commissionRequestId');
        if (this.commissionRequestId == 0) {
            this.commissionRequestId = null;
        }
    }
    CommissionRequestComponent.prototype.ngOnInit = function () {
        this.getCommissionRequest();
        this.canApproveCommissions = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ApproveCommissionRequests);
    };
    CommissionRequestComponent.prototype.autofillChange = function () {
        var _this = this;
        if (this.loadOldCOM == true) {
            this.commissionRequestSvc.getMostRecentCommissionRequestModel(this.projectId, this.quoteId).subscribe(function (resp) {
                if (resp.isok) {
                    _this.oldCOM = resp.model;
                    _this.applyOldSelections();
                }
            }, function (error) {
                console.log("Error: " + error);
            });
        }
        else {
            this.removeSelections();
        }
    };
    CommissionRequestComponent.prototype.applyOldSelections = function () {
        this.commissionRequest.systemBasisDesignTypeId = this.oldCOM.systemBasisDesignTypeId;
        this.commissionRequest.zoneStrategyTypeId = this.oldCOM.zoneStrategyTypeId;
        this.commissionRequest.brandSpecifiedTypeId = this.oldCOM.brandSpecifiedTypeId;
        this.commissionRequest.brandApprovedTypeId = this.oldCOM.brandApprovedTypeId;
        this.commissionRequest.fundingTypeId = this.oldCOM.fundingTypeId;
        this.commissionRequest.thirdPartyEquipmentCosts = this.oldCOM.thirdPartyEquipmentCosts;
        this.commissionRequest.emailsList = this.oldCOM.emailsList;
    };
    CommissionRequestComponent.prototype.removeSelections = function () {
        this.commissionRequest.systemBasisDesignTypeId = null;
        this.commissionRequest.zoneStrategyTypeId = null;
        this.commissionRequest.brandSpecifiedTypeId = null;
        this.commissionRequest.brandApprovedTypeId = null;
        this.commissionRequest.fundingTypeId = null;
        this.commissionRequest.thirdPartyEquipmentCosts = null;
        this.commissionRequest.emailsList = null;
    };
    CommissionRequestComponent.prototype.getCommissionRequest = function () {
        var self = this;
        this.commissionRequestSvc.getCommissionRequestModel(this.projectId, this.quoteId, this.commissionRequestId, null).then(function (resp) {
            if (resp.isok) {
                self.commissionRequest = resp.model;
                //self.originalvalues = resp.model;
                self.calculateAll();
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    CommissionRequestComponent.prototype.selectCompetitorQuoteFile = function (e) {
        this.commissionRequest.competitorQuoteFileName = e.files[0].name;
    };
    CommissionRequestComponent.prototype.uploadEventHandler = function (e) {
        console.log("File Upload");
        e.data = {
            QuoteId: this.commissionRequest.quoteId,
        };
    };
    CommissionRequestComponent.prototype.successEventHandler = function (e) {
        var self = this;
        if (e.response.ok == true) {
            console.log("The " + e.operation + " was successful!");
        }
    };
    CommissionRequestComponent.prototype.errorEventHandler = function (e) {
        console.log("Error: " + e.response.statusText);
        this.toastrSvc.ErrorFadeOut(e.response.statusText);
    };
    CommissionRequestComponent.prototype.startupCostChange = function () {
        this.calculateTotals();
    };
    CommissionRequestComponent.prototype.thirdPartyEquipmentCostsChange = function () {
        this.calculateTotals();
    };
    CommissionRequestComponent.prototype.calculateDiscountAmountVRV = function (event) {
        var self = this;
        var data = {
            MultiplierCategoryTypeId: 2,
            Multiplier: this.commissionRequest.requestedMultiplierVRV
        };
        this.commissionRequestSvc.getCommissionPercentage(data)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageVRV = resp.model.commissionPercentage;
                self.calculateVRVCommission();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CommissionRequestComponent.prototype.calculateVRVCommission = function () {
        //Purchase Order Amount
        if (this.commissionRequest.commissionRequestStatusTypeId == this.enums.CommissionRequestStatusTypeEnum.Approved) {
            this.commissionRequest.totalNetVRV = this.commissionRequest.approvedTotalsCommission.totalListVRV * this.commissionRequest.approvedMultiplierVRV;
            this.commissionRequest.requestedCommissionVRV = this.commissionRequest.totalNetVRV * this.commissionRequest.approvedCommissionPercentageVRV;
            this.commissionRequest.requestedNetMaterialValueVRV = this.commissionRequest.totalNetVRV - this.commissionRequest.requestedCommissionVRV;
            this.commissionRequest.requestedNetMaterialMultiplierVRV = this.commissionRequest.requestedNetMaterialValueVRV / this.commissionRequest.approvedTotalsCommission.totalListVRV;
        }
        else {
            this.commissionRequest.totalNetVRV = this.commissionRequest.approvedTotalsCommission.totalListVRV * this.commissionRequest.requestedMultiplierVRV;
            this.commissionRequest.requestedCommissionVRV = this.commissionRequest.totalNetVRV * this.commissionRequest.requestedCommissionPercentageVRV;
            this.commissionRequest.requestedNetMaterialValueVRV = this.commissionRequest.totalNetVRV - this.commissionRequest.requestedCommissionVRV;
            this.commissionRequest.requestedNetMaterialMultiplierVRV = this.commissionRequest.requestedNetMaterialValueVRV / this.commissionRequest.approvedTotalsCommission.totalListVRV;
        }
        this.calculateTotals();
    };
    CommissionRequestComponent.prototype.calculateDiscountAmountSplit = function (event) {
        var self = this;
        var data = {
            MultiplierCategoryTypeId: 1,
            Multiplier: this.commissionRequest.requestedMultiplierSplit
        };
        this.commissionRequestSvc.getCommissionPercentage(data)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageSplit = resp.model.commissionPercentage;
                self.calculateSplitCommission();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CommissionRequestComponent.prototype.calculateSplitCommission = function () {
        if (this.commissionRequest.commissionRequestStatusTypeId == this.enums.CommissionRequestStatusTypeEnum.Approved) {
            this.commissionRequest.totalNetSplit = this.commissionRequest.approvedTotalsCommission.totalListSplit * this.commissionRequest.approvedMultiplierSplit;
            this.commissionRequest.requestedCommissionSplit = this.commissionRequest.totalNetSplit * this.commissionRequest.approvedCommissionPercentageSplit;
            this.commissionRequest.requestedNetMaterialValueSplit = this.commissionRequest.totalNetSplit - this.commissionRequest.requestedCommissionSplit;
            this.commissionRequest.requestedNetMaterialMultiplierSplit = this.commissionRequest.requestedNetMaterialValueSplit / this.commissionRequest.approvedTotalsCommission.totalListSplit;
        }
        else {
            this.commissionRequest.totalNetSplit = this.commissionRequest.approvedTotalsCommission.totalListSplit * this.commissionRequest.requestedMultiplierSplit;
            this.commissionRequest.requestedCommissionSplit = this.commissionRequest.totalNetSplit * this.commissionRequest.requestedCommissionPercentageSplit;
            this.commissionRequest.requestedNetMaterialValueSplit = this.commissionRequest.totalNetSplit - this.commissionRequest.requestedCommissionSplit;
            this.commissionRequest.requestedNetMaterialMultiplierSplit = this.commissionRequest.requestedNetMaterialValueSplit / this.commissionRequest.approvedTotalsCommission.totalListSplit;
        }
        this.calculateTotals();
    };
    CommissionRequestComponent.prototype.calculateDiscountAmountLCPackage = function (event) {
        var self = this;
        var data = {
            MultiplierCategoryTypeId: 4,
            Multiplier: this.commissionRequest.requestedMultiplierLCPackage
        };
        this.commissionRequestSvc.getCommissionPercentage(data)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageLCPackage = resp.model.commissionPercentage;
                self.calculateLCPackageCommission();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CommissionRequestComponent.prototype.calculateLCPackageCommission = function () {
        if (this.commissionRequest.commissionRequestStatusTypeId == this.enums.CommissionRequestStatusTypeEnum.Approved) {
            this.commissionRequest.totalNetLCPackage = this.commissionRequest.approvedTotalsCommission.totalListLCPackage * this.commissionRequest.approvedMultiplierLCPackage;
            this.commissionRequest.requestedCommissionLCPackage = this.commissionRequest.totalNetLCPackage * this.commissionRequest.approvedCommissionPercentageLCPackage;
            this.commissionRequest.requestedNetMaterialValueLCPackage = this.commissionRequest.totalNetLCPackage - this.commissionRequest.requestedCommissionLCPackage;
            this.commissionRequest.requestedNetMaterialMultiplierLCPackage = this.commissionRequest.requestedNetMaterialValueLCPackage / this.commissionRequest.approvedTotalsCommission.totalListLCPackage;
        }
        else {
            this.commissionRequest.totalNetLCPackage = this.commissionRequest.approvedTotalsCommission.totalListLCPackage * this.commissionRequest.requestedMultiplierLCPackage;
            this.commissionRequest.requestedCommissionLCPackage = this.commissionRequest.totalNetLCPackage * this.commissionRequest.requestedCommissionPercentageLCPackage;
            this.commissionRequest.requestedNetMaterialValueLCPackage = this.commissionRequest.totalNetLCPackage - this.commissionRequest.requestedCommissionLCPackage;
            this.commissionRequest.requestedNetMaterialMultiplierLCPackage = this.commissionRequest.requestedNetMaterialValueLCPackage / this.commissionRequest.approvedTotalsCommission.totalListLCPackage;
        }
        this.calculateTotals();
    };
    CommissionRequestComponent.prototype.calculateDiscountAmountUnitary = function (event) {
        var self = this;
        //Todo: Why do we have to do this?
        //this.commissionRequest.requestedMultiplier = this.commissionRequest.requestedMultiplierUnitary;
        this.commissionRequestSvc.getUnitaryCommissionPercentage(this.commissionRequest)
            .then(function (resp) {
            if (resp.isok) {
                self.commissionRequest.requestedCommissionPercentageUnitary = resp.model.commissionPercentage;
                self.calculateUnitaryCommission();
            }
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    CommissionRequestComponent.prototype.calculateUnitaryCommission = function () {
        if (this.commissionRequest.commissionRequestStatusTypeId == this.enums.CommissionRequestStatusTypeEnum.Approved) {
            this.commissionRequest.totalNetUnitary = this.commissionRequest.approvedTotalsCommission.totalListUnitary * this.commissionRequest.approvedMultiplierUnitary;
            this.commissionRequest.requestedCommissionUnitary = this.commissionRequest.totalNetUnitary * this.commissionRequest.approvedCommissionPercentageUnitary;
            this.commissionRequest.requestedNetMaterialValueUnitary = this.commissionRequest.totalNetUnitary - this.commissionRequest.requestedCommissionUnitary;
            this.commissionRequest.requestedNetMaterialMultiplierUnitary = this.commissionRequest.requestedNetMaterialValueUnitary / this.commissionRequest.approvedTotalsCommission.totalListUnitary;
        }
        else {
            this.commissionRequest.totalNetUnitary = this.commissionRequest.approvedTotalsCommission.totalListUnitary * this.commissionRequest.requestedMultiplierUnitary;
            this.commissionRequest.requestedCommissionUnitary = this.commissionRequest.totalNetUnitary * this.commissionRequest.requestedCommissionPercentageUnitary;
            this.commissionRequest.requestedNetMaterialValueUnitary = this.commissionRequest.totalNetUnitary - this.commissionRequest.requestedCommissionUnitary;
            this.commissionRequest.requestedNetMaterialMultiplierUnitary = this.commissionRequest.requestedNetMaterialValueUnitary / this.commissionRequest.approvedTotalsCommission.totalListUnitary;
        }
        this.calculateTotals();
    };
    CommissionRequestComponent.prototype.calculateTotals = function () {
        //Overall TotalList
        var totalListWithOtherAccessories = this.commissionRequest.approvedTotalsCommission.totalList;
        var totalListCommissionable = this.commissionRequest.approvedTotalsCommission.totalListVRV + this.commissionRequest.approvedTotalsCommission.totalListSplit + this.commissionRequest.approvedTotalsCommission.totalListLCPackage + this.commissionRequest.approvedTotalsCommission.totalListUnitary;
        //Notes: totalListNonCommissionable is totalList of Other/Accessorries which has multiplier is 1.0
        var totalListNonCommissionable = totalListWithOtherAccessories - totalListCommissionable;
        //Final TotalNet (Final Purchase Order Amount) with Other/Accessories
        this.commissionRequest.totalNet = this.commissionRequest.totalNetVRV + this.commissionRequest.totalNetSplit + this.commissionRequest.totalNetUnitary + this.commissionRequest.totalNetLCPackage + totalListNonCommissionable;
        //Total Net Multiplier
        this.commissionRequest.requestedMultiplier = this.commissionRequest.totalNet / this.commissionRequest.approvedTotalsCommission.totalList;
        //Total Commission Amount
        this.commissionRequest.requestedCommissionTotal = this.commissionRequest.requestedCommissionVRV + this.commissionRequest.requestedCommissionSplit + this.commissionRequest.requestedCommissionUnitary + this.commissionRequest.requestedCommissionLCPackage;
        //Commission Percent
        this.commissionRequest.requestedCommissionPercentage = this.commissionRequest.requestedCommissionTotal / this.commissionRequest.totalNet;
        //Net Material Value
        //this.commissionRequest.requestedNetMaterialValue = this.commissionRequest.requestedNetMaterialValueVRV + this.commissionRequest.requestedNetMaterialValueSplit + this.commissionRequest.requestedNetMaterialValueUnitary + this.commissionRequest.requestedNetMaterialValueLCPackage;// thieu Non-Commissionable products
        this.commissionRequest.requestedNetMaterialValue = this.commissionRequest.totalNet - this.commissionRequest.requestedCommissionTotal;
        //Net Material Value Multiplier
        this.commissionRequest.requestedNetMaterialValueMultiplier = this.commissionRequest.requestedNetMaterialValue / this.commissionRequest.approvedTotalsCommission.totalList;
        this.commissionRequest.totalRevised = this.commissionRequest.totalNet + this.commissionRequest.startUpCosts + this.commissionRequest.thirdPartyEquipmentCosts;
    };
    CommissionRequestComponent.prototype.commissionPercentageVRVChange = function () {
        this.calculateVRVCommission();
    };
    CommissionRequestComponent.prototype.commissionPercentageSplitChange = function () {
        this.calculateSplitCommission();
    };
    CommissionRequestComponent.prototype.commissionPercentageLCPackageChange = function () {
        this.calculateLCPackageCommission();
    };
    CommissionRequestComponent.prototype.commissionPercentageUnitaryChange = function () {
        this.calculateUnitaryCommission();
    };
    CommissionRequestComponent.prototype.calculateAll = function () {
        this.calculateVRVCommission();
        this.calculateSplitCommission();
        this.calculateUnitaryCommission();
        this.calculateLCPackageCommission();
    };
    CommissionRequestComponent.prototype.submit = function () {
        this.validateEmailsAndPostRequest();
    };
    CommissionRequestComponent.prototype.validateEmailsAndPostRequest = function () {
        var _this = this;
        var self = this;
        this.emailSvc.validateEmailList(this.commissionRequest.emailsList).subscribe(function (resp) {
            if (resp.isok) {
                _this.postRequest();
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.error("Error " + error);
        });
    };
    CommissionRequestComponent.prototype.postRequest = function () {
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#main-container"));
        self.blockUI.start('Loading...');
        this.commissionRequestSvc.postCommissionRequest(this.commissionRequest).subscribe(function (resp) {
            if (resp.isok) {
                //this.discountRequest = resp.model;
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                //send Email notification
                self.commissionRequestSvc.sendCommissionRequestEmail(self.commissionRequest).subscribe();
                self.router.navigateByUrl("/quote/" + self.commissionRequest.quoteId + "/existingRecord");
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    CommissionRequestComponent.prototype.approve = function () {
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#main-container"));
        self.blockUI.start('Loading...');
        this.commissionRequestSvc.approveCommissionRequest(this.commissionRequest).subscribe(function (resp) {
            if (resp.isok) {
                self.commissionRequest = resp.model;
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                self.commissionRequestSvc.sendApprovalRejectionEmail(self.commissionRequest).subscribe();
                window.location.href = "/Userdashboard/CommissionRequests";
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    CommissionRequestComponent.prototype.reject = function () {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#main-container"));
        this.blockUI.start('Loading...');
        this.commissionRequestSvc.rejectCommissionRequest(this.commissionRequest).subscribe(function (resp) {
            if (resp.isok) {
                self.commissionRequest = resp.model;
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                self.commissionRequestSvc.sendApprovalRejectionEmail(self.commissionRequest).subscribe();
                window.location.href = "/Userdashboard/CommissionRequests";
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    CommissionRequestComponent.prototype.delete = function () {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#main-container"));
        this.blockUI.start('Loading...');
        this.commissionRequestSvc.deleteCommissionRequest(this.commissionRequest).subscribe(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                self.commissionRequestSvc.sendApprovalRejectionEmail(self.commissionRequest).subscribe();
                //window.location.href = "/Userdashboard/CommissionRequests";
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], CommissionRequestComponent.prototype, "blockUI", void 0);
    CommissionRequestComponent = __decorate([
        core_1.Component({
            selector: "commission-request",
            template: __webpack_require__("./src/app/commission/commission-request.component.html"),
            styles: [__webpack_require__("./src/app/commission/commission-request.component.css")]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService,
            user_service_1.UserService, account_service_1.AccountService,
            quote_service_1.QuoteService, commissionRequest_service_1.CommissionRequestService,
            email_service_1.EmailService,
            enums_1.Enums])
    ], CommissionRequestComponent);
    return CommissionRequestComponent;
}());
exports.CommissionRequestComponent = CommissionRequestComponent;


/***/ }),

/***/ "./src/app/commission/services/commissionRequest.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var CommissionRequestService = /** @class */ (function () {
    function CommissionRequestService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    CommissionRequestService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    CommissionRequestService.prototype.extractHtml = function (res) {
        return res._body;
    };
    CommissionRequestService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        //console.error(error); // log to console instead
        console.log(error);
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    CommissionRequestService.prototype.getCommissionRequestModel = function (projectId, quoteId, commissionRequestId, commissionRequestStatusTypeId) {
        return this.http.get("/api/CommissionRequest/GetCommissionRequestModel?projectId=" + projectId + "&quoteId=" + quoteId + "&commissionRequestId=" + commissionRequestId + "&commissionRequestStatusTypeId=" + commissionRequestStatusTypeId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.getCommissionCalculationModel = function (projectId, quoteId, commissionRequestId, commissionRequestStatusTypeId) {
        return this.http.get("/api/CommissionRequest/GetCommissionCalculationModel?projectId=" + projectId + "&quoteId=" + quoteId + "&commissionRequestId=" + commissionRequestId + "&commissionRequestStatusTypeId=" + commissionRequestStatusTypeId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.postCommissionCalculation = function (data) {
        return this.http.post("/api/CommissionRequest/PostCommissionCalculation", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.postCommissionRequest = function (commissiontRequest) {
        return this.http.post("/api/CommissionRequest/PostCommissionRequest", commissiontRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.approveCommissionRequest = function (commissiontRequest) {
        //MVC Controller
        //return this.http.post("/ProjectDashboard/CommissionRequestApprove", data, { headers: this.headers })
        //    .map(this.extractData)
        //    .catch(this.handleError);
        return this.http.post("/api/CommissionRequest/ApproveCommissionRequest", commissiontRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.rejectCommissionRequest = function (commissiontRequest) {
        return this.http.post("/api/CommissionRequest/RejectCommissionRequest", commissiontRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.deleteCommissionRequest = function (commissiontRequest) {
        return this.http.post("/api/CommissionRequest/DeleteCommissionRequest", commissiontRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.getCommissionPercentage = function (data) {
        return this.http.post("/api/CommissionRequest/GetCommissionPercentage", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.getUnitaryCommissionPercentage = function (data) {
        return this.http.post("/api/CommissionMultiplier/GetUnitaryMultiplier", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.sendCommissionRequestEmail = function (commissiontRequest) {
        return this.http.post("/ProjectDashboard/SendCommissionRequestEmail", commissiontRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.sendApprovalRejectionEmail = function (commissiontRequest) {
        return this.http.post("/ProjectDashboard/SendApprovalRejectionCommissionRequestEmail", commissiontRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService.prototype.getMostRecentCommissionRequestModel = function (projectId, quoteId) {
        return this.http.get("/api/CommissionRequest/GetMostRecentCommissionRequestModel?projectId=" + projectId + "&quoteId=" + quoteId)
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommissionRequestService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], CommissionRequestService);
    return CommissionRequestService;
}());
exports.CommissionRequestService = CommissionRequestService;


/***/ }),

/***/ "./src/app/discount/discount-request.component.css":
/***/ (function(module, exports) {

module.exports = ".discountRequestForm {\r\n    background-color: #E5F2FA;\r\n}\r\n\r\n/*Desktop*/\r\n\r\n@media (min-width: 1200px) {\r\n    .discountRequestForm {\r\n        padding: 20px 100px;\r\n    }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n    /*.discountRequestForm {\r\n        padding: 20px 100px;\r\n    }*/\r\n}\r\n\r\nhr {\r\n    /*border-top-color: #d5d5d5;*/\r\n    border-top-color:#a6d7ef;\r\n}\r\n\r\nlegend {\r\n    border-bottom-color: #a0a0a0;\r\n    color: #00a1e4;\r\n    font-weight: bold;\r\n}\r\n\r\nh5 {\r\n    color: #00A1E4;\r\n    text-transform: uppercase;\r\n    font-family: \"museo-sans\", sans-serif;\r\n    font-weight: 600;\r\n}\r\n\r\n.dactbl-heading {\r\n    background-color: #E6EEF1;\r\n    text-transform: uppercase;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    text-align: center;\r\n    font-size: 15px;\r\n}\r\n\r\n.bluecell {\r\n    background-color: #DFF6FE;\r\n    color: #00A1E4;\r\n}\r\n\r\n.lightbluecell {\r\n    background-color: #EAF9FE;\r\n    color: #00A1E4;\r\n}\r\n\r\n.lightgreycell {\r\n    background-color:#E6EEF1;\r\n    color:black;\r\n}\r\n\r\n.border-top-bottom {\r\n    border-top: 1px solid #a6d7ef;\r\n    border-bottom: 1px solid #a6d7ef;\r\n}\r\n\r\n.border-bottom {\r\n    border-bottom: 1px solid #a6d7ef;\r\n}\r\n\r\n.padding-15 {\r\n    padding: 15px;\r\n}\r\n\r\n@media (min-width: 1000px) {\r\n    .discount-row {\r\n        height: 76px;\r\n    }\r\n}\r\n\r\n.total-discount-row {\r\n    /*font-size:20px;*/\r\n}\r\n\r\n.totalcell {\r\n    font-size:24px;\r\n}\r\n\r\n.black-label {\r\n    /*color: black;*/\r\n}\r\n\r\n/*moved stop daikin-misc*/\r\n\r\n/*.grey-text-italic {\r\n    font-size: smaller;\r\n    font-style: italic;\r\n    color: grey;\r\n}*/\r\n"

/***/ }),

/***/ "./src/app/discount/discount-request.component.html":
/***/ (function(module, exports) {

module.exports = "<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n   \r\n    <ul *ngIf=\"discountRequest\" class=\"breadcrumbs\">\r\n        <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n        <li><a href=\"/v3/#/project/{{discountRequest.projectId}}\">{{discountRequest.project.name}}</a></li>\r\n        <li><a href=\"/v3/#/quote/{{discountRequest.quoteId}}/existingRecord\">{{discountRequest.quote.title}}</a></li>\r\n        <li>Discount Authorization Request (DAR)</li>\r\n    </ul>\r\n    <div>\r\n        <div class=\"pull-right\" *ngIf=\"discountRequest.discountRequestId\">\r\n            <button class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#printModal\"><span class=\"glyphicon glyphicon-print\"></span> Print Request</button>\r\n            <button class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#exportModal\"><span class=\"k-icon k-i-file-excel\"></span> Export Request</button>\r\n        </div>\r\n        <h3>DISCOUNT AUTHORIZATION REQUEST</h3>\r\n    </div>\r\n    <div *ngIf=\"discountRequest\" class=\"row\">\r\n        \r\n        <div class=\"col-md-4\">\r\n            <h4 [ngSwitch]=\"discountRequest.discountRequestStatusTypeId\">\r\n                <span *ngSwitchCase=\"0\">NEW REQUEST</span>\r\n                <span *ngSwitchCase=\"2\">STATUS: PENDING</span>\r\n                <span *ngSwitchCase=\"4\">STATUS: REJECTED</span>\r\n                <span *ngSwitchCase=\"6\">STATUS: APPROVED</span>\r\n                <span *ngSwitchCase=\"8\">STATUS: DELETED</span>\r\n\r\n            </h4>\r\n        </div>\r\n        <div *ngIf=\"discountRequest.hasOldDAR && discountRequest.discountRequestStatusTypeId == 0\" class=\"col-md-8 text-right\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"loadOldDAR\" (ngModelChange)=\"autofillChange()\" name=\"loadOldDAR\" /> <span style=\"font-weight:bold; color:#00A1E4;\"> Load selections from the most recent discount request</span><br />\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"!discountRequest\">\r\n        <!--<span class=\"k-icon k-i-loading\" style=\"width:100%; font-size:32px;\"></span>-->\r\n    </div>\r\n\r\n    <div *ngIf=\"discountRequest\" class=\"discountRequestForm\">\r\n        <form id=\"discountRequestForm\" #discountRequestForm=\"ngForm\" novalidate>\r\n            <fieldset>\r\n                <legend>PROJECT SYSTEMS AND COMPETITIVE POSITION OF OPPORTUNITY</legend>\r\n\r\n                <!--Project Details-->\r\n                <div class=\"row no-gutters\">\r\n                    <!--<div class=\"hidden-xs col-md-1\"></div>-->\r\n                    <div class=\"col-md-11 col-xs-12\">\r\n                        <h5>Project Details</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row no-gutters\">\r\n                    <!--<div class=\"hidden-xs col-md-1\"></div>-->\r\n                    <div class=\"col-md-6 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Name: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.name}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Reference: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.projectId}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Registration Date: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.projectDate  | date: 'shortDate'}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Bid Date: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.bidDate | date: 'shortDate'}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Estimated Close: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.estimatedClose | date: 'shortDate'}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Estimated Delivery: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.estimatedDelivery | date: 'shortDate'}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-xs-12\">\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Construction Type: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.constructionTypeDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Status: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.projectStatusDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Type: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.projectTypeDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Open Status: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.projectOpenStatusDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Vertical Market: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.verticalMarketDescription}}</div>\r\n                        <div class=\"col-md-6 col-xs-12 as-lnk\">Project Status Notes: </div> <div class=\"col-md-6 col-xs-12\">{{discountRequest.project.description}}</div>\r\n                    </div>\r\n\r\n                    <!--<div class=\"hidden-xs col-md-1\"></div>-->\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Project System Basis Of Design</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"discountRequest.systemBasisDesignTypeId\" name=\"systemBasisDesignType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of discountRequest.systemBasisDesignTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Zone Strategy</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"discountRequest.zoneStrategyTypeId\" name=\"zoneStrategyType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of discountRequest.zoneStrategyTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Select Brand Specified</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"discountRequest.brandSpecifiedTypeId\" name=\"brandSpecifiedType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of discountRequest.brandSpecifiedTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Select Approved Equals</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"discountRequest.brandApprovedTypeId\" name=\"brandApprovedType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of discountRequest.brandApprovedTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr />\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <p class=\"control-label\">Is a copy of competitors price to customer available?</p>\r\n                        <kendo-switch [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                      [(ngModel)]=\"discountRequest.hasCompetitorPrice\"\r\n                                      [onLabel]=\"'Yes'\"\r\n                                      [offLabel]=\"'No'\"\r\n                                      (ngModelChange)=\"hasCompetitorPriceChange($event)\"\r\n                                      name=\"hasCompetitorPrice\"></kendo-switch>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label\" [ngClass]=\"{'required': discountRequest.hasCompetitorPrice}\">Enter Competitor Price</label>\r\n                        <!--<input type=\"number\" class=\"form-control\" [(ngModel)]=\"discountRequest.competitorPrice\" name=\"competitorPrice\" />-->\r\n                        <kendo-numerictextbox id=\"competitorPrice\" class=\"form-control\"\r\n                                              [disabled]=\"!discountRequest.hasCompetitorPrice\"\r\n                                              [required]=\"discountRequest.hasCompetitorPrice\"\r\n                                              [format]=\"'c0'\"\r\n                                              [min]=\"0\"\r\n                                              [(ngModel)]=\"discountRequest.competitorPrice\" name=\"competitorPrice\">\r\n                        </kendo-numerictextbox>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <!--Competitor Quote File-->\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <p class=\"control-label\">Is a copy of competitors quote to customer available?</p>\r\n                        <kendo-switch [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                      [(ngModel)]=\"discountRequest.hasCompetitorQuote\"\r\n                                      [onLabel]=\"'Yes'\"\r\n                                      [offLabel]=\"'No'\"\r\n                                      (ngModelChange)=\"hasCompetitorQuoteChange($event)\"\r\n                                      name=\"hasCompetitorQuote\"></kendo-switch>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\" *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\">\r\n                        <label class=\"control-label\" [ngClass]=\"{'required': discountRequest.hasCompetitorQuote}\">Attach Copy Of Competitors Quote</label>\r\n                        <!--<input type=\"file\" [disabled]=\"!discountRequest.hasCompetitorQuote\"\r\n                        [required]=\"discountRequest.hasCompetitorQuote\"\r\n                        (change)=\"competitorQuoteFileChange($event)\"\r\n                        name=\"competitorQuoteFile\" />-->\r\n\r\n                        <kendo-upload [disabled]=\"!discountRequest.hasCompetitorQuote\"\r\n                                      [required]=\"discountRequest.hasCompetitorQuote\"\r\n                                      [autoUpload]=\"true\"\r\n                                      [saveUrl]=\"'/api/DiscountRequest/UploadCompetitorQuoteFile'\"\r\n                                      [multiple]=\"false\"\r\n                                      [(ngModel)]=\"competitorQuoteFiles\"\r\n                                      name=\"competitorQuoteFile\"\r\n                                      (select)=\"selectCompetitorQuoteFile($event)\"\r\n                                      (upload)=\"uploadEventHandler($event)\"\r\n                                      [withCredentials]=\"true\"\r\n                                      (success)=\"successEventHandler($event)\"\r\n                                      (error)=\"errorEventHandler($event)\">\r\n                        </kendo-upload>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\" *ngIf=\"discountRequest.discountRequestStatusTypeId != 0 && discountRequest.hasCompetitorQuote\">\r\n                        <label class=\"control-label\">Competitors quote attached</label>\r\n                        <div>\r\n                            <a href=\"/document/dar/{{discountRequest.quoteId}}/?filename={{discountRequest.competitorQuoteFileName}}\" target=\"_blank\">\r\n                                {{discountRequest.competitorQuoteFileName}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <!--Competitor Line by Line Comparison File-->\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <p class=\"control-label\">Was a line by line comparison of competitor to Daikin completed?</p>\r\n                        <kendo-switch [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                      [(ngModel)]=\"discountRequest.hasCompetitorLineComparsion\"\r\n                                      [onLabel]=\"'Yes'\"\r\n                                      [offLabel]=\"'No'\"\r\n                                      (ngModelChange)=\"hasCompetitorLineComparsionChange($event)\"\r\n                                      name=\"hasCompetitorLineComparsion\">\r\n                        </kendo-switch>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\" *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\">\r\n                        <label class=\"control-label\" [ngClass]=\"{'required': discountRequest.hasCompetitorLineComparsion}\">Attach Line By Line</label>\r\n\r\n                        <kendo-upload [disabled]=\"!discountRequest.hasCompetitorLineComparsion\"\r\n                                      [autoUpload]=\"true\"\r\n                                      [saveUrl]=\"'/api/DiscountRequest/UploadCompetitorLineComparsionFile'\"\r\n                                      [multiple]=\"false\"\r\n                                      name=\"competitorLineComparsionFile\"\r\n                                      (select)=\"selectLineComparsionFile($event)\"\r\n                                      (upload)=\"uploadEventHandler($event)\"\r\n                                      [withCredentials]=\"true\"\r\n                                      (success)=\"successEventHandler($event)\"\r\n                                      (error)=\"errorEventHandler($event)\">\r\n                        </kendo-upload>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-6\" *ngIf=\"discountRequest.discountRequestStatusTypeId != 0 && discountRequest.hasCompetitorLineComparsion\">\r\n                        <label class=\"control-label\">Competitors line By line comparison file attached</label>\r\n                        <div>\r\n                            <a href=\"/document/dar/{{discountRequest.quoteId}}/?filename={{discountRequest.competitorLineComparsionFileName}}\" target=\"_blank\">\r\n                                {{discountRequest.competitorLineComparsionFileName}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"control-label required\">Is Daikin Equipment at an Advantage/Disadvantage?</label>\r\n                        <select class=\"form-control\" required\r\n                                [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"discountRequest.daikinEquipmentAtAdvantageTypeId\" name=\"daikinEquipmentAtAdvantageType\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of discountRequest.daikinEquipmentAtAdvantageTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </fieldset>\r\n\r\n            <!--Standard Discount-->\r\n            <fieldset>\r\n                <legend>REP/DISTRIBUTOR AND DAIKIN INFORMATION AND COSTING FOR OPPORTUNITY</legend>\r\n\r\n                <div class=\"dactbl-heading border-bottom\">TOTAL NET PRICE BASED ON STANDARD MULTIPLIER(S)</div>\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Total Listed Value Of This Project Offering</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">{{discountRequest.standardTotals.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Total Net (VRV-GNA + RA-QA + Unitary + LC Package)</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">\r\n                        {{discountRequest.standardTotals.totalNet | currency:'USD':true:'1.2-2'}}\r\n                        ({{discountRequest.standardTotals.totalNetVRV | currency:'USD':true:'1.2-2'}} +\r\n                        {{discountRequest.standardTotals.totalNetSplit | currency:'USD':true:'1.2-2'}} +\r\n                        {{discountRequest.standardTotals.totalNetUnitary | currency:'USD':true:'1.2-2'}} +\r\n                        {{discountRequest.standardTotals.totalNetLCPackage | currency:'USD':true:'1.2-2'}})\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Freight Costs</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">{{discountRequest.quote.totalFreight | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Start up / Commissioning costs</div>\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">\r\n                        <!--<input type=\"number\" [(ngModel)]=\"discountRequest.StartUpCosts\"\r\n                        name=\"startupcost\" />-->\r\n\r\n                        <kendo-numerictextbox [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                              [format]=\"'c0'\"\r\n                                              [min]=\"0\"\r\n                                              [(ngModel)]=\"discountRequest.startUpCosts\" name=\"startUpCosts\"\r\n                                              (ngModelChange)=\"startupCostChange()\">\r\n                        </kendo-numerictextbox>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 no-padding\">\r\n                        <div class=\"col-md-10 padding-15\">Rep/Distributor Gross Profit on Opportunity</div>\r\n                        <!--<div class=\"col-md-2 padding-15 lightbluecell\">{{discountRequest.standardTotals.totalCommissionPercentage  | percent:'1.2-3'}}</div>-->\r\n                        <div class=\"col-md-2 padding-15 lightbluecell\">{{discountRequest.standardTotals.grossMarginMarkUp  | percent:'1.2-3'}}</div>\r\n                    </div>\r\n                    <!--<div class=\"col-md-5 col-xs-12 padding-15 bluecell\">{{discountRequest.approvedTotals.totalCommissionAmount | currency:'USD':true:'1.2-2'}}</div>-->\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 bluecell\">{{discountRequest.standardTotals.totalCommissionAmount | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-7 col-xs-12 padding-15\">Total standard sales value of this opportunity from Rep/Dist to customer</div>\r\n                    <!--<div class=\"col-md-5 col-xs-12 padding-15 bluecell\">{{(discountRequest.approvedTotals.totalSell + discountRequest.startUpCosts + discountRequest.quote.totalFreight + discountRequest.standardTotals.totalCommissionAmount) | currency:'USD':true:'1.2-2'}}</div>-->\r\n                    <div class=\"col-md-5 col-xs-12 padding-15 lightgreycell\">{{(discountRequest.standardTotals.totalNet + discountRequest.startUpCosts + discountRequest.quote.totalFreight + discountRequest.standardTotals.totalCommissionAmount) | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n            </fieldset>\r\n\r\n\r\n            <!--Request Discount-->\r\n            <fieldset>\r\n                <legend>OPPORTUNITY DISCOUNT AMOUNT REQUESTED</legend>\r\n                <div class=\"dactbl-heading border-bottom\">TOTAL NET PRICE BASED ON REQUESTED DISCOUNTS</div>\r\n                <!--VRV-->\r\n                <div *ngIf=\"discountRequest.quote.totalListVRV > 0\" class=\"row no-gutters border-bottom\">\r\n                    <!--Request-->\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <!--<div>Discount being requested for VRV - GNA in this opportunity?</div>-->\r\n                        <!--new request-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\">\r\n                            <!--<p>{{discountRequest.requestedDiscountVRV | percent:'1.2-2' }}</p>-->\r\n                            <!--<kendo-numerictextbox [(ngModel)]=\"discountRequest.requestedDiscountVRV\"\r\n                                                  name=\"requestedDiscountVRV\"\r\n                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountVRV($event)\">\r\n                            </kendo-numerictextbox>\r\n\r\n                            <div class=\"grey-text-italic\">Enter value from 0.01 to 1.00</div>-->\r\n\r\n                            <div>Discount being requested for VRV - GNA in this opportunity?</div>\r\n\r\n                            <input type=\"number\" min=\"0\" max=\"100\"\r\n                                   #requestedDiscountVRV\r\n                                   [value]=\"discountRequest.requestedDiscountVRV*100 | number:'1.0-2'\"\r\n                                   name=\"requestedDiscountVRV\"\r\n                                   (keyup)=\"calculateDiscountAmountVRV(requestedDiscountVRV.value)\"\r\n                                   (change)=\"calculateDiscountAmountVRV(requestedDiscountVRV.value)\" />%\r\n                        </div>\r\n\r\n                        <!--pending-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2 || discountRequest.discountRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveDiscounts; else elseBlock\">\r\n                                <div>Discount being requested for VRV - GNA in this opportunity?</div>\r\n                                <div>{{discountRequest.requestedDiscountVRV | percent:'1.2-2' }}</div>\r\n\r\n                                <div>Discount approved for VRV - GNA in this opportunity?</div>\r\n                                <input type=\"number\" min=\"0\" max=\"100\"\r\n                                       #approvedDiscountVRV\r\n                                       [value]=\"discountRequest.approvedDiscountVRV*100 | number:'1.0-2'\"\r\n                                       name=\"approvedDiscountVRV\"\r\n                                       (keyup)=\"calculateApprovedDiscountAmountVRV(approvedDiscountVRV.value)\"\r\n                                       (change)=\"calculateApprovedDiscountAmountVRV(approvedDiscountVRV.value)\" />%\r\n                            </div>\r\n                            <ng-template #elseBlock>\r\n                                <div>Discount being requested for VRV - GNA in this opportunity.</div>\r\n                                <div>{{discountRequest.requestedDiscountVRV | percent:'1.2-2' }}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 6\">\r\n\r\n                            <div>Discount being requested for VRV - GNA in this opportunity.</div>\r\n                            <div>{{discountRequest.requestedDiscountVRV | percent:'1.2-2' }}</div>\r\n\r\n                            <div>Discount approved for VRV - GNA in this opportunity.</div>\r\n                            <div>{{discountRequest.approvedDiscountVRV | percent:'1.2-2' }}</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell discount-row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Discount Amount</div>\r\n                            <div>{{discountRequest.approvedTotals.totalDiscountAmountVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Multiplier</div>\r\n                            <div>{{discountRequest.approvedTotals.netMultiplierVRV | number:'1.3-3'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Material Value</div>\r\n                            <div>{{discountRequest.approvedTotals.netMaterialValueVRV | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Slpit-->\r\n                <div *ngIf=\"discountRequest.quote.totalListSplit > 0\" class=\"row no-gutters border-bottom\">\r\n                    <!--Request-->\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <!--<div>Discount being requested for RA-QA in this opportunity?</div>-->\r\n                        <!--new request-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\">\r\n                            <!--<kendo-numerictextbox [(ngModel)]=\"discountRequest.requestedDiscountSplit\"\r\n                                                  name=\"requestedDiscountSplit\"\r\n                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountSplit($event)\">\r\n                            </kendo-numerictextbox>\r\n                            <div class=\"grey-text-italic\">Enter value from 0.01 to 1.00</div>-->\r\n\r\n                            <div>Discount being requested for RA-QA in this opportunity?</div>\r\n\r\n                            <input type=\"number\" min=\"0\" max=\"100\"\r\n                                   #requestedDiscountSplit\r\n                                   [value]=\"discountRequest.requestedDiscountSplit*100 | number:'1.0-2'\"\r\n                                   name=\"requestedDiscountSplit\"\r\n                                   (keyup)=\"calculateDiscountAmountSplit(requestedDiscountSplit.value)\"\r\n                                   (change)=\"calculateDiscountAmountSplit(requestedDiscountSplit.value)\" />%\r\n                        </div>\r\n\r\n                        <!--pending-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2 || discountRequest.discountRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveDiscounts; else elseBlock\">\r\n                                <div>Discount being requested for RA-QA in this opportunity?</div>\r\n                                <div>{{discountRequest.requestedDiscountSplit | percent:'1.2-2' }}</div>\r\n\r\n                                <div>Discount approved for RA-QA in this opportunity?</div>\r\n                                <input type=\"number\" min=\"0\" max=\"100\"\r\n                                       #approvedDiscountSplit\r\n                                       [value]=\"discountRequest.approvedDiscountSplit*100 | number:'1.0-2'\"\r\n                                       name=\"approvedDiscountSplit\"\r\n                                       (keyup)=\"calculateApprovedDiscountAmountSplit(approvedDiscountSplit.value)\"\r\n                                       (change)=\"calculateApprovedDiscountAmountSplit(approvedDiscountSplit.value)\" />%\r\n                            </div>\r\n\r\n                            <ng-template #elseBlock>\r\n                                <div>Discount being requested for RA-QA in this opportunity</div>\r\n                                <div>{{discountRequest.requestedDiscountSplit | percent:'1.2-2' }}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 6\">\r\n\r\n                            <div>Discount being requested for RA-QA in this opportunity.</div>\r\n                            <div>{{discountRequest.requestedDiscountSplit | percent:'1.2-2' }}</div>\r\n\r\n                            <div>Discount approved for RA-QA in this opportunity.</div>\r\n                            <div>{{discountRequest.approvedDiscountSplit | percent:'1.2-2' }}</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell discount-row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Discount Amount</div>\r\n                            <div>{{discountRequest.approvedTotals.totalDiscountAmountSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Multiplier</div>\r\n                            <div>{{discountRequest.approvedTotals.netMultiplierSplit | number:'1.3-3'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Material Value</div>\r\n                            <div>{{discountRequest.approvedTotals.netMaterialValueSplit | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Unitary-->\r\n                <div *ngIf=\"discountRequest.quote.totalListUnitary > 0\" class=\"row no-gutters border-bottom\">\r\n                    <!--Request-->\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <!--<div>Discount being requested for Unitary in this opportunity?</div>-->\r\n                        <!--new request-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\">\r\n                            <!--<kendo-numerictextbox [(ngModel)]=\"discountRequest.requestedDiscountUnitary\"\r\n                                                  name=\"requestedDiscountUnitary\"\r\n                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountUnitary($event)\">\r\n                            </kendo-numerictextbox>\r\n                            <div class=\"grey-text-italic\">Enter value from 0.01 to 1.00</div>-->\r\n\r\n                            <div>Discount being requested for Unitary in this opportunity?</div>\r\n                            <input type=\"number\" min=\"0\" max=\"100\"\r\n                                   #requestedDiscountUnitary\r\n                                   [value]=\"discountRequest.requestedDiscountUnitary*100 | number:'1.0-2'\"\r\n                                   name=\"requestedDiscountUnitary\"\r\n                                   (keyup)=\"calculateDiscountAmountUnitary(requestedDiscountUnitary.value)\"\r\n                                   (change)=\"calculateDiscountAmountUnitary(requestedDiscountUnitary.value)\" />%\r\n\r\n                        </div>\r\n\r\n                        <!--pending-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2 || discountRequest.discountRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveDiscounts; else elseBlock\">\r\n                                <div>Discount being requested for Unitary in this opportunity?</div>\r\n                                <div>{{discountRequest.requestedDiscountUnitary | percent:'1.2-2' }}</div>\r\n\r\n                                <div>Discount approved for Unitary in this opportunity?</div>\r\n                                <input type=\"number\" min=\"0\" max=\"100\"\r\n                                       #approvedDiscountUnitary\r\n                                       [value]=\"discountRequest.approvedDiscountUnitary*100 | number:'1.0-2'\"\r\n                                       name=\"approvedDiscountUnitary\"\r\n                                       (keyup)=\"calculateApprovedDiscountAmountUnitary(approvedDiscountUnitary.value)\"\r\n                                       (change)=\"calculateApprovedDiscountAmountUnitary(approvedDiscountUnitary.value)\" />%\r\n                            </div>\r\n\r\n                            <ng-template #elseBlock>\r\n                                <div>Discount being requested for Unitary in this opportunity.</div>\r\n                                <div>{{discountRequest.requestedDiscountUnitary | percent:'1.2-2' }}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 6\">\r\n\r\n                            <div>Discount being requested for Unitary in this opportunity.</div>\r\n                            <div>{{discountRequest.requestedDiscountUnitary | percent:'1.2-2' }}</div>\r\n\r\n                            <div>Discount approved for Unitary in this opportunity.</div>\r\n                            <div>{{discountRequest.approvedDiscountUnitary | percent:'1.2-2' }}</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell discount-row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Discount Amount</div>\r\n                            <div>{{discountRequest.approvedTotals.totalDiscountAmountUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Multiplier</div>\r\n                            <div>{{discountRequest.approvedTotals.netMultiplierUnitary | number:'1.3-3'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Material Value</div>\r\n                            <div>{{discountRequest.approvedTotals.netMaterialValueUnitary | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--LCPackage-->\r\n                <div *ngIf=\"discountRequest.quote.totalListLCPackage > 0\" class=\"row no-gutters border-bottom\">\r\n                    <!--Request-->\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <!--<div>Discount being requested for LC Package in this opportunity?</div>-->\r\n                        <!--New Request-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\">\r\n                            <!--<kendo-numerictextbox [(ngModel)]=\"discountRequest.requestedDiscountLCPackage\"\r\n                                                  name=\"requestedDiscountLCPackage\"\r\n                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateDiscountAmountLCPackage($event)\">\r\n                            </kendo-numerictextbox>\r\n                            <div class=\"grey-text-italic\">Enter value from 0.01 to 1.00</div>-->\r\n\r\n                            <div>Discount being requested for LC Package in this opportunity?</div>\r\n                            <input type=\"number\" min=\"0\" max=\"100\"\r\n                                   #requestedDiscountLCPackage\r\n                                   [value]=\"discountRequest.requestedDiscountLCPackage*100 | number:'1.0-2'\"\r\n                                   name=\"requestedDiscountUnitary\"\r\n                                   (keyup)=\"calculateDiscountAmountLCPackage(requestedDiscountLCPackage.value)\"\r\n                                   (change)=\"calculateDiscountAmountLCPackage(requestedDiscountLCPackage.value)\" />%\r\n\r\n                        </div>\r\n\r\n                        <!--Pending-->\r\n\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2 || discountRequest.discountRequestStatusTypeId == 4\">\r\n                            <div *ngIf=\"canApproveDiscounts; else elseBlock\">\r\n                                <div>Discount being requested for LC Package in this opportunity?</div>\r\n                                <div>{{discountRequest.requestedDiscountLCPackage | percent:'1.2-2' }}</div>\r\n\r\n                                <div>Discount approved for LCPackage in this opportunity?</div>\r\n                                <input type=\"number\" min=\"0\" max=\"100\"\r\n                                       #approvedDiscountLCPackage\r\n                                       [value]=\"discountRequest.approvedDiscountLCPackage*100 | number:'1.0-2'\"\r\n                                       name=\"approvedDiscountLCPackage\"\r\n                                       (keyup)=\"calculateApprovedDiscountAmountLCPackage(approvedDiscountLCPackage.value)\"\r\n                                       (change)=\"calculateApprovedDiscountAmountLCPackage(approvedDiscountLCPackage.value)\" />%\r\n                            </div>\r\n\r\n                            <ng-template #elseBlock>\r\n                                <div>Discount being requested for LC Package in this opportunity.</div>\r\n                                <div>{{discountRequest.requestedDiscountLCPackage | percent:'1.2-2' }}</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n\r\n                        <!--approved-->\r\n                        <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 6\">\r\n\r\n                            <div>Discount being requested for LCPackage in this opportunity.</div>\r\n                            <div>{{discountRequest.requestedDiscountLCPackage | percent:'1.2-2' }}</div>\r\n\r\n                            <div>Discount approved for LCPackage in this opportunity.</div>\r\n                            <div>{{discountRequest.approvedDiscountLCPackage | percent:'1.2-2' }}</div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell discount-row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Discount Amount</div>\r\n                            <div>{{discountRequest.approvedTotals.totalDiscountAmountLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Multiplier</div>\r\n                            <div>{{discountRequest.approvedTotals.netMultiplierLCPackage | number:'1.3-3'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"black-label\">Net Material Value</div>\r\n                            <div>{{discountRequest.approvedTotals.netMaterialValueLCPackage | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Total Discount-->\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <!--Left-->\r\n                    <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\" class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <div>Total Discount being requested in this opportunity</div>\r\n                        <div>\r\n                            {{discountRequest.requestedDiscount | percent:'1.2-3'}}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2 || discountRequest.discountRequestStatusTypeId == 4\" class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <div>Total Discount being requested in this opportunity</div>\r\n                        <div>\r\n                            {{discountRequest.requestedDiscount | percent:'1.2-3'}}\r\n                        </div>\r\n                        <div *ngIf=\"canApproveDiscounts\">\r\n                            <div>Total Discount being approved in this opportunity</div>\r\n                            <div>\r\n                                {{discountRequest.approvedDiscount | percent:'1.2-3'}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 6\" class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <div>Total Discount being requested in this opportunity</div>\r\n                        <div>\r\n                            {{discountRequest.requestedDiscount | percent:'1.2-3'}}\r\n                        </div>\r\n                        <div>\r\n                            <div>Total Discount being approved in this opportunity</div>\r\n                            <div>\r\n                                {{discountRequest.approvedDiscount | percent:'1.2-3'}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!--Right-->\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 lightgreycell total-discount-row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div>Discount Amount</div>\r\n                            <div>{{discountRequest.approvedTotals.totalDiscountAmount | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div>Net Multiplier</div>\r\n                            <div>{{discountRequest.approvedTotals.netMultiplier | number:'1.3-3'}}</div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div>Net Material Value</div>\r\n                            <div>{{discountRequest.approvedTotals.netMaterialValue | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">Freight Costs</div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell\" style=\"padding-left:30px;\">\r\n                        {{discountRequest.quote.totalFreight | currency:'USD':true:'1.2-2'}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">Start up / Commissioning costs</div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell\" style=\"padding-left:30px;\">\r\n                        {{discountRequest.startUpCosts | currency:'USD':true:'1.2-2'}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">\r\n                        <div>Rep/Distributor revised gross profit on opportunity?</div>\r\n                        <!--Request-->\r\n                        <!--Is this the same as discountRequest.standardTotals.totalCommissionPercentage or different ? ==> It's different -->\r\n                        <div>\r\n                            <!--<kendo-numerictextbox [(ngModel)]=\"discountRequest.grossMarginMarkUp\"\r\n                                                  name=\"grossMarginMarkUp\"\r\n                                                  [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\"\r\n                                                  (ngModelChange)=\"calculateRevisedGrossProfit($event)\">\r\n                            </kendo-numerictextbox>\r\n                            <div class=\"grey-text-italic\">Enter value from 0.01 to 1.00</div>-->\r\n\r\n                            <input type=\"number\" min=\"0\" max=\"100\"\r\n                                   #grossMarginMarkUp\r\n                                   [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                   [value]=\"discountRequest.grossMarginMarkUp*100 | number:'1.0-3'\"\r\n                                   name=\"grossMarginMarkUp\"\r\n                                   (keyup)=\"recalculateRevisedGrossProfit(grossMarginMarkUp.value)\"\r\n                                   (change)=\"recalculateRevisedGrossProfit(grossMarginMarkUp.value)\" />%\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 bluecell discount-row\" style=\"padding-left:30px;\">\r\n                        <div class=\"black-label\">Revised Gross</div>\r\n                        <div>{{discountRequest.approvedTotals.totalCommissionAmount | currency:'USD':true:'1.2-2'}}</div>\r\n                        <!--<div>{{grossMarginMarkUp * discountRequest.approvedTotals.netMaterialValue | currency:'USD':true:'1.2-2'}}</div>-->\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Total Sell-->\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"col-md-6 col-xs-12 padding-15\">Total revised Rep/Dist selling price as a result of Discount</div>\r\n                    <div class=\"col-md-6 col-xs-12 padding-15 lightgreycell totalcell\" style=\"padding-left:30px;\">\r\n                        {{discountRequest.approvedTotals.totalSell | currency:'USD':true:'1.2-2'}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\" style=\"height:50px;\">\r\n\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom \">\r\n                    <div class=\"form-group col-md-6 padding-15\">\r\n                        <label class=\"control-label required\">Probability of close:</label>\r\n                        <select class=\"form-control\" required style=\"width:175px;\"\r\n                                [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                [(ngModel)]=\"discountRequest.probabilityOfCloseTypeId\" name=\"probabilityOfClose\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of discountRequest.probabilityOfCloseTypes.items\"\r\n                                    [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"form-group col-md-6 padding-15\">\r\n                        <label class=\"control-label required\">If approved, when will the order be issued to Daikin?</label>\r\n                        <div>\r\n                            <kendo-datepicker #datepicker id=\"orderIssueDate\"\r\n                                              required name=\"orderIssueDate\"\r\n                                              [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                              [(ngModel)]=\"discountRequest.orderPlannedFor\" placeholder=\"select...\">\r\n                            </kendo-datepicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"form-group col-md-6 padding-15\">\r\n                        <label class=\"control-label required\">What is the approximate delivery date for required equipment?</label>\r\n                        <div>\r\n                            <kendo-datepicker id=\"estimatedDeliveryDate\"\r\n                                              required name=\"estimatedDeliveryDate\"\r\n                                              [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                              [(ngModel)]=\"discountRequest.project.estimatedDelivery\" placeholder=\"select...\">\r\n                            </kendo-datepicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom\">\r\n                    <div class=\"form-group col-md-12 padding-15\">\r\n                        <label class=\"control-label required\">Any further information or reason for discount request</label>\r\n                        <textarea class=\"form-control\" required name=\"notes\"\r\n                                  [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                  [(ngModel)]=\"discountRequest.notes\" rows=\"2\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2 || discountRequest.discountRequestStatusTypeId == 4 || discountRequest.discountRequestStatusTypeId == 6\" class=\"row no-gutters border-bottom\">\r\n                    <div class=\"form-group col-md-12 padding-15\">\r\n                        <label class=\"control-label required\">Response from approval team:</label>\r\n                        <textarea class=\"form-control\" required name=\"responseNotes\"\r\n                                  [attr.disabled]=\"!canApproveDiscounts ? 'disabled' : null\"\r\n                                  [(ngModel)]=\"discountRequest.responseNotes\" rows=\"2\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row no-gutters border-bottom \">\r\n                    <div class=\"form-group col-md-12 padding-15\">\r\n                        <label class=\"control-label\">Enter Daikin City users' emails you want to notify about this request. Place commas or semicolon between each email</label>\r\n                        <textarea class=\"form-control\" name=\"emailsList\"\r\n                                  [attr.disabled]=\"discountRequest.discountRequestStatusTypeId != 0 ? 'disabled' : null\"\r\n                                  [(ngModel)]=\"discountRequest.emailsList\" rows=\"2\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </fieldset>\r\n\r\n            <!--Submit-->\r\n            <fieldset>\r\n                <!--New Request-->\r\n                <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 0\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <a class=\"btn btn-default\" href=\"/v3/#/quote/{{discountRequest.quoteId}}/existingRecord\" style=\"width:70px;\">Cancel</a>\r\n                    <button class=\"btn btn-primary\" style=\"width:70px;\" [disabled]=\"discountRequestForm.invalid\" (click)=\"submit()\">Submit</button>\r\n                </div>\r\n\r\n                <!--Pending-->\r\n                <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 2\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <div *ngIf=\"canApproveDiscounts; else elseBlock\">\r\n                        <button class=\"btn btn-default\" (click)=\"reject()\">Reject Request</button>\r\n                        <button class=\"btn btn-primary\" [disabled]=\"discountRequestForm.invalid\" (click)=\"approve()\">Approve Request</button>\r\n                    </div>\r\n                    <ng-template #elseBlock>\r\n                        <a class=\"btn btn-default\" href=\"/v3/#/quote/{{discountRequest.quoteId}}/existingRecord\">Back To Quote</a>\r\n                    </ng-template>\r\n                </div>\r\n\r\n                <!--Rejected-->\r\n                <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 4\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <div *ngIf=\"canApproveDiscounts\">\r\n                        <button class=\"btn btn-primary\" [disabled]=\"discountRequestForm.invalid\" (click)=\"approve()\">Approve Request</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Approved-->\r\n                <div *ngIf=\"discountRequest.discountRequestStatusTypeId == 6\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <div *ngIf=\"canApproveDiscounts; else elseBlock\">\r\n                        <button class=\"btn btn-default\" (click)=\"reject()\">Reject Request</button>\r\n                    </div>\r\n                    <ng-template #elseBlock>\r\n                        <a class=\"btn btn-default\" href=\"/v3/#/quote/{{discountRequest.quoteId}}/existingRecord\">Back To Quote</a>\r\n                    </ng-template>\r\n                </div>\r\n\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<!--Print Modal -->\r\n<div *ngIf=\"discountRequest\" id=\"printModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHOW COST PRICING</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Should cost pricing be included in this print report?</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <!--<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>-->\r\n                <a href=\"/Document/DiscountRequestPrint/{{discountRequest.discountRequestId}}?QuoteId={{discountRequest.quoteId}}&ProjectId={{discountRequest.projectId}}\" target=\"_blank\" onclick=\"$('#printModal').modal('hide')\" class=\"btn btn-default\">No</a>\r\n                <a href=\"/Document/DiscountRequestPrintWithCostPricing/{{discountRequest.discountRequestId}}?QuoteId={{discountRequest.quoteId}}&ProjectId={{discountRequest.projectId}}\" target=\"_blank\" onclick=\"$('#printModal').modal('hide')\" class=\"btn btn-default\">Yes</a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!--Export Modal -->\r\n<div *ngIf=\"discountRequest.discountRequestId\" id=\"exportModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHOW COST PRICING</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Should cost pricing be included in this export?</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <a href=\"/ProjectDashboard/DiscountRequestExport?DiscountRequestId={{discountRequest.discountRequestId}}&ProjectId={{discountRequest.projectId}}&QuoteId={{discountRequest.quoteId}}\" target=\"_blank\" onclick=\"$('#exportModal').modal('hide')\" class=\"btn btn-default\">No</a>\r\n                <a href=\"/ProjectDashboard/DiscountRequestExportWithCostPricing?DiscountRequestId={{discountRequest.discountRequestId}}&ProjectId={{discountRequest.projectId}}&QuoteId={{discountRequest.quoteId}}\" target=\"_blank\" onclick=\"$('#exportModal').modal('hide')\" class=\"btn btn-default\">Yes</a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/discount/discount-request.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import 'rxjs/Rx';
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var discountRequest_service_1 = __webpack_require__("./src/app/discount/services/discountRequest.service.ts");
var email_service_1 = __webpack_require__("./src/app/shared/services/email.service.ts");
var DiscountRequestComponent = /** @class */ (function () {
    function DiscountRequestComponent(router, route, toastrSvc, userSvc, enums, http, projectSvc, discountRequestSvc, emailSvc) {
        var _this = this;
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.discountRequestSvc = discountRequestSvc;
        this.emailSvc = emailSvc;
        this.user = this.route.snapshot.data['currentUser'].model;
        this.quoteId = this.route.snapshot.paramMap.get('quoteId');
        this.projectId = this.route.snapshot.paramMap.get('projectId');
        this.discountRequestId = this.route.snapshot.paramMap.get('discountRequestId');
        this.discountRequestSvc.getDiscountRequest(this.discountRequestId, this.projectId, this.quoteId).subscribe(function (resp) {
            if (resp.isok) {
                _this.discountRequest = resp.model;
                _this.discountRequest.grossMarginMarkUp = _this.discountRequest.standardTotals.grossMarginMarkUp;
                _this.calculateRevisedTotalSell();
                if (_this.discountRequest.discountRequestStatusTypeId == 0) {
                    _this.discountRequest.orderPlannedFor = null;
                }
                else {
                    _this.discountRequest.orderPlannedFor = new Date(Date.parse(_this.discountRequest.orderPlannedFor));
                }
                _this.discountRequest.project.estimatedDelivery = new Date(Date.parse(_this.discountRequest.project.estimatedDelivery));
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    }
    DiscountRequestComponent.prototype.ngOnInit = function () {
        this.canApproveDiscounts = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ApproveDiscounts);
    };
    DiscountRequestComponent.prototype.autofillChange = function () {
        var _this = this;
        if (this.loadOldDAR == true) {
            this.discountRequestSvc.getMostRecentDiscountRequestModel(this.projectId, this.quoteId).subscribe(function (resp) {
                if (resp.isok) {
                    _this.oldDAR = resp.model;
                    _this.applyOldSelections();
                }
            }, function (error) {
                console.log("Error: " + error);
            });
        }
        else {
            this.removeSelections();
        }
    };
    DiscountRequestComponent.prototype.applyOldSelections = function () {
        this.discountRequest.systemBasisDesignTypeId = this.oldDAR.systemBasisDesignTypeId;
        this.discountRequest.zoneStrategyTypeId = this.oldDAR.zoneStrategyTypeId;
        this.discountRequest.systemBasisDesignTypeId = this.oldDAR.brandSpecifiedTypeId;
        this.discountRequest.brandSpecifiedTypeId = this.oldDAR.brandSpecifiedTypeId;
        this.discountRequest.brandApprovedTypeId = this.oldDAR.brandApprovedTypeId;
        this.discountRequest.daikinEquipmentAtAdvantageTypeId = this.oldDAR.daikinEquipmentAtAdvantageTypeId;
        this.discountRequest.probabilityOfCloseTypeId = this.oldDAR.probabilityOfCloseTypeId;
        this.discountRequest.orderPlannedFor = new Date(Date.parse(this.oldDAR.orderPlannedFor));
        this.discountRequest.project.estimatedDelivery = new Date(Date.parse(this.oldDAR.project.estimatedDelivery));
        this.discountRequest.emailsList = this.oldDAR.emailsList;
    };
    DiscountRequestComponent.prototype.removeSelections = function () {
        this.discountRequest.systemBasisDesignTypeId = null;
        this.discountRequest.zoneStrategyTypeId = null;
        this.discountRequest.systemBasisDesignTypeId = null;
        this.discountRequest.brandSpecifiedTypeId = null;
        this.discountRequest.brandApprovedTypeId = null;
        this.discountRequest.daikinEquipmentAtAdvantageTypeId = null;
        this.discountRequest.probabilityOfCloseTypeId = null;
        this.discountRequest.orderPlannedFor = null;
        this.discountRequest.project.estimatedDelivery = null;
        this.discountRequest.emailsList = null;
    };
    DiscountRequestComponent.prototype.hasCompetitorPriceChange = function (event) {
        if (event == false) {
            this.discountRequest.competitorPrice = null;
        }
    };
    DiscountRequestComponent.prototype.hasCompetitorQuoteChange = function (event) {
    };
    DiscountRequestComponent.prototype.hasCompetitorLineComparsionChange = function (event) {
    };
    DiscountRequestComponent.prototype.selectCompetitorQuoteFile = function (e) {
        this.discountRequest.competitorQuoteFileName = e.files[0].name;
    };
    DiscountRequestComponent.prototype.selectLineComparsionFile = function (e) {
        this.discountRequest.competitorLineComparsionFileName = e.files[0].name;
    };
    DiscountRequestComponent.prototype.uploadEventHandler = function (e) {
        console.log("File Upload");
        e.data = {
            QuoteId: this.discountRequest.quoteId,
        };
    };
    DiscountRequestComponent.prototype.successEventHandler = function (e) {
        var self = this;
        if (e.response.ok == true) {
            console.log("The " + e.operation + " was successful!");
        }
    };
    DiscountRequestComponent.prototype.errorEventHandler = function (e) {
        console.log("Error: " + e.response.statusText);
        this.toastrSvc.ErrorFadeOut(e.response.statusText);
    };
    DiscountRequestComponent.prototype.startupCostChange = function () {
        this.calculateRevisedTotalSell();
    };
    //HTML numeric input
    DiscountRequestComponent.prototype.calculateDiscountAmountVRV = function (value) {
        this.discountRequest.requestedDiscountVRV = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueVRV = this.discountRequest.standardTotals.totalNetVRV * (1 - this.discountRequest.requestedDiscountVRV);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierVRV = this.discountRequest.approvedTotals.netMaterialValueVRV / this.discountRequest.standardTotals.totalListVRV;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountVRV = this.discountRequest.standardTotals.totalNetVRV - this.discountRequest.approvedTotals.netMaterialValueVRV;
        this.calculateTotalDiscount();
    };
    DiscountRequestComponent.prototype.calculateApprovedDiscountAmountVRV = function (value) {
        this.discountRequest.approvedDiscountVRV = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueVRV = this.discountRequest.standardTotals.totalNetVRV * (1 - this.discountRequest.approvedDiscountVRV);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierVRV = this.discountRequest.approvedTotals.netMaterialValueVRV / this.discountRequest.standardTotals.totalListVRV;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountVRV = this.discountRequest.standardTotals.totalNetVRV - this.discountRequest.approvedTotals.netMaterialValueVRV;
        this.calculateTotalApprovedDiscount();
    };
    DiscountRequestComponent.prototype.calculateDiscountAmountSplit = function (value) {
        this.discountRequest.requestedDiscountSplit = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueSplit = this.discountRequest.standardTotals.totalNetSplit * (1 - this.discountRequest.requestedDiscountSplit);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierSplit = this.discountRequest.approvedTotals.netMaterialValueSplit / this.discountRequest.standardTotals.totalListSplit;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountSplit = this.discountRequest.standardTotals.totalNetSplit - this.discountRequest.approvedTotals.netMaterialValueSplit;
        this.calculateTotalDiscount();
    };
    DiscountRequestComponent.prototype.calculateApprovedDiscountAmountSplit = function (value) {
        this.discountRequest.approvedDiscountSplit = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueSplit = this.discountRequest.standardTotals.totalNetSplit * (1 - this.discountRequest.approvedDiscountSplit);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierSplit = this.discountRequest.approvedTotals.netMaterialValueSplit / this.discountRequest.standardTotals.totalListSplit;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountSplit = this.discountRequest.standardTotals.totalNetSplit - this.discountRequest.approvedTotals.netMaterialValueSplit;
        this.calculateTotalApprovedDiscount();
    };
    DiscountRequestComponent.prototype.calculateDiscountAmountUnitary = function (value) {
        this.discountRequest.requestedDiscountUnitary = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueUnitary = this.discountRequest.standardTotals.totalNetUnitary * (1 - this.discountRequest.requestedDiscountUnitary);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierUnitary = this.discountRequest.approvedTotals.netMaterialValueUnitary / this.discountRequest.standardTotals.totalListUnitary;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountUnitary = this.discountRequest.standardTotals.totalNetUnitary - this.discountRequest.approvedTotals.netMaterialValueUnitary;
        this.calculateTotalDiscount();
    };
    DiscountRequestComponent.prototype.calculateApprovedDiscountAmountUnitary = function (value) {
        this.discountRequest.approvedDiscountUnitary = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueUnitary = this.discountRequest.standardTotals.totalNetUnitary * (1 - this.discountRequest.approvedDiscountUnitary);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierUnitary = this.discountRequest.approvedTotals.netMaterialValueUnitary / this.discountRequest.standardTotals.totalListUnitary;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountUnitary = this.discountRequest.standardTotals.totalNetUnitary - this.discountRequest.approvedTotals.netMaterialValueUnitary;
        this.calculateTotalApprovedDiscount();
    };
    DiscountRequestComponent.prototype.calculateDiscountAmountLCPackage = function (value) {
        this.discountRequest.requestedDiscountLCPackage = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueLCPackage = this.discountRequest.standardTotals.totalNetLCPackage * (1 - this.discountRequest.requestedDiscountLCPackage);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierLCPackage = this.discountRequest.approvedTotals.netMaterialValueLCPackage / this.discountRequest.standardTotals.totalListLCPackage;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountLCPackage = this.discountRequest.standardTotals.totalNetLCPackage - this.discountRequest.approvedTotals.netMaterialValueLCPackage;
        this.calculateTotalDiscount();
    };
    DiscountRequestComponent.prototype.calculateApprovedDiscountAmountLCPackage = function (value) {
        this.discountRequest.approvedDiscountLCPackage = value / 100;
        //update Net Material 
        this.discountRequest.approvedTotals.netMaterialValueLCPackage = this.discountRequest.standardTotals.totalNetLCPackage * (1 - this.discountRequest.approvedDiscountLCPackage);
        //update Net Multiplier
        this.discountRequest.approvedTotals.netMultiplierLCPackage = this.discountRequest.approvedTotals.netMaterialValueLCPackage / this.discountRequest.standardTotals.totalListLCPackage;
        //show/update Discount Ammount
        this.discountRequest.approvedTotals.totalDiscountAmountLCPackage = this.discountRequest.standardTotals.totalNetLCPackage - this.discountRequest.approvedTotals.netMaterialValueLCPackage;
        this.calculateTotalApprovedDiscount();
    };
    DiscountRequestComponent.prototype.calculateTotalDiscount = function () {
        this.discountRequest.approvedTotals.totalDiscountAmount =
            this.discountRequest.approvedTotals.totalDiscountAmountVRV +
                this.discountRequest.approvedTotals.totalDiscountAmountSplit +
                this.discountRequest.approvedTotals.totalDiscountAmountUnitary +
                this.discountRequest.approvedTotals.totalDiscountAmountLCPackage;
        var totalNetDiscountable = this.discountRequest.standardTotals.totalNetVRV + this.discountRequest.standardTotals.totalNetSplit + this.discountRequest.standardTotals.totalNetLCPackage + this.discountRequest.standardTotals.totalNetUnitary;
        var totalNetNonDiscountable = this.discountRequest.standardTotals.totalNet - totalNetDiscountable;
        var totalNetWithAccessories = totalNetDiscountable + totalNetNonDiscountable;
        //Net Material Value
        this.discountRequest.approvedTotals.netMaterialValue = totalNetWithAccessories - this.discountRequest.approvedTotals.totalDiscountAmount;
        //Net Multiplier
        this.discountRequest.approvedTotals.netMultiplier = this.discountRequest.approvedTotals.netMaterialValue / this.discountRequest.standardTotals.totalList;
        this.discountRequest.requestedDiscount = this.discountRequest.approvedTotals.totalDiscountAmount / this.discountRequest.standardTotals.totalNet;
        //This is to fix javascript rounding issue. Ex: 823.72/2940.25 = 0.2799999997 instead of 0.28
        this.discountRequest.requestedDiscount = Math.round(this.discountRequest.requestedDiscount * 100000) / 100000;
        this.calculateRevisedTotalSell();
        this.calculateRevisedGrossProfit();
    };
    DiscountRequestComponent.prototype.calculateTotalApprovedDiscount = function () {
        this.discountRequest.approvedTotals.totalDiscountAmount =
            this.discountRequest.approvedTotals.totalDiscountAmountVRV +
                this.discountRequest.approvedTotals.totalDiscountAmountSplit +
                this.discountRequest.approvedTotals.totalDiscountAmountUnitary +
                this.discountRequest.approvedTotals.totalDiscountAmountLCPackage;
        var totalNetDiscountable = this.discountRequest.standardTotals.totalNetVRV + this.discountRequest.standardTotals.totalNetSplit + this.discountRequest.standardTotals.totalNetLCPackage + this.discountRequest.standardTotals.totalNetUnitary;
        var totalNetNonDiscountable = this.discountRequest.standardTotals.totalNet - totalNetDiscountable;
        var totalNetWithAccessories = totalNetDiscountable + totalNetNonDiscountable;
        //Net Material Value
        this.discountRequest.approvedTotals.netMaterialValue = totalNetWithAccessories - this.discountRequest.approvedTotals.totalDiscountAmount;
        //Net Multiplier
        this.discountRequest.approvedTotals.netMultiplier = this.discountRequest.approvedTotals.netMaterialValue / this.discountRequest.standardTotals.totalList;
        this.discountRequest.approvedDiscount = this.discountRequest.approvedTotals.totalDiscountAmount / this.discountRequest.standardTotals.totalNet;
        //This is to fix javascript rounding issue. Ex: 823.72/2940.25 = 0.2799999997 instead of 0.28
        this.discountRequest.approvedDiscount = Math.round(this.discountRequest.approvedDiscount * 100000) / 100000;
        //this.calculateRevisedGrossProfit();
        this.calculateRevisedTotalSell();
    };
    DiscountRequestComponent.prototype.calculateRevisedGrossProfit = function () {
        this.discountRequest.approvedTotals.totalCommissionAmount = this.discountRequest.approvedTotals.totalSell - this.discountRequest.approvedTotals.netMaterialValue;
    };
    DiscountRequestComponent.prototype.recalculateRevisedGrossProfit = function (value) {
        this.discountRequest.grossMarginMarkUp = value / 100;
        this.calculateRevisedTotalSell();
        this.calculateRevisedGrossProfit();
    };
    DiscountRequestComponent.prototype.calculateRevisedTotalSell = function () {
        if (this.discountRequest.quote.isGrossMargin) {
            this.discountRequest.approvedTotals.totalSell = (this.discountRequest.quote.totalFreight + this.discountRequest.startUpCosts + this.discountRequest.approvedTotals.netMaterialValue) / (1 - this.discountRequest.grossMarginMarkUp);
        }
        else {
            this.discountRequest.approvedTotals.totalSell = (this.discountRequest.quote.totalFreight + this.discountRequest.startUpCosts + this.discountRequest.approvedTotals.netMaterialValue) * (1 + this.discountRequest.grossMarginMarkUp);
        }
        this.calculateRevisedGrossProfit();
    };
    DiscountRequestComponent.prototype.submit = function () {
        this.validateEmailsAndPostRequest();
    };
    DiscountRequestComponent.prototype.validateEmailsAndPostRequest = function () {
        var _this = this;
        var self = this;
        this.emailSvc.validateEmailList(this.discountRequest.emailsList).subscribe(function (resp) {
            if (resp.isok) {
                _this.postRequest();
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.error("Error " + error);
        });
    };
    DiscountRequestComponent.prototype.postRequest = function () {
        var self = this;
        self.blockUI.start('Loading...');
        this.discountRequestSvc.postDiscountRequest(this.discountRequest).subscribe(function (resp) {
            if (resp.isok) {
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                //send Email notification
                self.discountRequestSvc.sendDiscountRequestEmail(self.discountRequest).subscribe();
                self.router.navigateByUrl("/quote/" + self.discountRequest.quoteId + "/existingRecord");
            }
            else {
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    DiscountRequestComponent.prototype.approve = function () {
        var self = this;
        self.blockUI.start('Loading...');
        this.discountRequestSvc.approveDiscountRequest(this.discountRequest).subscribe(function (resp) {
            if (resp.IsOK) {
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                window.location.href = "/Userdashboard/DiscountRequests";
            }
            else {
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    DiscountRequestComponent.prototype.reject = function () {
        var self = this;
        this.blockUI.start('Loading...');
        this.discountRequestSvc.rejectDiscountRequest(this.discountRequest).subscribe(function (resp) {
            if (resp.IsOK) {
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                window.location.href = "/Userdashboard/DiscountRequests";
            }
            else {
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    DiscountRequestComponent.prototype.delete = function () {
    };
    DiscountRequestComponent.prototype.print = function () {
    };
    DiscountRequestComponent.prototype.export = function () {
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], DiscountRequestComponent.prototype, "blockUI", void 0);
    DiscountRequestComponent = __decorate([
        core_1.Component({
            selector: 'discount-request',
            template: __webpack_require__("./src/app/discount/discount-request.component.html"),
            styles: [__webpack_require__("./src/app/discount/discount-request.component.css")]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, http_1.Http,
            project_service_1.ProjectService, discountRequest_service_1.DiscountRequestService,
            email_service_1.EmailService])
    ], DiscountRequestComponent);
    return DiscountRequestComponent;
}());
exports.DiscountRequestComponent = DiscountRequestComponent;


/***/ }),

/***/ "./src/app/discount/services/discountRequest.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var DiscountRequestService = /** @class */ (function () {
    function DiscountRequestService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    DiscountRequestService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    DiscountRequestService.prototype.extractHtml = function (res) {
        return res._body;
    };
    DiscountRequestService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    DiscountRequestService.prototype.getDiscountRequest = function (discountRequestId, projectId, quoteId) {
        return this.http.get("/api/DiscountRequest/GetDiscountRequest?discountRequestId=" + discountRequestId + "&projectId=" + projectId + "&quoteId=" + quoteId)
            .map(this.extractData)
            .catch(this.handleError);
    };
    DiscountRequestService.prototype.postDiscountRequest = function (discountRequest) {
        //API Controller
        return this.http.post("/api/DiscountRequest/PostDiscountRequest", discountRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    DiscountRequestService.prototype.sendDiscountRequestEmail = function (discountRequest) {
        return this.http.post("/ProjectDashboard/SendDiscountRequestEmail", discountRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    DiscountRequestService.prototype.approveDiscountRequest = function (discountRequest) {
        //MVC Controller
        return this.http.post("/ProjectDashboard/DiscountRequestApprove", discountRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    DiscountRequestService.prototype.rejectDiscountRequest = function (discountRequest) {
        //MVC Controller
        return this.http.post("/ProjectDashboard/DiscountRequestReject", discountRequest, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    DiscountRequestService.prototype.getMostRecentDiscountRequestModel = function (projectId, quoteId) {
        return this.http.get("/api/DiscountRequest/GetMostRecentDiscountRequestModel?projectId=" + projectId + "&quoteId=" + quoteId)
            .map(this.extractData)
            .catch(this.handleError);
    };
    DiscountRequestService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], DiscountRequestService);
    return DiscountRequestService;
}());
exports.DiscountRequestService = DiscountRequestService;


/***/ }),

/***/ "./src/app/home/home.component.css":
/***/ (function(module, exports) {

module.exports = "\r\n\r\n\r\n\r\n@media (min-width: 1200px) {\r\n    #home-bg {\r\n        background-image: url(/Images/project-office-bg.png);\r\n        background-size: cover;\r\n        height: 92.5%;\r\n    }\r\n}\r\n\r\n/*Mobile*/\r\n\r\n@media (max-width: 576px) {\r\n    #home-bg {\r\n        background-image: url(/Images/project-office-bg.png);\r\n        background-size: cover;\r\n        height: 92.5%;\r\n        /*background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-attachment: fixed;*/\r\n        \r\n    }\r\n}\r\n\r\n.home-icon-image {\r\n    margin: auto;\r\n    /*box-shadow: 10px 10px 10px #6c8191;*/\r\n}\r\n\r\n/*Desktop*/\r\n\r\n@media (min-width: 1200px) {\r\n    .home-icon-text {\r\n        /*color:#ffffff;*/\r\n        /*color: #e2f7ff;*/ /*light-blue*/\r\n        color:#dfdfdf; /*light-grey*/\r\n        text-transform: uppercase;\r\n        font-family: \"museo-sans\", sans-serif;\r\n        /*font-weight: bold;*/\r\n        padding: 20px;\r\n    }\r\n}\r\n\r\n/*Mobile*/\r\n\r\n@media (max-width: 576px) {\r\n    .home-icon-text {\r\n        /*color:#ffffff;*/\r\n        /*color: #e2f7ff;*/ /*light-blue*/\r\n        color:#dfdfdf; /*light-grey*/\r\n        text-transform: uppercase;\r\n        font-family: \"museo-sans\", sans-serif;\r\n        /*font-weight: bold;*/\r\n        padding: 10px 0px 10px 0px;\r\n    }\r\n}\r\n\r\ninput[type=checkbox].checkbox-large {\r\n    -webkit-transform: scale(1.5);\r\n            transform: scale(1.5);\r\n}\r\n\r\n.display-menu {\r\n    max-height: 500px;\r\n    overflow-y: scroll;\r\n}\r\n"

/***/ }),

/***/ "./src/app/home/home.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div id=\"home-bg\">\r\n\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"pull-right\" style=\"padding:20px 20px 20px 20px\">\r\n            <div class=\"dropdown pull-left\">\r\n                <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\r\n                    Display\r\n                    <span class=\"caret\"></span>\r\n                </button>\r\n                <ul class=\"dropdown-menu dropdown-menu-right display-menu\">\r\n                    <li *ngFor=\"let link of links\">\r\n                        <a><input class=\"checkbox-large\" type=\"checkbox\" [(ngModel)]=\"link.show\" /> {{link.text}}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngFor=\"let link of links\">\r\n        <div *ngIf=\"link.show\">\r\n            <div class=\"col-md-2 col-xs-4\">\r\n                <div class=\"text-center\">\r\n                    <a href=\"{{link.url}}\"><img src=\"{{link.image}}\" alt=\"{{link.altText}}\" class=\"img-responsive home-icon-image\" width=\"170\" height=\"170\" /></a>\r\n                </div>\r\n                <div class=\"text-center home-icon-text\">{{link.text}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/home/home.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var HomeComponent = /** @class */ (function () {
    function HomeComponent(router, route, toastrSvc, userSvc, accountSvc, enums, http, webconfigSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.enums = enums;
        this.http = http;
        this.webconfigSvc = webconfigSvc;
        this.links = [];
        this.canViewProjects = false;
        this.canEditProjects = false;
        this.canViewOrders = false;
        this.canViewUsers = false;
        this.canManageGroups = false;
        this.canViewBusiness = false;
        this.canAccessLibrary = false;
        this.userInPendingStatus = false;
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    HomeComponent.prototype.ngOnInit = function () {
        //debugger
        //document.location.href = "/";
        this.preventDisplayMenuCloseOnClick();
        this.canViewProjects = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewProject);
        this.canEditProjects = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.EditProject);
        this.canViewOrders = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewOrder);
        this.canViewUsers = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewUsers);
        this.canManageGroups = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ManageGroups);
        this.canViewBusiness = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewBusiness);
        this.userInPendingStatus = this.userSvc.checkUserStatus(this.user);
        this.getLinks();
        this.accountSvc.resetBasketQuoteId();
    };
    HomeComponent.prototype.getLinks = function () {
        this.links = [{
                text: "Library",
                image: "/v3/src/assets/images/library.png",
                altText: "library",
                url: "/Library",
                show: true
            }, {
                text: "University",
                image: "/v3/src/assets/images/university.png",
                altText: "Home",
                url: "/Training",
                show: true
            }, {
                text: "User Manual",
                image: "/v3/src/assets/images/user_manual.png",
                altText: "Home",
                url: "/Content/pdf/DaikinCityUserGuide.pdf",
                show: true
            }];
        if (!this.userInPendingStatus) {
            var productNode = {
                text: "Products",
                image: "/v3/src/assets/images/products.png",
                altText: "Products",
                url: "/v3/#/product",
                show: true
            };
            this.links.push(productNode);
            var toolsNode = {
                text: "Tools",
                image: "/v3/src/assets/images/tools.png",
                altText: "Home",
                url: "/v3/#/tools",
                show: true
            };
            this.links.push(toolsNode);
        }
        if (this.canViewProjects || this.canEditProjects) {
            var projectNode = {
                text: "Projects",
                image: "/v3/src/assets/images/projects.png",
                altText: "Projects",
                url: "/v3/#/projects",
                show: true
            };
            this.links.splice(1, 0, projectNode);
            var overviewNode = {
                text: "Reports",
                image: "/v3/src/assets/images/reporting.png",
                altText: "Reports",
                url: "/ProjectDashboard/Overview",
                show: true
            };
            this.links.splice(3, 0, overviewNode);
        }
        if (this.canViewOrders) {
            var orderNode = {
                text: "Orders",
                image: "/v3/src/assets/images/orders.png",
                altText: "Orders",
                url: "/v3/#/orders",
                show: true
            };
            this.links.splice(4, 0, orderNode);
        }
        if (this.canViewUsers || this.canViewBusiness || this.canManageGroups) {
            if (this.canViewUsers) {
                var managementNode = {
                    text: "Management",
                    image: "/v3/src/assets/images/management.png",
                    altText: "Management",
                    url: "/Userdashboard/users/",
                    show: true
                };
                this.links.push(managementNode);
            }
            else if (this.canViewBusiness) {
                var managementNode = {
                    text: "Management",
                    image: "/v3/src/assets/images/management.png",
                    altText: "Management",
                    url: "/Userdashboard/businesses/",
                    show: true
                };
                this.links.push(managementNode);
            }
            else if (this.canManageGroups) {
                var managementNode = {
                    text: "Management",
                    image: "/v3/src/assets/images/management.png",
                    altText: "Management",
                    url: "/Userdashboard/groups/",
                    show: true
                };
                this.links.push(managementNode);
            }
        }
    };
    //browseProducts() {
    //    this.accountSvc.resetBasketQuoteId()
    //        .then((resp: any) => {
    //            if (resp.isok) {
    //                this.router.navigateByUrl("/product");
    //            }
    //        }).catch(error => {
    //            console.log(error);
    //        });
    //}
    HomeComponent.prototype.preventDisplayMenuCloseOnClick = function () {
        jQuery('.dropdown-menu').on('click', function (e) {
            if (jQuery(this).hasClass('display-menu')) {
                e.stopPropagation();
            }
        });
    };
    HomeComponent = __decorate([
        core_1.Component({
            selector: 'home',
            template: __webpack_require__("./src/app/home/home.component.html"),
            styles: [__webpack_require__("./src/app/home/home.component.css")],
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, enums_1.Enums, http_1.Http,
            webconfig_service_1.WebConfigService])
    ], HomeComponent);
    return HomeComponent;
}());
exports.HomeComponent = HomeComponent;
;


/***/ }),

/***/ "./src/app/lms-catalog/components/lms-catalog-grid.component.css":
/***/ (function(module, exports) {

module.exports = ".row {\r\n    padding: 0px;\r\n}\r\n\r\n.col-md-6 .col-md-4 .col-md-3 {\r\n    padding: 0px;\r\n}\r\n\r\n.col-md-2 {\r\n    padding-right: 2%;\r\n}\r\n\r\n#courseTitleSearchBox {\r\n    display: inline-block;\r\n    width: 250px;\r\n}\r\n\r\n.export-to-excel-btn {\r\n    -webkit-box-align: start;\r\n        -ms-flex-align: start;\r\n            align-items: flex-start;\r\n    background-attachment: scroll;\r\n    background-clip: border-box;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(241, 241, 241)), to(rgb(209, 209, 209)));\r\n    background-image: linear-gradient(rgb(241, 241, 241), rgb(209, 209, 209));\r\n    background-origin: padding-box;\r\n    background-size: auto;\r\n    border-bottom-color: rgb(184, 184, 184);\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(184, 184, 184);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    border-right-color: rgb(184, 184, 184);\r\n    border-right-style: solid;\r\n    border-right-width: 1px;\r\n    border-top-color: rgb(184, 184, 184);\r\n    border-top-left-radius: 0px;\r\n    border-top-right-radius: 0px;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(77, 84, 93);\r\n    cursor: pointer;\r\n    display: block;\r\n    -webkit-filter: none;\r\n            filter: none;\r\n    float: right;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 900;\r\n    height: 30px;\r\n    letter-spacing: normal;\r\n    line-height: 15px;\r\n    margin: 0px;\r\n    overflow-x: visible;\r\n    overflow-y: visible;\r\n    padding-bottom: 6px;\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n    padding-top: 6px;\r\n    text-align: center;\r\n    -webkit-text-size-adjust: 100%;\r\n       -moz-text-size-adjust: 100%;\r\n        -ms-text-size-adjust: 100%;\r\n            text-size-adjust: 100%;\r\n    text-transform: uppercase;\r\n    -ms-touch-action: manipulation;\r\n        touch-action: manipulation;\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    width: 194px;\r\n    word-spacing: 0px;\r\n    -webkit-writing-mode: horizontal-tb;\r\n        -ms-writing-mode: lr-tb;\r\n            writing-mode: horizontal-tb;\r\n}\r\n\r\n.k-icon .k-i-excel {\r\n    width: 1em;\r\n    height: 1em;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-size: 16px;\r\n    font-family: 'WebComponentsIcons';\r\n    font-style: normal;\r\n    font-variant: normal;\r\n    font-weight: normal;\r\n    line-height: 1;\r\n    speak: none;\r\n    text-transform: none;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    padding-right: 5px;\r\n}\r\n\r\n.course-params-row {\r\n    background-color: #E5F2FA;\r\n    padding: 10px;\r\n    height: 60px;\r\n    margin: 15px;\r\n}\r\n\r\n.course-search-labels {\r\n    -webkit-box-sizing: content-box;\r\n            box-sizing: content-box;\r\n    color: rgb(51, 51, 51);\r\n    cursor: default;\r\n    display: inline-block;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    margin-bottom: 5px;\r\n    max-width: 100%;\r\n    -webkit-text-size-adjust: 100%;\r\n       -moz-text-size-adjust: 100%;\r\n        -ms-text-size-adjust: 100%;\r\n            text-size-adjust: 100%;\r\n}\r\n\r\n.kendo-datepicker {\r\n    width: 100%;\r\n}\r\n\r\n.btn-reset-span {\r\n    padding-left: 40px;\r\n}\r\n\r\n.btn-refresh-all {\r\n    border: none;\r\n    color: white;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    background-color: #008CBA;\r\n    margin-top: 15px;\r\n    padding: 8px;\r\n}\r\n\r\n.blue .codeColumn {\r\n    background-color: #D3E7F2;\r\n}\r\n\r\n.purple .codeColumn {\r\n    background-color: #D7D1EB;\r\n}\r\n\r\n.yellow .codeColumn {\r\n    background-color: #F5F0BC;\r\n}\r\n\r\n.lightgreen .codeColumn {\r\n    background-color: #C1D4BE;\r\n}\r\n\r\n.green .codeColumn {\r\n    background-color: #BCF5D3;\r\n}\r\n\r\n.grey .codeColumn {\r\n    background-color: #C2C8CF;\r\n}\r\n\r\n.pink .codeColumn {\r\n    background-color: #EBD1D8;\r\n}\r\n\r\n#courseListGrid table, #courseListGrid th, #courseListGrid td {\r\n    border-bottom: 1px solid #cccccc;\r\n    border-collapse: collapse;\r\n    word-wrap: break-word;\r\n    overflow-wrap: break-word;\r\n}\r\n\r\n#courseListGrid.k-grid .k-column-resizer {\r\n    cursor: w-resize;\r\n    height: 1000%;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 1em;\r\n}\r\n\r\n.k-grid-header .k-grid-filter, .k-grid-header .k-header-column-menu {\r\n    right: 10px;\r\n}\r\n\r\n.k-grid-header .k-header > .k-link > .k-icon.k-i-sort-desc-sm, .k-grid-header .k-header > .k-link > .k-icon.k-i-sort-asc-sm {\r\n    margin-left: 2px;\r\n}\r\n\r\n.k-grid .k-grid-header .k-header .k-link {\r\n    height: auto;\r\n}\r\n\r\n.k-grid .k-grid-header .k-header {\r\n    white-space: normal;\r\n}\r\n"

/***/ }),

/***/ "./src/app/lms-catalog/components/lms-catalog-grid.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"main-container\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n    </div>\r\n    <div class=\"main-content\">\r\n        <div class=\"tab-header\">\r\n            <header>\r\n                <h4>COURSE LISTINGS</h4>\r\n                <p>\r\n                    <span style=\"font-weight: 900\">A Daikin City account is required to access Daikin University and register for training sessions.</span>\r\n                    <br />\r\n                    <span style=\"color: red\">Session Registration is Required.  Please do not show up to a course unless you are registered.</span>\r\n                    <br />\r\n                    <span>If minimum registration is not achieved, courses may be cancelled.  Only registered attendees will be notified.</span>\r\n                    <br />\r\n                    <span style=\"font-weight: 900\">Daikin is not responsible for travel, accommodation or other related costs associated with non-registered attendees.</span>\r\n                </p>\r\n            </header>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"course-params-row\">\r\n                    <!--<div class=\"col-md-2\">\r\n                        <label class=\"control-label\">State/Province</label>\r\n                        <select class=\"form-control\" [(ngModel)]=\"searchStateProvince\" name=\"stateProvince\">\r\n                            <option [value]=\"null\" selected disabled>Select ...</option>\r\n                            <option *ngFor=\"let item of stateProvinces\" [value]=\"item.value\">\r\n                                {{item.text}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\">\r\n                        <label class=\"control-label\">City</label>\r\n                        <input type=\"text\" class=\"form-control k-input k-textbox\" style=\"width: 100%\" id=\"courseCitySearchBox\" name=\"courseCity\" [(ngModel)]=\"searchCity\"\r\n                            placeholder=\"Search Course City\" />\r\n                    </div>-->\r\n                    <div class=\"col-md-4\">\r\n                        <label class=\"control-label\">Location</label>\r\n                        <input type=\"text\" class=\"form-control k-input k-textbox\" style=\"width: 100%\" id=\"courseLocation\" name=\"courseLocation\" [(ngModel)]=\"searchLocation\"\r\n                               placeholder=\"Search Course Location\" />\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\">\r\n                        <label class=\"control-label\">From Date </label>\r\n                        <kendo-datepicker #fromDateNode class=\"kendo-datepicker\" [format]=\"'MM/dd/yyyy'\" [value]=\"searchStartDate\"\r\n                                          (valueChange)=\"handleStartDateChange($event)\">\r\n                        </kendo-datepicker>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\">\r\n                        <label for=\"toDate\" class=\"control-label\">To Date </label>\r\n                        <kendo-datepicker #toDateNode class=\"kendo-datepicker\" [format]=\"'MM/dd/yyyy'\" [value]=\"searchEndDate\"\r\n                                          (valueChange)=\"handleEndDateChange($event)\">\r\n                        </kendo-datepicker>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-1\">\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\">\r\n                        <span class=\"btn-search-span\">\r\n                            <button type=\"button\" class=\"btn-refresh-all\" (click)=\"onSearchClick()\">SEARCH</button>\r\n                        </span>\r\n                        <span class=\"btn-reset-span\">\r\n                            <button type=\"button\" class=\"btn-refresh-all\" (click)=\"onResetButtonClick()\">RESET</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!--COURSE GRID-->\r\n            <kendo-grid #grid=\"kendoGrid\" id=\"courseListGrid\" [kendoGridBinding]=\"courseListGridData\" [pageSize]=\"pageSize\"\r\n                        [skip]=\"skip\" [pageable]=\"{\r\n                              buttonCount: buttonCount,\r\n                              info: info,\r\n                              type: type,\r\n                              pageSizes: pageSizes,\r\n                              previousNext: previousNext\r\n                            }\"\r\n                        (dataStateChange)=\"onDataStateChange()\"\r\n                        [sort]=\"defaultSort\" [columnMenu]=\"true\" [filterable]=\"true\" [sortable]=\"true\"\r\n                        [resizable]=\"true\" [rowClass]=\"rowCallback\">\r\n\r\n\r\n                <!-- <kendo-grid-column field=\"courseCode\" media=\"(min-width: 450px)\" title=\"Course Code\"\r\n                [headerStyle]=\"{ 'color': 'white' }\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.code}}\r\n                    </ng-template>\r\n                </kendo-grid-column> -->\r\n\r\n                <kendo-grid-column field=\"courseTitle\" media=\"(min-width: 450px)\" title=\"Event Title\" [headerStyle]=\"{ 'color': 'white' }\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.courseTitle}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n\r\n                <kendo-grid-column field=\"sessionLocation\" media=\"(min-width: 450px)\" title=\"Location\" [filterable]=false\r\n                                   [headerStyle]=\"{ 'color': 'white' }\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.sessionLocation}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n\r\n                <kendo-grid-column field=\"startDateTime\" media=\"(min-width: 450px)\" title=\"Start Date\" [filterable]=\"false\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.startDateTime | date: 'short'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n\r\n                <kendo-grid-column field=\"endDateTime\" media=\"(min-width: 450px)\" title=\"End Date\" [filterable]=\"false\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.endDateTime | date: 'short'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n\r\n                <kendo-grid-column field=\"timezoneDescription\" media=\"(min-width: 450px)\" title=\"Time Zone\" [filterable]=\"false\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.timezoneDescription}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n\r\n                <!--<kendo-grid-column field=\"availableSeats\" media=\"(min-width: 450px)\" title=\"Seats Available\"\r\n                    [headerStyle]=\"{ 'color': 'white'}\" filter=\"numeric\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.availableSeats}}\r\n                    </ng-template>\r\n                </kendo-grid-column>-->\r\n\r\n                <kendo-grid-excel fileName=\"Course.xlsx\"></kendo-grid-excel>\r\n\r\n            </kendo-grid>\r\n        </div>\r\n    </div>\r\n\r\n    <!--kendo dialog export to excel, need to come back for export-->\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/lms-catalog/components/lms-catalog-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var kendo_angular_grid_1 = __webpack_require__("./node_modules/@progress/kendo-angular-grid/dist/es/index.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var lms_catalog_service_1 = __webpack_require__("./src/app/lms-catalog/services/lms-catalog.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
//import { OrderService } from '../services/order.service';
//import { QuoteService } from '../../quote/services/quote.service';
//import { SearchOrders } from '../../shared/models/searchOrders';
var LmsCatalogGridComponent = /** @class */ (function () {
    /**
     * Dependency Injection
     **/
    function LmsCatalogGridComponent(ngZone, toastrSvc, userSvc, addressSvc, 
        //private loadingIconSvc: LoadingIconService,
        lmsCatalogService, // TODO:  Rename service
        router, route) {
        this.ngZone = ngZone;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.addressSvc = addressSvc;
        this.lmsCatalogService = lmsCatalogService;
        this.router = router;
        this.route = route;
        this.courseListGridData = [];
        this.pageSize = 20;
        this.pageNumber = 1;
        this.skip = 0;
        this.buttonCount = 20;
        this.info = true;
        this.type = 'numeric';
        this.pageSizes = true;
        this.previousNext = true;
        this.defaultSort = [{
                field: 'startDate',
                dir: 'asc'
            }];
        this.sourceUserList = [];
        this.stateProvinces = [];
        this.exportToExcelOptions = ["Orders", "Orders with products"];
        this.defaultExportToExcelOption = "Orders";
        // Search Parameters
        // public searchStartProvince: any;
        // public searchCity: String;
        this.searchLocation = null;
        this.searchStartDate = null;
        this.searchEndDate = null;
        this.exportToExcelDialogOpen = false;
        this.exportToExcelTemplate = false;
        this.searchParams = null;
        this.inputParams = false;
        this.rowCallback = function (context) {
        };
        // this.user = this.route.snapshot.data['currentUser'].model;
    }
    /**
     * angular life cycle hooks
     */
    LmsCatalogGridComponent.prototype.ngOnInit = function () {
        this.setDefaults();
        this.loadCourses();
    };
    LmsCatalogGridComponent.prototype.setDefaults = function () {
        this.courseListGridData = [];
        var startDate = new Date();
        startDate.setHours(0, 0, 0, 0);
        this.searchStartDate = startDate;
        var endDate = this.addDays(new Date(), 90);
        endDate.setHours(24, 0, 0, 0);
        this.searchEndDate = endDate;
        this.searchLocation = null;
    };
    LmsCatalogGridComponent.prototype.onSearchClick = function () {
        this.loadCourses();
    };
    LmsCatalogGridComponent.prototype.handleStartDateChange = function (value) {
        this.searchStartDate = value;
        // if (this.fromDateNode.value > this.toDateNode.value) {
        //     this.openDateSelectionErrorDialog();
        // }
        // else if ((this.toDateNode.value.getYear() - this.fromDateNode.value.getYear()) > 5) {
        //     this.openDateRangeErrorDialog();
        // }
        // else {
        //     this.FilterWithAllSearchParams();
        // }
    };
    LmsCatalogGridComponent.prototype.handleEndDateChange = function (value) {
        this.searchEndDate = value;
        // if (this.fromDateNode.value > this.toDateNode.value) {
        //     this.openDateSelectionErrorDialog();
        // }
        // else if ((this.toDateNode.value.getYear() - this.fromDateNode.value.getYear()) > 5) {
        //     this.openDateRangeErrorDialog();
        // }
        // else {
        //     this.FilterWithAllSearchParams();
        // }
    };
    LmsCatalogGridComponent.prototype.loadCourses = function () {
        this.searchParams = {
            sessionStartDate: this.searchStartDate,
            sessionEndDate: this.searchEndDate,
            location: this.searchLocation
        };
        this.getCoursesBasedOnSearchParams(this.searchParams, this.inputParams = true);
    };
    LmsCatalogGridComponent.prototype.getCoursesBasedOnSearchParams = function (searchParams, inputParams) {
        var _this = this;
        this.blockUI.start('Loading...');
        return this.lmsCatalogService.getDaikinCityLmsCourseSessions(searchParams)
            .subscribe(function (data) {
            if (data && data.model && data.model.items) {
                _this.courseListGridData = _this.buildCourseDataSet(data.model.items);
                if (data.model != null) {
                    _this.pageNumber = data.model.pageNumber;
                }
                else {
                    _this.pageNumber = 1;
                }
            }
            _this.blockUI.stop();
        });
    };
    LmsCatalogGridComponent.prototype.buildCourseDataSet = function (data) {
        if (!data) {
            return;
        }
        // data.forEach(element => {
        //     if (element.startDate) {
        //         element.startDate = new Date(element.startDate);
        //     }
        //     if (element.endDate) {
        //         element.endDate = new Date(element.endDate);
        //     }
        // });
        // data = data.filter((f) => {
        //     return f.startDate >= this.searchStartDate
        //         && f.endDate <= this.searchEndDate;
        // });
        return data;
    };
    LmsCatalogGridComponent.prototype.closeExportToExcelDialog = function () {
        this.exportToExcelDialogOpen = false;
    };
    LmsCatalogGridComponent.prototype.onExportToExcelClick = function () {
        this.openExportToExcelDialog();
    };
    LmsCatalogGridComponent.prototype.exportToExcel = function (grid) {
        //this.loadingIconSvc.Start(jQuery("#orderListGrid")); 
        //if (this.exportToExcelNode.value == "Orders") {
        //    grid.data = this.courseListGridData;
        //    grid.saveAsExcel();
        //}
        //else {
        //    this.excelexport.save();
        //}
        this.exportToExcelDialogOpen = false;
        //this.loadingIconSvc.Stop(jQuery("#orderListGrid")); 
    };
    LmsCatalogGridComponent.prototype.onDataStateChange = function () {
        this.fitColumns();
    };
    LmsCatalogGridComponent.prototype.fitColumns = function () {
        //   this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {
        //     this.grid.autoFitColumns();
        //   });
    };
    LmsCatalogGridComponent.prototype.onResetButtonClick = function () {
        this.setDefaults();
    };
    LmsCatalogGridComponent.prototype.addDays = function (date, days) {
        var dateInMs = date.setDate(date.getDate() + days);
        return new Date(dateInMs);
    };
    LmsCatalogGridComponent.prototype.openDateSelectionErrorDialog = function () {
        this.toastrSvc.Warning("'From Date' can not be less than 'To Date'. Please, select another date range.");
        this.onResetButtonClick();
    };
    LmsCatalogGridComponent.prototype.openDateRangeErrorDialog = function () {
        this.toastrSvc.Warning("'Your selection returned large set of data. Please shorten your date range selection.");
        this.onResetButtonClick();
    };
    LmsCatalogGridComponent.prototype.openExportToExcelDialog = function () {
        this.exportToExcelDialogOpen = true;
        this.exportToExcelDialogTitle = "Export To Excel";
        this.exportToExcelDialogMessage = "Please select an export type:";
    };
    __decorate([
        core_1.ViewChild("mainSearchBox"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "mainSearchBox", void 0);
    __decorate([
        core_1.ViewChild("userListNode"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "userListNode", void 0);
    __decorate([
        core_1.ViewChild("orderStatusNode"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "orderStatusNode", void 0);
    __decorate([
        core_1.ViewChild("businessNameNode"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "businessNameNode", void 0);
    __decorate([
        core_1.ViewChild("fromDateNode"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "fromDateNode", void 0);
    __decorate([
        core_1.ViewChild("toDateNode"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "toDateNode", void 0);
    __decorate([
        core_1.ViewChild("exportToExcelNode"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "exportToExcelNode", void 0);
    __decorate([
        core_1.ViewChild("excelexport"),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "excelexport", void 0);
    __decorate([
        core_1.ViewChild(kendo_angular_grid_1.GridComponent),
        __metadata("design:type", kendo_angular_grid_1.GridComponent)
    ], LmsCatalogGridComponent.prototype, "grid", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], LmsCatalogGridComponent.prototype, "blockUI", void 0);
    LmsCatalogGridComponent = __decorate([
        core_1.Component({
            selector: 'lms-catalog-grid',
            template: __webpack_require__("./src/app/lms-catalog/components/lms-catalog-grid.component.html"),
            styles: [__webpack_require__("./src/app/lms-catalog/components/lms-catalog-grid.component.css")]
        }),
        __metadata("design:paramtypes", [core_1.NgZone,
            toastr_service_1.ToastrService,
            user_service_1.UserService,
            address_service_1.AddressService,
            lms_catalog_service_1.LmsCatalogService,
            router_1.Router,
            router_1.ActivatedRoute])
    ], LmsCatalogGridComponent);
    return LmsCatalogGridComponent;
}());
exports.LmsCatalogGridComponent = LmsCatalogGridComponent;


/***/ }),

/***/ "./src/app/lms-catalog/components/lms-catalog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var LmsCatalogComponent = /** @class */ (function () {
    function LmsCatalogComponent() {
    }
    LmsCatalogComponent.prototype.ngOnInit = function () {
    };
    LmsCatalogComponent = __decorate([
        core_1.Component({
            selector: 'app-lms-catalog',
            template: "\n    <p>\n      lms-catalog works!\n    </p>\n  ",
            styles: []
        }),
        __metadata("design:paramtypes", [])
    ], LmsCatalogComponent);
    return LmsCatalogComponent;
}());
exports.LmsCatalogComponent = LmsCatalogComponent;


/***/ }),

/***/ "./src/app/lms-catalog/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/lms-catalog/services/lms-catalog.service.ts"));
__export(__webpack_require__("./src/app/lms-catalog/components/lms-catalog-grid.component.ts"));
__export(__webpack_require__("./src/app/lms-catalog/components/lms-catalog.component.ts"));


/***/ }),

/***/ "./src/app/lms-catalog/services/lms-catalog.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var LmsCatalogService = /** @class */ (function () {
    function LmsCatalogService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    LmsCatalogService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    LmsCatalogService.prototype.extractHtml = function (res) {
        return res._body;
    };
    LmsCatalogService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        //console.error(error); // log to console instead
        console.log(error);
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    LmsCatalogService.prototype.getDaikinCityLmsCourseSessions = function (searchParams) {
        return this.http.post("/api/DaikinUniversity/SearchDaikinCityLmsCourseSessions", searchParams, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    LmsCatalogService.prototype.getPublicLmsCatalogBasedOnSearch = function (searchParams) {
        return this.http.post("/api/DaikinUniversity/SearchPublicLmsCatalog", searchParams, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    LmsCatalogService.prototype.duplicateQuote = function (projectId, quoteId) {
        return this.http.get("/api/Quote/DuplicateQuote?projectId=" + projectId + "&quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    LmsCatalogService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], LmsCatalogService);
    return LmsCatalogService;
}());
exports.LmsCatalogService = LmsCatalogService;


/***/ }),

/***/ "./src/app/order/components/edit-customer-address.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"editCustomerAddressModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <form #customerAddressForm=\"ngForm\" novalidate>\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Dealer/Contractor</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-6 col-xs-12\">\r\n                            <label class=\"control-label required\">Contact Name</label>\r\n                            <input type=\"text\" class=\"form-control\" required #dealerContractorName=\"ngModel\" name=\"shipToName\" [(ngModel)]=\"project.dealerContractorName\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 col-xs-12\">\r\n                            <label class=\"control-label required\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" required #customerName=\"ngModel\" name=\"shipToName\" [(ngModel)]=\"project.customerName\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"control-label required\">Address Line 1</label>\r\n                            <input type=\"text\" class=\"form-control\" required #addressLine1=\"ngModel\" name=\"addressLine1\" [(ngModel)]=\"project.customerAddress.addressLine1\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"control-label\">Address Line 2</label>\r\n                            <input type=\"text\" class=\"form-control\" #addressLine2=\"ngModel\" name=\"addressLine2\" [(ngModel)]=\"project.customerAddress.addressLine2\">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">Country</label>\r\n                            <select class=\"form-control\" required [(ngModel)]=\"project.customerAddress.countryCode\" (ngModelChange)=\"countryCodeChange($event)\" name=\"countryCode\">\r\n                                <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                <option *ngFor=\"let item of project.customerAddress.countries.items\"\r\n                                        [value]=\"item.value\">\r\n                                    {{item.text}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">State</label>\r\n                            <select class=\"form-control\" required [(ngModel)]=\"project.customerAddress.stateId\" name=\"state\" (ngModelChange)=\"stateChange($event)\">\r\n                                <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                <option *ngFor=\"let item of project.customerAddress.states.items\"\r\n                                        [value]=\"item.value\">\r\n                                    {{item.text}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">City</label>\r\n                            <input type=\"text\" class=\"form-control\" required #location=\"ngModel\" name=\"location\" [(ngModel)]=\"project.customerAddress.location\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">Zip Code</label>\r\n                            <input type=\"text\" class=\"form-control\" required #postalCode=\"ngModel\" name=\"postalCode\" [(ngModel)]=\"project.customerAddress.postalCode\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"cancel()\">Close</button>\r\n                        <button type=\"submit\" [disabled]=\"customerAddressForm.invalid\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/order/components/edit-customer-address.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
var EditCustomerAddressComponent = /** @class */ (function () {
    function EditCustomerAddressComponent(router, route, toastrSvc, userSvc, enums, http, projectSvc, addressSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.addressSvc = addressSvc;
    }
    EditCustomerAddressComponent.prototype.ngOnInit = function () {
        this._project = jQuery.extend(true, {}, this.project);
    };
    EditCustomerAddressComponent.prototype.countryCodeChange = function (event) {
        var _this = this;
        var countryCode = event;
        this.addressSvc.getStatesByCountry(countryCode)
            .subscribe(function (resp) {
            if (resp.isok) {
                var states = resp.model;
                _this.project.customerAddress.states.items = resp.model.items;
                _this.project.customerAddress.stateId = null;
            }
        }, function (error) { console.log("Error: " + error); });
    };
    EditCustomerAddressComponent.prototype.stateChange = function (value) {
        if (value != null && value != 0) {
            for (var i = 0; i < this.project.customerAddress.states.items.length; i++) {
                if (this.project.customerAddress.states.items[i].value == value) {
                    this.project.customerAddress.stateName = this.project.customerAddress.states.items[i].text;
                }
            }
        }
        else {
            this.project.customerAddress.stateName = null;
        }
    };
    EditCustomerAddressComponent.prototype.cancel = function () {
        this.project.dealerContractorName = this._project.dealerContractorName;
        this.project.customerName = this._project.customerName;
        this.project.customerAddress.addressLine1 = this._project.customerAddress.addressLine1;
        this.project.customerAddress.addressLine2 = this._project.customerAddress.addressLine2;
        this.project.customerAddress.countryCode = this._project.customerAddress.countryCode;
        this.project.customerAddress.location = this._project.customerAddress.location;
        this.project.customerAddress.stateId = this._project.customerAddress.stateId;
        this.project.customerAddress.postalCode = this._project.customerAddress.postalCode;
        this.stateChange(this.project.customerAddress.stateId);
    };
    EditCustomerAddressComponent.prototype.submit = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#editCustomerAddressModal"));
        this.blockUI.start('Loading...');
        this._project = this.project; //Getting the latest edited ship to address to be applied, if user cancels without submitting.
        this.projectSvc.postProject(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                //this.loadingIconSvc.Stop(jQuery("#editCustomerAddressModal"));
                _this.blockUI.stop();
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                jQuery('#editCustomerAddressModal').modal('hide');
            }
            else {
                _this.blockUI.stop();
                //this.loadingIconSvc.Stop(jQuery("#editCustomerAddressModal"));
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                jQuery('#editCustomerAddressModal').modal('hide');
            }
        }, function (err) {
            _this.blockUI.stop();
            //this.loadingIconSvc.Stop(jQuery("#editCustomerAddressModal"));
            jQuery('#editCustomerAddressModal').modal('hide');
            console.log("Error: ", err);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], EditCustomerAddressComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], EditCustomerAddressComponent.prototype, "project", void 0);
    EditCustomerAddressComponent = __decorate([
        core_1.Component({
            selector: 'edit-customer-address',
            template: __webpack_require__("./src/app/order/components/edit-customer-address.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, http_1.Http,
            project_service_1.ProjectService, address_service_1.AddressService])
    ], EditCustomerAddressComponent);
    return EditCustomerAddressComponent;
}());
exports.EditCustomerAddressComponent = EditCustomerAddressComponent;
;


/***/ }),

/***/ "./src/app/order/components/edit-project-location.component.css":
/***/ (function(module, exports) {

module.exports = ".modal.verifyAddressDialog {\r\n    top:80px;\r\n}\r\n"

/***/ }),

/***/ "./src/app/order/components/edit-project-location.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"editShipToAddressModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <form #shipToAddressForm=\"ngForm\" novalidate>\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Shipping Address</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-6 col-xs-12\">\r\n                            <label class=\"control-label required\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" required #shipToName=\"ngModel\" name=\"shipToName\" [(ngModel)]=\"project.shipToName\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"control-label required\">Address Line 1</label>\r\n                            <input type=\"text\" class=\"form-control\" required #addressLine1=\"ngModel\" name=\"addressLine1\" [(ngModel)]=\"project.shipToAddress.addressLine1\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"control-label\">Address Line 2</label>\r\n                            <input type=\"text\" class=\"form-control\" #addressLine2=\"ngModel\" name=\"addressLine2\" [(ngModel)]=\"project.shipToAddress.addressLine2\">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">Country</label>\r\n                            <select class=\"form-control\" [(ngModel)]=\"project.shipToAddress.countryCode\" (ngModelChange)=\"countryCodeChange($event)\" name=\"countryCode\">\r\n                                <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                <option *ngFor=\"let item of project.shipToAddress.countries.items\"\r\n                                        [value]=\"item.value\">\r\n                                    {{item.text}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">State</label>\r\n                            <select class=\"form-control\" [(ngModel)]=\"project.shipToAddress.stateId\" name=\"state\" (ngModelChange)=\"stateChange($event)\">\r\n                                <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                <option *ngFor=\"let item of project.shipToAddress.states.items\"\r\n                                        [value]=\"item.value\">\r\n                                    {{item.text}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">City</label>\r\n                            <input type=\"text\" class=\"form-control\" required #location=\"ngModel\" name=\"location\" [(ngModel)]=\"project.shipToAddress.location\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">Zip Code</label>\r\n                            <input type=\"text\" class=\"form-control\" required #postalCode=\"ngModel\" name=\"postalCode\" [(ngModel)]=\"project.shipToAddress.postalCode\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-3 col-xs-12\">\r\n                            <label class=\"control-label\">Square Footage</label>\r\n                            <input type=\"text\" class=\"form-control\" #squareFootage=\"ngModel\" name=\"squareFootage\" [(ngModel)]=\"project.squareFootage\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-3 col-xs-12\">\r\n                            <label class=\"control-label\">Number Of Floors</label>\r\n                            <input type=\"text\" class=\"form-control\" #numberOfFloors=\"ngModel\" name=\"numberOfFloors\" [(ngModel)]=\"project.numberOfFloors\">\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"cancel()\">Close</button>\r\n                        <button type=\"submit\" [disabled]=\"shipToAddressForm.invalid\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div id=\"verifyAddressDialog\" class=\"modal fade verifyAddressDialog\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Verify Shipping Address</h4>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!suggestedAddress\">\r\n                <p>We were unable to verify entered address, please review. Do you want to continue?</p>\r\n            </div>\r\n            <div class=\"modal-footer\" *ngIf=\"!suggestedAddress\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"reEnterAddress()\">Re-enter address</button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"continue()\">Continue</button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\" *ngIf=\"suggestedAddress\">\r\n                <p>Address you entered:</p>\r\n                <div>\r\n                    <p>\r\n                        <span>{{project.shipToAddress.addressLine1}}</span>\r\n                        <span>{{project.shipToAddress.addressLine2}},</span>\r\n                        <span>{{project.shipToAddress.location}}, </span>\r\n                        <span>{{project.shipToAddress.stateName}}</span>\r\n                        <span>{{project.shipToAddress.postalCode}}</span>\r\n                    </p>\r\n                </div>\r\n                <p>Suggested Address:</p>\r\n                <div>\r\n                    <p>\r\n                        <input type=\"checkbox\" class=\"checkbox-large\" id=\"useSuggestedAddress\" name=\"useSuggestedAddress\" [(ngModel)]=\"useSuggestedAddress\">\r\n\r\n                        <span>{{suggestedAddress.line1}}</span>\r\n                        <span>{{suggestedAddress.line2}},</span>\r\n                        <span>{{suggestedAddress.city}}, </span>\r\n                        <span>{{suggestedAddress.stateProvince}} </span>\r\n                        <span>{{suggestedAddress.zipCode}}</span>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\" *ngIf=\"suggestedAddress\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"reEnterAddress()\">Re-enter address</button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"continue()\">Continue</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/order/components/edit-project-location.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var common_service_1 = __webpack_require__("./src/app/shared/services/common.service.ts");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
var EditProjectLocationComponent = /** @class */ (function () {
    function EditProjectLocationComponent(router, route, commonSvc, toastrSvc, userSvc, enums, http, projectSvc, addressSvc) {
        this.router = router;
        this.route = route;
        this.commonSvc = commonSvc;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.addressSvc = addressSvc;
        this.useSuggestedAddress = false;
    }
    EditProjectLocationComponent.prototype.ngOnInit = function () {
        this._project = jQuery.extend(true, {}, this.project);
    };
    EditProjectLocationComponent.prototype.countryCodeChange = function (event) {
        var _this = this;
        var countryCode = event;
        this.addressSvc.getStatesByCountry(countryCode)
            .subscribe(function (resp) {
            if (resp.isok) {
                var states = resp.model;
                _this.project.shipToAddress.states.items = resp.model.items;
                _this.project.shipToAddress.stateId = null;
            }
        }, function (error) { console.log("Error: " + error); });
    };
    EditProjectLocationComponent.prototype.stateChange = function (value) {
        if (value != null && value != 0) {
            for (var i = 0; i < this.project.shipToAddress.states.items.length; i++) {
                if (this.project.shipToAddress.states.items[i].value == value) {
                    this.project.shipToAddress.stateName = this.project.shipToAddress.states.items[i].text;
                }
            }
        }
        else {
            this.project.shipToAddress.stateName = null;
        }
    };
    EditProjectLocationComponent.prototype.cancel = function () {
        //this.project = this._project;
        //this.project = jQuery.extend(true, {}, this._project);
        //this.project = Object.assign({}, this._project);
        this.project.shipToName = this._project.shipToName;
        this.project.shipToAddress.addressLine1 = this._project.shipToAddress.addressLine1;
        this.project.shipToAddress.addressLine2 = this._project.shipToAddress.addressLine2;
        this.project.shipToAddress.countryCode = this._project.shipToAddress.countryCode;
        this.project.shipToAddress.location = this._project.shipToAddress.location;
        this.project.shipToAddress.stateId = this._project.shipToAddress.stateId;
        this.project.shipToAddress.postalCode = this._project.shipToAddress.postalCode;
        this.project.squareFootage = this._project.squareFootage;
        this.project.numberOfFloors = this._project.numberOfFloors;
        this.stateChange(this.project.shipToAddress.stateId);
    };
    EditProjectLocationComponent.prototype.reEnterAddress = function () {
    };
    EditProjectLocationComponent.prototype.continue = function () {
        if (this.useSuggestedAddress) {
            this.project.shipToAddress.addressLine1 = this.suggestedAddress.line1;
            this.project.shipToAddress.addressLine2 = this.suggestedAddress.line2;
            this.project.shipToAddress.location = this.suggestedAddress.city;
            this.project.shipToAddress.stateName = this.suggestedAddress.stateProvince;
            this.project.shipToAddress.postalCode = this.suggestedAddress.zipCode;
            var self = this;
            this.commonSvc.getStateIdByStateCode(this.suggestedAddress.stateProvince)
                .subscribe(function (resp) {
                if (resp.isok) {
                    self.project.shipToAddress.stateId = resp.model;
                    self.postProject();
                }
                else {
                    self.toastrSvc.displayResponseMessages(resp);
                }
            }, function (err) { return console.log("Error: ", err); });
        }
        else {
            this.postProject();
        }
    };
    EditProjectLocationComponent.prototype.submit = function () {
        var _this = this;
        this.suggestedAddress = null;
        this.blockUI.start('Loading...');
        this._project = this.project; //Getting the latest edited ship to address to be applied, if user cancels without submitting.
        this.projectSvc.postProjectAndVerifyAddress(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                _this.blockUI.stop();
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                jQuery('#editShipToAddressModal').modal('hide');
            }
            else {
                _this.blockUI.stop();
                //this.loadingIconSvc.Stop(jQuery("#editShipToAddressModal"));
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                if (resp.model.error) {
                    //if (resp.model.isAddressValid == false) {// Address is not verified
                    //    jQuery("#verifyAddressDialog").modal({ backdrop: 'static', keyboard: false });
                    //} else if (resp.model.addresses.length > 0) {// Address does not match suggested address
                    //    this.suggestedAddress = resp.model.addresses[0];
                    //    jQuery("#verifyAddressDialog").modal({ backdrop: 'static', keyboard: false });
                    //}
                    if (resp.model.addresses != null && resp.model.addresses.length > 0) {
                        _this.suggestedAddress = resp.model.addresses[0];
                        jQuery("#verifyAddressDialog").modal({ backdrop: 'static', keyboard: false });
                    }
                    else {
                        jQuery("#verifyAddressDialog").modal({ backdrop: 'static', keyboard: false });
                    }
                }
                else {
                    //Allow cusomter to continue
                    jQuery("#verifyAddressDialog").modal({ backdrop: 'static', keyboard: false });
                }
            }
        }, function (err) {
            _this.blockUI.stop();
            //this.loadingIconSvc.Stop(jQuery("#editShipToAddressModal"));
            console.log("Error: ", err);
            //Allow cusomter to continue
            jQuery("#verifyAddressDialog").modal({ backdrop: 'static', keyboard: false });
        });
    };
    EditProjectLocationComponent.prototype.postProject = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#editShipToAddressModal"));
        this.blockUI.start('Loading...');
        this.projectSvc.postProject(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                _this.blockUI.stop();
                //this.loadingIconSvc.Stop(jQuery("#editShipToAddressModal"));
                jQuery('#editShipToAddressModal').modal('hide');
            }
            else {
                _this.blockUI.stop();
                //this.loadingIconSvc.Stop(jQuery("#editShipToAddressModal"));
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) {
            _this.blockUI.stop();
            //this.loadingIconSvc.Stop(jQuery("#editShipToAddressModal"));
            console.log("Error: ", err);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], EditProjectLocationComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], EditProjectLocationComponent.prototype, "project", void 0);
    EditProjectLocationComponent = __decorate([
        core_1.Component({
            selector: 'edit-project-location',
            template: __webpack_require__("./src/app/order/components/edit-project-location.component.html"),
            styles: [__webpack_require__("./src/app/order/components/edit-project-location.component.css")],
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            common_service_1.CommonService, toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums, http_1.Http,
            project_service_1.ProjectService, address_service_1.AddressService])
    ], EditProjectLocationComponent);
    return EditProjectLocationComponent;
}());
exports.EditProjectLocationComponent = EditProjectLocationComponent;
;


/***/ }),

/***/ "./src/app/order/components/edit-seller-address.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"editSellerAddressModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <form #sellerAddressForm=\"ngForm\" novalidate>\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Seller Information</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-6 col-xs-12\">\r\n                            <label class=\"control-label required\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" required #sellerName=\"ngModel\" name=\"sellerName\" [(ngModel)]=\"project.sellerName\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"control-label required\">Address Line 1</label>\r\n                            <input type=\"text\" class=\"form-control\" required #addressLine1=\"ngModel\" name=\"addressLine1\" [(ngModel)]=\"project.sellerAddress.addressLine1\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"control-label\">Address Line 2</label>\r\n                            <input type=\"text\" class=\"form-control\" #addressLine2=\"ngModel\" name=\"addressLine2\" [(ngModel)]=\"project.sellerAddress.addressLine2\">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">Country</label>\r\n                            <select class=\"form-control\" required [(ngModel)]=\"project.sellerAddress.countryCode\" (ngModelChange)=\"countryCodeChange($event)\" name=\"countryCode\">\r\n                                <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                <option *ngFor=\"let item of project.sellerAddress.countries.items\"\r\n                                        [value]=\"item.value\">\r\n                                    {{item.text}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">State</label>\r\n                            <select class=\"form-control\" required [(ngModel)]=\"project.sellerAddress.stateId\" name=\"state\" (ngModelChange)=\"stateChange($event)\">\r\n                                <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                <option *ngFor=\"let item of project.sellerAddress.states.items\"\r\n                                        [value]=\"item.value\">\r\n                                    {{item.text}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">City</label>\r\n                            <input type=\"text\" class=\"form-control\" required #location=\"ngModel\" name=\"location\" [(ngModel)]=\"project.sellerAddress.location\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label class=\"control-label required\">Zip Code</label>\r\n                            <input type=\"text\" class=\"form-control\" required #postalCode=\"ngModel\" name=\"postalCode\" [(ngModel)]=\"project.sellerAddress.postalCode\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"cancel()\">Close</button>\r\n                        <button type=\"submit\" [disabled]=\"sellerAddressForm.invalid\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/order/components/edit-seller-address.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
var EditSellerAddressComponent = /** @class */ (function () {
    function EditSellerAddressComponent(router, route, toastrSvc, userSvc, enums, http, projectSvc, addressSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.addressSvc = addressSvc;
    }
    EditSellerAddressComponent.prototype.ngOnInit = function () {
        this._project = jQuery.extend(true, {}, this.project);
    };
    EditSellerAddressComponent.prototype.countryCodeChange = function (event) {
        var _this = this;
        var countryCode = event;
        this.addressSvc.getStatesByCountry(countryCode)
            .subscribe(function (resp) {
            if (resp.isok) {
                var states = resp.model;
                _this.project.sellerAddress.states.items = resp.model.items;
                _this.project.sellerAddress.stateId = null;
            }
        }, function (error) { console.log("Error: " + error); });
    };
    EditSellerAddressComponent.prototype.stateChange = function (value) {
        if (value != null && value != 0) {
            for (var i = 0; i < this.project.sellerAddress.states.items.length; i++) {
                if (this.project.sellerAddress.states.items[i].value == value) {
                    this.project.sellerAddress.stateName = this.project.sellerAddress.states.items[i].text;
                }
            }
        }
        else {
            this.project.sellerAddress.stateName = null;
        }
    };
    EditSellerAddressComponent.prototype.cancel = function () {
        this._project = this.project;
        this.project.sellerName = this._project.sellerName;
        this.project.sellerAddress.addressLine1 = this._project.sellerAddress.addressLine1;
        this.project.sellerAddress.addressLine2 = this._project.sellerAddress.addressLine2;
        this.project.sellerAddress.countryCode = this._project.sellerAddress.countryCode;
        this.project.sellerAddress.location = this._project.sellerAddress.location;
        this.project.sellerAddress.stateId = this._project.sellerAddress.stateId;
        this.project.sellerAddress.postalCode = this._project.sellerAddress.postalCode;
        this.stateChange(this.project.sellerAddress.stateId);
    };
    EditSellerAddressComponent.prototype.submit = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#editSellerAddressModal"));
        this.blockUI.start('Loading...');
        this._project = this.project; //Getting the latest edited ship to address to be applied, if user cancels without submitting.
        this.projectSvc.postProject(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                _this.blockUI.stop();
                //this.loadingIconSvc.Stop(jQuery("#editSellerAddressModal"));
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                jQuery('#editSellerAddressModal').modal('hide');
            }
            else {
                _this.blockUI.stop();
                //this.loadingIconSvc.Stop(jQuery("#editSellerAddressModal"));
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                jQuery('#editSellerAddressModal').modal('hide');
            }
        }, function (err) {
            _this.blockUI.stop();
            // this.loadingIconSvc.Stop(jQuery("#editSellerAddressModal"));
            jQuery('#editSellerAddressModal').modal('hide');
            console.log("Error: ", err);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], EditSellerAddressComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], EditSellerAddressComponent.prototype, "project", void 0);
    EditSellerAddressComponent = __decorate([
        core_1.Component({
            selector: 'edit-seller-address',
            template: __webpack_require__("./src/app/order/components/edit-seller-address.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, http_1.Http,
            project_service_1.ProjectService, address_service_1.AddressService])
    ], EditSellerAddressComponent);
    return EditSellerAddressComponent;
}());
exports.EditSellerAddressComponent = EditSellerAddressComponent;
;


/***/ }),

/***/ "./src/app/order/components/order-form-quote-items.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid *ngIf=\"quoteItems\" [data]=\"quoteItems\">\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Order submitted\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt>Product Number</dt>\r\n                <!--<dd>{{dataItem.productNumber}}</dd>-->\r\n                <dd>\r\n                    <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                        {{dataItem.codeString}}\r\n                    </span>\r\n                    <ng-template #elseBlock>\r\n                        {{dataItem.productNumber}}\r\n                    </ng-template>\r\n                </dd>\r\n                <dt>Description</dt>\r\n                <dd>\r\n                    <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                        Configured Product\r\n                    </span>\r\n                    <ng-template #elseBlock>\r\n                        {{dataItem.description}}\r\n                    </ng-template>\r\n                </dd>\r\n                <dt>Qty</dt>\r\n                <dd>{{dataItem.quantity}}</dd>\r\n                <dt>List Price</dt>\r\n                <dd>{{dataItem.listPrice | currency:'USD':true:'1.2-2'}}</dd>\r\n                <dt>Net Price</dt>\r\n                <dd>{{dataItem.netPrice | currency:'USD':true:'1.2-2'}}</dd>\r\n                <dt>Ext. Net Price</dt>\r\n                <dd>{{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}</dd>\r\n                <dt>Ext. List Price</dt>\r\n                <dd>{{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}</dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"productNumber\" title=\"Product Number\" width=\"300\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                {{dataItem.codeString}}\r\n            </span>\r\n            <ng-template #elseBlock>\r\n                {{dataItem.productNumber}}\r\n            </ng-template>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"description\" title=\"Description\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                Configured Product\r\n            </span>\r\n            <ng-template #elseBlock>{{dataItem.description}}</ng-template>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"quantity\" title=\"Qty\" width=\"70\">\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"listPrice\" title=\"List Price\" format=\"{0:c}\" width=\"140\">\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"netPrice\" title=\"Net Price\" format=\"{0:c}\" width=\"140\">\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Ext. List Price\" width=\"140\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.listPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Ext. Net Price\" width=\"140\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/order/components/order-form-quote-items.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var OrderFormQuoteItemsComponent = /** @class */ (function () {
    function OrderFormQuoteItemsComponent(router, route, toastrSvc, userSvc, enums, quoteSvc, http) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.quoteSvc = quoteSvc;
        this.http = http;
    }
    OrderFormQuoteItemsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.quoteSvc.getQuoteItems(this.quoteId).then(function (resp) {
            if (resp.isok) {
                _this.quoteItems = resp.model;
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], OrderFormQuoteItemsComponent.prototype, "quoteId", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], OrderFormQuoteItemsComponent.prototype, "blockUI", void 0);
    OrderFormQuoteItemsComponent = __decorate([
        core_1.Component({
            selector: 'order-form-quote-items',
            template: __webpack_require__("./src/app/order/components/order-form-quote-items.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums,
            quote_service_1.QuoteService, http_1.Http])
    ], OrderFormQuoteItemsComponent);
    return OrderFormQuoteItemsComponent;
}());
exports.OrderFormQuoteItemsComponent = OrderFormQuoteItemsComponent;


/***/ }),

/***/ "./src/app/order/components/order-form.component.css":
/***/ (function(module, exports) {

module.exports = ".orderForm {\r\n    background-color: #E5F2FA;\r\n}\r\n\r\n#orderForm legend {\r\n    padding-top: 10px;\r\n}\r\n\r\n.height-45 {\r\n    height: 45px;\r\n}\r\n\r\n#expedite-reasons {\r\n    width: 500px;\r\n}\r\n\r\n.additional-doc-label { \r\n    font-weight: 400;\r\n}\r\n\r\n.expedite-label{\r\n    font-weight: 400;\r\n}\r\n\r\n.additional-docs-td {\r\n    padding-left: 16px;\r\n}\r\n\r\n"

/***/ }),

/***/ "./src/app/order/components/order-form.component.html":
/***/ (function(module, exports) {

module.exports = "<project-tabs [user]=\"user\"></project-tabs>\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <ul class=\"breadcrumbs\">\r\n                <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n                <li><a href=\"/v3/#/project/{{order.projectId}}\">{{order.projectName}}</a></li>\r\n                <li><a href=\"/v3/#/quote/{{order.quoteId}}/existingRecord\">{{order.quoteTitle}}</a></li>\r\n                <li>Order</li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <!--Resend email-->\r\n            <!--<button *ngIf=\"recordState == 'submitted' && user.email == 'daikincity@daikincomfort.com'\" (click)=\"sendOrderEmail()\" class=\"btn btn-default pull-right\" style=\"margin:10px 5px;\"><span class=\"glyphicon glyphicon-envelope\"></span> Resend Email</button>-->\r\n            <a href=\"/ProjectDashboard/OrderFAQ\" id=\"orderFAQ\" class=\"btn btn-default pull-right\" \r\n               target=\"_blank\" style=\"margin:10px 5px;\">FAQ\r\n            </a>\r\n            <a *ngIf=\"order.orderId != 0\" \r\n               href=\"/Document/OrderPrint/{{order.orderId}}?projectId={{order.projectId}}&quoteId={{order.quoteId}}\" \r\n               id=\"order_request_print_modal_trigger\" class=\"btn btn-default pull-right\" \r\n               target=\"_blank\" style=\"margin:10px 5px;\">Print Order\r\n            </a>\r\n        </div>\r\n    </div>\r\n\r\n    <h4>Order Form</h4>\r\n    <!--<button class=\"btn btn-default\"><a href=\"#orderReleaseDate\">Jump</a></button>-->\r\n    <div *ngIf=\"order\" class=\"orderForm\">\r\n        <form id=\"orderForm\" #orderForm=\"ngForm\" novalidate style=\"padding: 20px;\">\r\n            <fieldset>\r\n                <legend>Project Details</legend>\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                   \r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Project Name: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.name}}</div>\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Project Reference: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.projectId}}</div>\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Registration Date: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.projectDate  | date: 'shortDate'}}</div>\r\n                         \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Bid Date: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.bidDate | date: 'shortDate'}}</div>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Estimated Close: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.estimatedClose | date: 'shortDate'}}</div>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Estimated Delivery: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.estimatedDelivery | date: 'shortDate'}}</div>\r\n                       \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Pricing Strategy: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.pricingStrategy }}</div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-5 col-xs-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">Construction Type: </div>\r\n                                <div class=\"col-md-6 col-xs-12\">{{order.project.constructionTypeDescription}}</div>\r\n                            \r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">Project Status: </div>\r\n                                <div class=\"col-md-6 col-xs-12\">{{order.project.projectStatusDescription}}</div>\r\n                          \r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">Project Type: </div>\r\n                                <div class=\"col-md-6 col-xs-12\">{{order.project.projectTypeDescription}}</div>\r\n                           \r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">Project Open Status: </div>\r\n                                <div class=\"col-md-6 col-xs-12\">{{order.project.projectOpenStatusDescription}}</div>\r\n                            \r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">Vertical Market: </div>\r\n                                <div class=\"col-md-6 col-xs-12\">{{order.project.verticalMarketDescription}}</div>\r\n                            \r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">Project Status Notes: </div>\r\n                                <div class=\"col-md-6 col-xs-12\">{{order.project.description}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Shipping Address/Project location</legend>\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Business Name: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.shipToName; else elseBlock\">\r\n                                {{order.project.shipToName}}\r\n                            </div>\r\n\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\"\r\n                                   required [(ngModel)]=\"order.project.shipToName\" name=\"shipToName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Country: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.shipToAddress.countryCode; else elseBlock\">\r\n                                {{order.project.shipToAddress.countryCode}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.shipToAddress.countryCode\" name=\"shipToAddressCountryCode\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                         \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 1: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.shipToAddress.addressLine1; else elseBlock\">\r\n                                {{order.project.shipToAddress.addressLine1}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\"\r\n                                   required [(ngModel)]=\"order.project.shipToAddress.addressLine1\" name=\"shipToAddressAddressLine1\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                       \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 2: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.shipToAddress.addressLine2}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Location: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.shipToAddress.location; else elseBlock\">\r\n                                {{order.project.shipToAddress.location}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.shipToAddress.location\" name=\"shipToAddressLocation\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                       \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">State: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.shipToAddress.stateName; else elseBlock\">\r\n                                {{order.project.shipToAddress.stateName}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.shipToAddress.stateName\" name=\"shipToAddressStateName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                      \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Zip Code: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.shipToAddress.postalCode; else elseBlock\">\r\n                                {{order.project.shipToAddress.postalCode}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.shipToAddress.postalCode\" name=\"shipToAddressPostalCode\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Square Footage: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.squareFootage}}</div>\r\n                         \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Number Of Floors: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.numberOfFloors}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-1\">\r\n                        <div *ngIf=\"recordState == 'new'\"><span class=\"glyphicon glyphicon-pencil\"></span>\r\n                            <a data-toggle=\"modal\" data-target=\"#editShipToAddressModal\" data-backdrop=\"static\"> Edit</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Dealer/Contractor</legend>\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Dealer/Contractor Name: </div>\r\n                            <div class=\"col-md-6 col-xs-12\" required\r\n                                 *ngIf=\"order.project.dealerContractorName; else elseBlock\">{{order.project.dealerContractorName}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.dealerContractorName\" name=\"dealerContractorName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                         \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Business Name: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.customerName; else elseBlock\">{{order.project.customerName}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.customerName\" name=\"customerName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Country: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.customerAddress.countryCode; else elseBlock\">{{order.project.customerAddress.countryCode}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.customerAddress.countryCode\" name=\"customerAddressCountryCode\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                     \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 1: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.customerAddress.addressLine1; else elseBlock\">{{order.project.customerAddress.addressLine1}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.customerAddress.addressLine1\" name=\"customerAddressAddressLine1\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 2: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.customerAddress.addressLine2}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Location: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.customerAddress.location; else elseBlock\">{{order.project.customerAddress.location}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.customerAddress.location\" name=\"customerAddressLocation\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                     \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">State: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.customerAddress.stateName; else elseBlock\">{{order.project.customerAddress.stateName}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.customerAddress.stateName\" name=\"customerAddressStateName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Zip Code: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.customerAddress.postalCode; else elseBlock\">{{order.project.customerAddress.postalCode}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.customerAddress.postalCode\" name=\"customerAddressPostalCode\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-1\">\r\n                        <div *ngIf=\"recordState == 'new'\"><span class=\"glyphicon glyphicon-pencil\"></span>\r\n                            <a data-toggle=\"modal\" data-target=\"#editCustomerAddressModal\" data-backdrop=\"static\"> Edit</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Seller</legend>\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Business Name: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.sellerName; else elseBlock\">{{order.project.sellerName}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.sellerName\" name=\"sellerName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Country: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.sellerAddress.countryCode; else elseBlock\">{{order.project.sellerAddress.countryCode}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.sellerAddress.countryCode\" name=\"sellerAddress.countryCode\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 1: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.sellerAddress.addressLine1; else elseBlock\">\r\n                                {{order.project.sellerAddress.addressLine1}}\r\n                            </div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.sellerAddress.addressLine1\" name=\"sellerAddress.addressLine1\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                       \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Address Line 2: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.project.sellerAddress.addressLine2}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Location: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.sellerAddress.location; else elseBlock\">{{order.project.sellerAddress.location}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.sellerAddress.location\" name=\"sellerAddress.location\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">State: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.sellerAddress.stateName; else elseBlock\">{{order.project.sellerAddress.stateName}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.sellerAddress.stateName\" name=\"sellerAddress.stateName\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        \r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Zip Code: </div>\r\n                            <div class=\"col-md-6 col-xs-12\"\r\n                                 *ngIf=\"order.project.sellerAddress.postalCode; else elseBlock\">{{order.project.sellerAddress.postalCode}}</div>\r\n                            <input type=\"text\" style=\"display:none;\" class=\"form-control\" required\r\n                                   [(ngModel)]=\"order.project.sellerAddress.postalCode\" name=\"sellerAddress.postalCode\" />\r\n                            <ng-template #elseBlock>\r\n                                <div style=\"color:red; font-style:italic\">This field is required</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-1\">\r\n                        <div *ngIf=\"recordState == 'new'\"><span class=\"glyphicon glyphicon-pencil\"></span>\r\n                        <a data-toggle=\"modal\" data-target=\"#editSellerAddressModal\" data-backdrop=\"static\"> Edit</a></div>\r\n                    </div>\r\n                </div>\r\n\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Order Details</legend>\r\n                <div class=\"row no-gutters\">\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                    <div class=\"col-md-5 col-xs-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Order Submitted By: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.submittedByUserName}}</div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\" style=\"padding: 5px 0px;\">\r\n                                <div class=\"col-md-6 col-xs-12 as-lnk\">\r\n                                    <label class=\"required\">Order Release Date:</label>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-xs-12\">\r\n                                    <kendo-datepicker [disabled]=\"recordState == 'submitted'\" #datepicker id=\"orderReleaseDate\"\r\n                                                      class=\"form-control\" required name=\"orderReleaseDate\"\r\n                                                      [min]=\"releaseDateMin\"\r\n                                                      [(ngModel)]=\"order.orderReleaseDate\"\r\n                                                      (ngModelChange)=\"checkReleaseDate()\"\r\n                                                      placeholder=\"Select ...\">\r\n                                    </kendo-datepicker>\r\n                                    <!--<div> orderReleaseDate: {{order.orderReleaseDate}}</div>-->\r\n                                    <!--<input type=\"date\" class=\"form-control\" required [(ngModel)]=\"order.orderReleaseDate\" name=\"orderReleaseDate\" />-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">\r\n                                <label class=\"required\">Purchase Order Number:</label>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-xs-12\">\r\n                                <input class=\"form-control\"\r\n                                       required maxlength=\"22\"\r\n                                       placeholder=\"Maximum 22 characters\"\r\n                                       [(ngModel)]=\"order.poNumber\" name=\"poNumber\"\r\n                                       [disabled]=\"recordState == 'submitted'\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div *ngIf=\"recordState == 'new'\" class=\"col-md-12\" style=\"margin:3px\">\r\n                                <label class=\"control-label as-lnk required\">Purchase Order Attachment (< 1MB): </label>\r\n                                <kendo-upload required [autoUpload]=\"true\"\r\n                                              [saveUrl]=\"poUploadUrl\"\r\n                                              [removeUrl]=\"removeUploadedDocsUrl\"\r\n                                              [multiple]=\"false\"\r\n                                              [(ngModel)]=\"poAttachment\"\r\n                                              [restrictions]=\"poFileSizeRestriction\"\r\n                                              name=\"PurchaseOrderAttachment\"\r\n                                              (select)=\"selectEventHandler($event)\"\r\n                                              (upload)=\"uploadEventHandler($event)\"\r\n                                              (remove)=\"removeEventHandler($event)\"\r\n                                              [withCredentials]=\"true\"\r\n                                              (success)=\"successEventHandler($event)\"\r\n                                              (error)=\"errorEventHandler($event)\">\r\n                                </kendo-upload>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"recordState == 'submitted'\">\r\n                                <label class=\"col-md-6 col-xs-12 as-lnk required\">Purchase Order Attachment (< 1MB): </label>\r\n                                <div class=\"col-md-6 col-xs-12\">\r\n                                    <a href=\"/document/QuoteOrder/{{order.quoteId}}/?filename={{order.poAttachmentFileName}}\"\r\n                                       target=\"_blank\">{{order.poAttachmentFileName}}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div *ngIf=\"recordState == 'new'\" class=\"col-md-12\" style=\"margin:3px;\">\r\n                                <label class=\"control-label as-lnk additional-doc-label\">Additional Documents (Multiple files < 3MB): </label>\r\n                                <kendo-upload [autoUpload]=\"true\"\r\n                                              [saveUrl]=\"additionalDocsUploadUrl\"\r\n                                              [removeUrl]=\"removeUploadedDocsUrl\"\r\n                                              [multiple]=\"true\"\r\n                                              [restrictions]=\"fileSizeRestrictions\"\r\n                                              [(ngModel)]=\"additionalDocsAttachment\"\r\n                                              name=\"AdditionalDocsAttachment\"\r\n                                              (select)=\"selectEventHandler($event)\"\r\n                                              (upload)=\"uploadEventHandler($event)\"\r\n                                              (remove)=\"removeEventHandler($event)\"\r\n                                              [withCredentials]=\"true\"\r\n                                              (success)=\"successEventHandler($event)\"\r\n                                              (error)=\"errorEventHandler($event)\">\r\n                                </kendo-upload>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"recordState == 'submitted'\">\r\n                                <label class=\"col-md-6 col-xs-12 as-lnk additional-doc-label\">Additional Documents (Multiple files < 3MB): </label>\r\n                                <table class=\"col-md-6 col-xs-12\">\r\n                                    <tr *ngFor=\"let fileName of additionalDocsArray\">\r\n                                        <td class=\"additional-docs-td\">\r\n                                            <a href=\"/document/AdditionalPODocs/{{order.quoteId}}/?filename={{fileName}}\"\r\n                                                target=\"_blank\">{{fileName}}</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-5 col-xs-12 height-45\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Total Net Price: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.totalNetPrice | currency:'USD':true:'1.2-2'}}</div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\">Total Discount Provided: </div>\r\n                            <div class=\"col-md-6 col-xs-12\">{{order.totalDiscountPercent*100}}%</div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <label class=\"control-label as-lnk required\">Delivery Contact Details: </label>\r\n                                <!--<div style=\"font-size:smaller; font-style:italic; color:lightgray;\">(maximum 75 characters)</div>-->\r\n                                <input type=\"text\" style=\"max-width:400px;\" class=\"form-control\"\r\n                                       required maxlength=\"75\"\r\n                                       placeholder=\"Maximum 75 characters\"\r\n                                       [(ngModel)]=\"order.comments\" name=\"orderComments\"\r\n                                       [disabled]=\"recordState == 'submitted'\" />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p>&nbsp;</p>\r\n                        </div>\r\n                        <!--Uncomment this block once expedite info functionality is ok to be put back on the order form-->\r\n                        <!--<div class=\"row\">\r\n                            <div class=\"col-md-6 col-xs-12 as-lnk\" style=\"margin:3px\">\r\n                                <input type=\"checkbox\" id=\"expedite-flag\"\r\n                                       name=\"expediteCheckbox\"\r\n                                       class=\"k-checkbox\"\r\n                                       [checked]=\"order.isExpedite\"\r\n                                       [(ngModel)]=\"order.isExpedite\" />\r\n                                <label class=\"k-checkbox-label expedite-label\" for=\"expedite-flag\">Request Expedite Shipment</label>\r\n\r\n                                <div *ngIf=\"order.isExpedite\">\r\n                                    <input type=\"text\" class=\"form-control\" id=\"expedite-reasons\"\r\n                                           name=\"expediteReasons\"\r\n                                           [(ngModel)]=\"order.orderExpediteInfo.orderExpediteReasons\"\r\n                                           [disabled]=\"recordState == 'submitted'\"\r\n                                           placeholder=\"Add reason for expedite shipment...\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>-->\r\n\r\n                    </div>\r\n                    <div class=\"hidden-xs col-md-1\"></div>\r\n                </div>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Order Items</legend>\r\n                <order-form-quote-items [quoteId]=\"order.quoteId\"></order-form-quote-items>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <div *ngIf=\"recordState == 'new'\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <a class=\"btn btn-default\" (click)=\"onCancel()\"\r\n                       style=\"width:70px;\">\r\n                        Cancel\r\n                    </a>\r\n                   <!-- href=\"/v3/#/quote/{{order.quoteId}}/existingRecord\"-->\r\n                    <button class=\"btn btn-primary\" style=\"width:70px;\"\r\n                            [disabled]=\"orderForm.invalid\" (click)=\"submit()\">\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n                <div *ngIf=\"recordState == 'submitted'\" class=\"text-center\" style=\"padding-top:20px;\">\r\n                    <a class=\"btn btn-default\" href=\"/v3/#/quote/{{order.quoteId}}/existingRecord\">Back To Quote</a>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<edit-project-location *ngIf=\"order\" [(project)]=\"order.project\"></edit-project-location>\r\n\r\n<!-- Modal -->\r\n<edit-customer-address *ngIf=\"order\" [(project)]=\"order.project\"></edit-customer-address>\r\n\r\n<!-- Modal -->\r\n<edit-seller-address *ngIf=\"order\" [(project)]=\"order.project\"></edit-seller-address>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/order/components/order-form.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var order_service_1 = __webpack_require__("./src/app/order/services/order.service.ts");
var order_constants_1 = __webpack_require__("./src/app/order/order-constants.ts");
var MAX_PO_FILE_SIZE = 1000000;
var MAX_ADDITIONAL_DOCS_SIZE = 3000000;
var INVALID_MAX_FILE_SIZE = "invalidMaxFileSize";
var OrderFormComponent = /** @class */ (function () {
    function OrderFormComponent(router, route, toastrSvc, userSvc, enums, http, projectSvc, orderSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.orderSvc = orderSvc;
        this.isOrderSubmitted = false;
        this.additionalDocsFileSize = 0;
        this.fileSizeRestrictions = {
            maxFileSize: MAX_ADDITIONAL_DOCS_SIZE
        };
        //restriction of file size for po attachment
        this.poFileSizeRestriction = {
            maxFileSize: MAX_PO_FILE_SIZE
        };
        this.user = this.route.snapshot.data['currentUser'].model;
        this.order = this.route.snapshot.data['orderFormModel'].model;
        this.recordState = this.route.snapshot.paramMap.get('recordState');
        if (this.recordState == "new") {
            if (this.order.hasConfiguredModel) {
                this.releaseDateMin = new Date();
                this.releaseDateMin.setDate((new Date()).getDate() + 28);
                this.order.orderReleaseDate = this.releaseDateMin;
                //this.order.orderReleaseDate = new Date();
                //this.order.orderReleaseDate.setDate((new Date()).getDate() + 28);
            }
            else {
                this.order.orderReleaseDate = null;
            }
        }
        else {
            this.order.orderReleaseDate = new Date(Date.parse(this.order.orderReleaseDate));
            this.additionalDocsArray = this.order.additionalDocsAttachment;
        }
        //immediate api calls for upload and remove of po attachments
        this.poUploadUrl = order_constants_1.OrderConstants.PO_UPLOAD_URL;
        this.additionalDocsUploadUrl = order_constants_1.OrderConstants.ADDITIONAL_DOCS_UPLOAD_URL;
        this.removeUploadedDocsUrl = order_constants_1.OrderConstants.REMOVE_UPLOADED_DOCS_URL;
    }
    OrderFormComponent.prototype.ngOnInit = function () {
        //this.recordState = this.route.snapshot.paramMap.get('recordState');
        var _this = this;
        //Check if this order has been submitted.
        //If not submitted, remove all po attachment related docs if any uploaded
        this.orderSvc.checkIfOrderIsSubmitted(this.order.quoteId)
            .subscribe(function (resp) {
            if (resp.isok)
                _this.isOrderSubmitted = true;
        });
        if (!this.isOrderSubmitted) {
            this.orderSvc.removeUploadedDocsOnCancel(this.order.quoteId)
                .subscribe(function (resp) { return console.log(resp); });
        }
    };
    OrderFormComponent.prototype.selectEventHandler = function (e) {
        this.order.poAttachmentFileName = e.files[0].name;
    };
    OrderFormComponent.prototype.uploadEventHandler = function (e) {
        e.data = {
            QuoteId: this.order.quoteId,
        };
    };
    OrderFormComponent.prototype.successEventHandler = function (e) {
        var self = this;
        if (e.response.ok == true) {
            //console.log("The " + e.operation + " was successful!");
        }
    };
    OrderFormComponent.prototype.removeEventHandler = function (e) {
        e.data = {
            QuoteId: this.order.quoteId,
            FileName: e.files[0].name
        };
    };
    OrderFormComponent.prototype.errorEventHandler = function (e) {
        console.log("Error: " + e.response.statusText);
        this.toastrSvc.ErrorFadeOut(e.response.statusText);
    };
    OrderFormComponent.prototype.submit = function () {
        this.order.shipToName = this.order.project.shipToName;
        var self = this;
        if (self.order.hasConfiguredModel) {
            this.submitConfirmMessage = order_constants_1.OrderConstants.CONFIRM_CONFIGURED_SUBMIT_MSG;
        }
        else {
            this.submitConfirmMessage = order_constants_1.OrderConstants.SUBMIT_ORDER_CONFIRM_MSG;
        }
        if (self.additionalDocsAttachment != undefined || self.additionalDocsAttachment != null) {
            if (self.additionalDocsAttachment.length > 0) {
                this.order.additionalDocsAttachment = self.additionalDocsAttachment.map(function (x) { return x.name; });
            }
        }
        bootbox.confirm(self.submitConfirmMessage, function (result) {
            if (result) {
                bootbox.dialog({
                    message: '<div class="text-center"><i class="fa fa-spin fa-spinner"></i> Order processing ...</div>'
                });
                //Post Order
                self.orderSvc.postOrder(self.order)
                    .subscribe(function (resp) {
                    if (resp.isok) {
                        bootbox.hideAll();
                        //Send order email notification
                        self.orderSvc.sendOrderEmail(self.order).subscribe();
                        bootbox.alert(order_constants_1.OrderConstants.BOOTBOX_ALERT_MSG, function () {
                            self.router.navigateByUrl("/quote/" + self.order.quoteId + "/existingRecord");
                        });
                    }
                    else {
                        bootbox.hideAll();
                        self.toastrSvc.displayResponseMessages(resp);
                    }
                }, function (err) { console.log("Error: ", err); });
            }
        });
    };
    //when user cancels, remove all the files or attachment that might have been uploaded
    OrderFormComponent.prototype.onCancel = function () {
        this.orderSvc.removeUploadedDocsOnCancel(this.order.quoteId)
            .subscribe(function (resp) { return console.log(resp); });
        this.router.navigateByUrl("/quote/" + this.order.quoteId + "/existingRecord");
    };
    //for testing purpose
    OrderFormComponent.prototype.sendOrderEmail = function () {
        this.orderSvc.sendOrderEmail(this.order).subscribe();
    };
    OrderFormComponent.prototype.stateChange = function (value) {
        for (var i = 0; i < this.order.project.shipToAddress.states.items.length; i++) {
            if (this.order.project.shipToAddress.states.items[i].value == value) {
                this.order.project.shipToAddress.stateName = this.order.project.shipToAddress.states.items[i].text;
            }
        }
    };
    OrderFormComponent.prototype.checkReleaseDate = function () {
        if (this.order.hasConfiguredModel && (this.order.orderReleaseDate < this.releaseDateMin)) {
            this.toastrSvc.ErrorFadeOut(order_constants_1.OrderConstants.CHECK_RELEASE_DATE);
        }
    };
    OrderFormComponent = __decorate([
        core_1.Component({
            selector: 'order-form',
            template: __webpack_require__("./src/app/order/components/order-form.component.html"),
            styles: [__webpack_require__("./src/app/order/components/order-form.component.css")],
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, http_1.Http,
            project_service_1.ProjectService, order_service_1.OrderService])
    ], OrderFormComponent);
    return OrderFormComponent;
}());
exports.OrderFormComponent = OrderFormComponent;
;


/***/ }),

/***/ "./src/app/order/components/order-item-products.component.css":
/***/ (function(module, exports) {

module.exports = "body {\r\n}\r\n"

/***/ }),

/***/ "./src/app/order/components/order-item-products.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid *ngIf=\"orderItemProducts\" [data]=\"orderItemProducts\">\r\n\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Products\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt>Product</dt>\r\n                <dd>{{dataItem.productNumber}}</dd>\r\n                <dt>Product Description</dt>\r\n                <dd>{{dataItem.description}}</dd>\r\n                <dt>Qty</dt>\r\n                <dd>{{dataItem.quantity}}</dd>\r\n                <dt>List Price Each</dt>\r\n                <dd>{{ dataItem.listPrice| currency:'USD':true:'1.2-2' }}</dd>\r\n                <dt>Net Price Each</dt>\r\n                <dd>{{ dataItem.netPrice| currency:'USD':true:'1.2-2' }}</dd>\r\n                <dt>Ext. List Price</dt>\r\n                <dd>{{dataItem.listPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}</dd>\r\n                <dt>Ext. Net Price</dt>\r\n                <dd>{{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}</dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"productNumber\" title=\"Product\" width=\"15%\" \r\n                       [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.productNumber}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"description\" title=\"Product Description\" \r\n                       width=\"20%\" [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.description}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"quantity\" title=\"Qty\" width=\"5%\"\r\n                       [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.quantity}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"listPriceEach\" title=\"List Price Each\" \r\n                       format=\"{0:c}\" width=\"15%\" [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{ dataItem.listPrice| currency:'USD':true:'1.2-2' }}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"netPriceEach\" title=\"Net Price Each\" \r\n                       format=\"{0:c}\" width=\"15%\" [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{ dataItem.netPrice| currency:'USD':true:'1.2-2' }}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"extListPrice\" title=\"Ext. List Price\" \r\n                       format=\"{0:c}\" width=\"15%\" [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.listPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"extNetPrice\" title=\"Ext. Net Price\" \r\n                       format=\"{0:c}\" width=\"15%\" [headerStyle]=\"{ 'color': 'white'}\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.netPrice * dataItem.quantity | currency:'USD':true:'1.2-2' }}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/order/components/order-item-products.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var OrderItemProductsComponent = /** @class */ (function () {
    function OrderItemProductsComponent(http, quoteSvc) {
        this.http = http;
        this.quoteSvc = quoteSvc;
        this.orderItemProducts = [];
    }
    OrderItemProductsComponent.prototype.ngOnInit = function () {
        this.getOrderItemProducts(this.quoteId);
    };
    OrderItemProductsComponent.prototype.getOrderItemProducts = function (quoteId) {
        var _this = this;
        this.quoteSvc.getQuoteItems(quoteId)
            .then(function (resp) {
            if (resp.isok) {
                _this.orderItemProducts = resp.model;
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], OrderItemProductsComponent.prototype, "quoteId", void 0);
    OrderItemProductsComponent = __decorate([
        core_1.Component({
            selector: 'order-item-products',
            template: __webpack_require__("./src/app/order/components/order-item-products.component.html"),
            styles: [__webpack_require__("./src/app/order/components/order-item-products.component.css")]
        }),
        __metadata("design:paramtypes", [http_1.Http, quote_service_1.QuoteService])
    ], OrderItemProductsComponent);
    return OrderItemProductsComponent;
}());
exports.OrderItemProductsComponent = OrderItemProductsComponent;


/***/ }),

/***/ "./src/app/order/components/order.component.html":
/***/ (function(module, exports) {

module.exports = "<div>Test Mapics API</div>\r\n<button (click)=\"getSubmittalOrder()\">Get Submittal Order</button>\r\n"

/***/ }),

/***/ "./src/app/order/components/order.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { ProjectService } from './services/project.service';
var order_service_1 = __webpack_require__("./src/app/order/services/order.service.ts");
var OrderComponent = /** @class */ (function () {
    function OrderComponent(toastrSvc, orderSvc) {
        this.toastrSvc = toastrSvc;
        this.orderSvc = orderSvc;
    }
    OrderComponent.prototype.ngOnInit = function () {
    };
    OrderComponent.prototype.getSubmittalOrder = function () {
        //alert("hello");
        this.orderSvc.getSubmittalOrder()
            .then(function (resp) {
            var result = resp;
            debugger;
        })
            .catch(function (error) {
            console.log(error);
        });
    };
    OrderComponent = __decorate([
        core_1.Component({
            selector: 'order',
            template: __webpack_require__("./src/app/order/components/order.component.html")
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, order_service_1.OrderService])
    ], OrderComponent);
    return OrderComponent;
}());
exports.OrderComponent = OrderComponent;
;


/***/ }),

/***/ "./src/app/order/components/orders-grid.component.css":
/***/ (function(module, exports) {

module.exports = ".row {\r\n  padding:0px;\r\n}\r\n\r\n.col-md-6 .col-md-4 .col-md-3{\r\n  padding: 0px;\r\n}\r\n\r\n.col-md-2{\r\n    padding-right:2%;\r\n}\r\n\r\n.clear-search-btn {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0.8em;\r\n    border: 0;\r\n    outline: 0;\r\n    background: none;\r\n    font-family: \"museo-sans\", sans-serif;\r\n    font-weight: 900;\r\n    color: #aaa;\r\n    cursor: pointer;\r\n}\r\n\r\n.search-btn {\r\n    padding: 3px 10px 2px 10px;\r\n    margin: 0;\r\n    width: auto;\r\n    vertical-align: middle;\r\n}\r\n\r\n.search-button-row {\r\n    padding-left: 0px;\r\n}\r\n\r\n#orderSearchBox {\r\n    display: inline-block;\r\n    width: 250px;\r\n}\r\n\r\n#orderSearchButton {\r\n    display: inline-block;\r\n    background-color: #b3e6ff;\r\n}\r\n\r\n.export-to-excel-btn {\r\n    -webkit-box-align: start;\r\n        -ms-flex-align: start;\r\n            align-items: flex-start;\r\n    background-attachment: scroll;\r\n    background-clip: border-box;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(241, 241, 241)), to(rgb(209, 209, 209)));\r\n    background-image: linear-gradient(rgb(241, 241, 241), rgb(209, 209, 209));\r\n    background-origin: padding-box;\r\n    background-size: auto;\r\n    border-bottom-color: rgb(184, 184, 184);\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(184, 184, 184);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    border-right-color: rgb(184, 184, 184);\r\n    border-right-style: solid;\r\n    border-right-width: 1px;\r\n    border-top-color: rgb(184, 184, 184);\r\n    border-top-left-radius: 0px;\r\n    border-top-right-radius: 0px;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(77, 84, 93);\r\n    cursor: pointer;\r\n    display: block;\r\n    -webkit-filter: none;\r\n            filter: none;\r\n    float: right;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 900;\r\n    height: 30px;\r\n    letter-spacing: normal;\r\n    line-height: 15px;\r\n    margin: 0px;\r\n    overflow-x: visible;\r\n    overflow-y: visible;\r\n    padding-bottom: 6px;\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n    padding-top: 6px;\r\n    text-align: center;\r\n    -webkit-text-size-adjust: 100%;\r\n       -moz-text-size-adjust: 100%;\r\n        -ms-text-size-adjust: 100%;\r\n            text-size-adjust: 100%;\r\n    text-transform: uppercase;\r\n    -ms-touch-action: manipulation;\r\n        touch-action: manipulation;\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    width: 194px;\r\n    word-spacing: 0px;\r\n    -webkit-writing-mode: horizontal-tb;\r\n        -ms-writing-mode: lr-tb;\r\n            writing-mode: horizontal-tb;\r\n}\r\n\r\n.k-icon .k-i-excel {\r\n    width: 1em;\r\n    height: 1em; \r\n    -webkit-font-smoothing: antialiased;\r\n    font-size: 16px;\r\n    font-family: 'WebComponentsIcons';\r\n    font-style: normal;\r\n    font-variant: normal;\r\n    font-weight: normal;\r\n    line-height: 1;\r\n    speak: none;\r\n    text-transform: none;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    padding-right: 5px;\r\n}\r\n\r\n.order-params-row {\r\n    background-color: #E5F2FA;\r\n    padding: 10px;\r\n    height: 60px;\r\n    margin: 15px;\r\n}\r\n\r\n.orders-search-labels {\r\n    -webkit-box-sizing: content-box;\r\n            box-sizing: content-box;\r\n    color: rgb(51, 51, 51);\r\n    cursor: default;\r\n    display: inline-block;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    margin-bottom: 5px;\r\n    max-width: 100%;\r\n    -webkit-text-size-adjust: 100%;\r\n       -moz-text-size-adjust: 100%;\r\n        -ms-text-size-adjust: 100%;\r\n            text-size-adjust: 100%;\r\n}\r\n\r\n.kendo-autocomplete {\r\n    width: 100%;\r\n}\r\n\r\n.kendo-dropdownlist {\r\n    width: 100%;\r\n}\r\n\r\n.kendo-datepicker {\r\n    width: 100%;\r\n}\r\n\r\n.btn-reset-span {\r\n    padding-left: 40px;\r\n}\r\n\r\n.btn-refresh-all {\r\n    border: none;\r\n    color: white;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    background-color: #008CBA;\r\n    margin-top: 15px;\r\n    padding: 8px;\r\n}\r\n\r\n.blue .codeColumn {\r\n    background-color: #D3E7F2;\r\n}\r\n\r\n.purple .codeColumn {\r\n    background-color: #D7D1EB;\r\n}\r\n\r\n.yellow .codeColumn {\r\n    background-color: #F5F0BC;\r\n}\r\n\r\n.lightgreen .codeColumn {\r\n    background-color: #C1D4BE;\r\n}\r\n\r\n.green .codeColumn {\r\n    background-color: #BCF5D3;\r\n}\r\n\r\n.grey .codeColumn {\r\n    background-color: #C2C8CF;\r\n}\r\n\r\n.pink .codeColumn {background-color: #EBD1D8;\r\n}\r\n\r\n.k-grid a.order-field-anchortag {\r\n    color: #0080ff;\r\n    text-decoration: underline;\r\n}\r\n\r\n#orderListGrid table, #orderListGrid th, #orderListGrid td {\r\n    border-bottom: 1px solid #cccccc;\r\n    border-collapse: collapse;\r\n    word-wrap: break-word;\r\n    overflow-wrap: break-word;\r\n}\r\n\r\n#orderListGrid.k-grid .k-column-resizer {\r\n    cursor: w-resize;\r\n    height: 1000%;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 1em;\r\n}\r\n\r\n.k-grid-header .k-grid-filter, .k-grid-header .k-header-column-menu {\r\n    right: 10px;\r\n}\r\n\r\n.k-grid-header .k-header > .k-link > .k-icon.k-i-sort-desc-sm, .k-grid-header .k-header > .k-link > .k-icon.k-i-sort-asc-sm {\r\n \r\n    margin-left: 2px;\r\n}\r\n\r\n.k-grid .k-grid-header .k-header .k-link {\r\n    height: auto;\r\n}\r\n\r\n.k-grid .k-grid-header .k-header {\r\n    white-space: normal;\r\n}\r\n"

/***/ }),

/***/ "./src/app/order/components/orders-grid.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div id=\"main-container\" class=\"container-fluid\">\r\n    <div class=\"main-content\">\r\n        <div class=\"tab-header\">\r\n            <header>\r\n                <h4>Orders Submitted</h4>\r\n            </header>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"search-button-row\">\r\n                        <input #mainSearchBox\r\n                               type=\"text\"\r\n                               class=\"k-input k-textbox\"\r\n                               id=\"orderSearchBox\"\r\n                               name=\"orderSearchFilter\"\r\n                               placeholder=\"Search Orders..\" \r\n                               title=\"Search by project name, active quote title, and po number.\"/>\r\n                        <button id=\"orderSearchButton\" (click)=\"onMainSearchBoxClick($event)\">\r\n                            <span class=\"k-icon k-i-search\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <button type=\"button\" (click)=\"onExportToExcelClick()\" class=\"export-to-excel-btn\">\r\n                        <span class=\"k-icon k-i-excel\"></span>Export To Excel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"order-params-row\">\r\n                    <div class=\"col-md-2\">\r\n                        <label for=\"userAutoComplete\" class=\"orders-search-labels\">User </label>\r\n                        <span class=\"kendo-input-autocomplete\">\r\n                            <kendo-autocomplete #userListNode\r\n                                                class=\"kendo-autocomplete\"\r\n                                                [data]=\"userList\"\r\n                                                [filterable]=\"true\"\r\n                                                (filterChange)=\"handleUserListChange($event)\"\r\n                                                (valueChange)=\"handleUserSelectionChange($event)\">\r\n                            </kendo-autocomplete>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\">\r\n                        <label for=\"orderStatusDDL\" class=\"orders-search-labels\">Order Status </label>\r\n                        <kendo-dropdownlist #orderStatusNode\r\n                                            class=\"kendo-dropdownlist\"\r\n                                            [data]=\"orderStatusTypeList\"\r\n                                            [textField]=\"'text'\"\r\n                                            [valueField]=\"'value'\"\r\n                                            (valueChange)=\"handleOrderStatusListChange($event)\"\r\n                                            [valuePrimitive]=\"true\"\r\n                                            [(ngModel)]=\"defaultOrderStatus\">\r\n                        </kendo-dropdownlist>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\">\r\n                        <label for=\"userAutoComplete\" class=\"orders-search-labels\">Business Name </label>\r\n                        <kendo-autocomplete #businessNameNode\r\n                                            class=\"kendo-autocomplete\"\r\n                                            [data]=\"businessNameList\"\r\n                                            [filterable]=\"true\"\r\n                                            (filterChange)=\"handleBusinessNameChange($event)\"\r\n                                            (valueChange)=\"handleBusinessNameSelectionChange($event)\">\r\n                        </kendo-autocomplete>\r\n                    </div>\r\n                    <div class=\"col-md-1\">\r\n\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <label for=\"fromDate\" class=\"orders-search-labels\">From Date </label>\r\n                        <kendo-datepicker #fromDateNode\r\n                                          class=\"kendo-datepicker\"\r\n                                          [format]=\"'MM/dd/yyyy'\"\r\n                                          [value]=\"startDateValue\"\r\n                                          (valueChange)=\"handleStartDateChange($event)\">\r\n                        </kendo-datepicker>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <label for=\"toDate\" class=\"orders-search-labels\">To Date </label>\r\n                        <kendo-datepicker #toDateNode\r\n                                          class=\"kendo-datepicker\"\r\n                                          [format]=\"'MM/dd/yyyy'\"\r\n                                          [value]=\"endDateValue\"\r\n                                          (valueChange)=\"handleEndDateChange($event)\">\r\n                        </kendo-datepicker>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-1\">\r\n                        <span class=\"btn-reset-span\">\r\n                            <button type=\"button\" class=\"btn-refresh-all\" (click)=\"onResetButtonClick()\">RESET</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <!--ORDERS GRID-->\r\n            <kendo-grid #grid=\"kendoGrid\" id=\"orderListGrid\"\r\n                        [kendoGridBinding]=\"orderListGridData\"\r\n                        [pageSize]=\"pageSize\"\r\n                        [skip]=\"skip\"\r\n                        [pageable]=\"{\r\n                              buttonCount: buttonCount,\r\n                              info: info,\r\n                              type: type,\r\n                              pageSizes: pageSizes,\r\n                              previousNext: previousNext\r\n                            }\"\r\n                        [columnMenu]=\"true\"\r\n                        [filterable]=\"true\"\r\n                        [sortable]=\"true\"\r\n                        [resizable]=\"true\"\r\n                        [rowClass]=\"rowCallback\">\r\n                <kendo-grid-column field=\"projectName\" media=\"(min-width: 450px)\" title=\"Project Name\"\r\n                                   [headerStyle]=\"{ 'color': 'white' }\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        <a class=\"order-field-anchortag\"\r\n                           href=\"/v3/#/project/{{dataItem.projectId}}\">\r\n                            {{dataItem.projectName}}\r\n                        </a>\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"activeQuote\" media=\"(min-width: 450px)\" title=\"Active Quote\"\r\n                                   [headerStyle]=\"{ 'color': 'white' }\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.activeQuoteTitle}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"businessName\" media=\"(min-width: 450px)\"\r\n                                   title=\"Business Name\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.businessName}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"projectOwnerName\" media=\"(min-width: 450px)\"\r\n                                   title=\"Project Owner Name\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.projectOwnerName}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"dealerContractorName\" media=\"(min-width: 450px)\"\r\n                                   title=\"Dealer/Contractor Name\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.dealerContractorName}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"projectDate\" media=\"(min-width: 450px)\" title=\"Project Date\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.projectDate | date : 'shortDate'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"orderStatusDescription\" media=\"(min-width: 450px)\" title=\"Order Status\"\r\n                                   [class]=\"{'codeColumn': true}\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        <a class=\"order-field-anchortag\"\r\n                           href=\"/v3/#/orderForm/{{dataItem.projectId}}/{{dataItem.quoteId}}/submitted\">\r\n                            {{dataItem.orderStatusDescription }}\r\n                        </a>\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"poNumber\" media=\"(min-width: 450px)\" title=\"PO Number\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.poNumber}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"erpOrderNumber\" media=\"(min-width: 450px)\" title=\"ERP Order No.\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.erpOrderNumber}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"poAttachmentName\" media=\"(min-width: 450px)\" title=\"PO Attachment\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        <a class=\"order-field-anchortag\" [routerLink]=\"\">\r\n                            {{dataItem.poAttachmentName}}\r\n                        </a>\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"additionalDocFileName\" media=\"(min-width: 450px)\" title=\"Additional Docs\"\r\n                                   [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" >\r\n                        <a class=\"order-field-anchortag\" (click)=\"onAdditionalDocsLinkClick(dataItem.quoteId)\">\r\n                            {{dataItem.additionalDocFileName}}\r\n                        </a>\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"submitDate\" media=\"(min-width: 450px)\" title=\"Order Date\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.submitDate | date : 'shortDate'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"estimatedDeliveryDate\" media=\"(min-width: 450px)\"\r\n                                   title=\"Est. Delivery Date\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.estimatedDeliveryDate | date : 'shortDate'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"orderReleaseDate\" media=\"(min-width: 450px)\"\r\n                                   title=\"Order Release Date\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.orderReleaseDate | date : 'shortDate'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"totalListPrice\" media=\"(min-width: 450px)\"\r\n                                   title=\"Total List\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.totalListPrice | currency:'USD':true:'1.2-2'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"totalNetPrice\" media=\"(min-width: 450px)\" title=\"Total Net\"\r\n                                   [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.totalNetPrice | currency:'USD':true:'1.2-2'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"totalSellPrice\" media=\"(min-width: 450px)\"\r\n                                   title=\"Total Sell\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.totalSellPrice | currency:'USD':true:'1.2-2'}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"darComStatus\" media=\"(min-width: 450px)\"\r\n                                   title=\"DAR/COM Status\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.darComStatus}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"vrvODUcount\" media=\"(min-width: 450px)\"\r\n                                   title=\"VRV ODU #\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.vrvODUcount}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"splitODUcount\" media=\"(min-width: 450px)\"\r\n                                   title=\"Split ODU #\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.splitODUcount}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n                <kendo-grid-column field=\"pricingTypeDescription\" media=\"(min-width: 450px)\"\r\n                                   title=\"Pricing Strategy\" [hidden]=\"true\" [headerStyle]=\"{ 'color': 'white'}\">\r\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                        {{dataItem.pricingTypeDescription}}\r\n                    </ng-template>\r\n                </kendo-grid-column>\r\n\r\n                <ng-template kendoGridDetailTemplate let-dataItem>\r\n                    <section>\r\n                        <order-item-products [quoteId]=\"dataItem.quoteId\"></order-item-products>\r\n                    </section>\r\n                </ng-template>\r\n                <kendo-grid-excel fileName=\"Orders.xlsx\"></kendo-grid-excel>\r\n            </kendo-grid>\r\n        </div>\r\n    </div>\r\n\r\n    <!--kendo dialog export to excel -->\r\n    <kendo-dialog *ngIf=\"exportToExcelDialogOpen\" \r\n                  title=\"{{exportToExcelDialogTitle}}\" \r\n                  (close)=\"closeExportToExcelDialog()\" >\r\n        <p>{{exportToExcelDialogMessage}}</p> <br />\r\n        <kendo-dropdownlist #exportToExcelNode\r\n                            class=\"kendo-dropdownlist\"\r\n                            [data]=\"exportToExcelOptions\"\r\n                            [(ngModel)]=\"defaultExportToExcelOption\">\r\n\r\n        </kendo-dropdownlist>\r\n        <br /><br />\r\n        <kendo-dialog-actions>\r\n            <button kendoButton class=\"k-button\" (click)=\"exportToExcel(grid)\" primary=\"true\" data-toggle=\"modal\" icon=\"file-excel\">Export</button>\r\n\r\n            <kendo-excelexport [data]=\"orderListWithProducts\" fileName=\"OrdersWithProducts.xlsx\" #excelexport>\r\n                <kendo-excelexport-column field=\"projectName\" title=\"Project Name\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"activeQuoteTitle\" title=\"Active Quote\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"businessName\" title=\"Business Name\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"projectOwnerName\" title=\"Project Owner Name\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"dealerContractorName\" title=\"Dealer/Contractor Name\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"projectDate\" title=\"Project Date\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"orderStatusDescription\" title=\"Order Status\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"poNumber\" title=\"PO Number\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"erpOrderNumber\" title=\"ERP Order Number\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"poAttachmentName\" title=\"PO Attachment\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"submitDate\" title=\"Order Date\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"estimatedDeliveryDate\" title=\"Est. Delivery Date\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"orderReleaseDate\" title=\"Order Release Date\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"totalListPrice\" title=\"Total List\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"totalNetPrice\" title=\"Total Net\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"totalSellPrice\" title=\"Total Sell\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"darComStatus\" title=\"DAR/COM Status\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"vrvODUcount\" title=\"VRV ODU #\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"splitODUcount\" title=\"Split ODU #\">\r\n                </kendo-excelexport-column>\r\n                <kendo-excelexport-column field=\"pricingTypeDescription\" title=\"Pricing Strategy\">\r\n                </kendo-excelexport-column>\r\n               \r\n                <kendo-excelexport-column-group title=\"Products\" [headerCellOptions]=\"{ textAlign: 'center' }\">\r\n                    <kendo-excelexport-column field=\"productNumber\" title=\"Product Number\">\r\n                    </kendo-excelexport-column>\r\n                    <kendo-excelexport-column field=\"description\" title=\"Product Description\">\r\n                    </kendo-excelexport-column>\r\n                    <kendo-excelexport-column field=\"quantity\" title=\"Qty\">\r\n                    </kendo-excelexport-column>\r\n                    <kendo-excelexport-column field=\"listPrice\" title=\"List Price Each\">\r\n                    </kendo-excelexport-column>\r\n                    <kendo-excelexport-column field=\"netPrice\" title=\"Net Price Each\">\r\n                    </kendo-excelexport-column>\r\n                    <kendo-excelexport-column field=\"extListPrice\" title=\"Ext. List Price\">\r\n                    </kendo-excelexport-column>\r\n                    <kendo-excelexport-column field=\"extNetPrice\" title=\"Ext. Net Price\">\r\n                    </kendo-excelexport-column>\r\n                </kendo-excelexport-column-group>\r\n            </kendo-excelexport>\r\n        </kendo-dialog-actions>\r\n    </kendo-dialog>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/order/components/orders-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var kendo_angular_grid_1 = __webpack_require__("./node_modules/@progress/kendo-angular-grid/dist/es/index.js");
var kendo_file_saver_1 = __webpack_require__("./node_modules/@progress/kendo-file-saver/dist/es/main.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var order_service_1 = __webpack_require__("./src/app/order/services/order.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var searchOrders_1 = __webpack_require__("./src/app/shared/models/searchOrders.ts");
var order_constants_1 = __webpack_require__("./src/app/order/order-constants.ts");
var ONE_YEAR_SPAN = '364';
var FIVE_YEAR_SPAN = '1825';
var OrdersGridComponent = /** @class */ (function () {
    /**********************
     * Dependency Injection
     **********************/
    function OrdersGridComponent(toastrSvc, userSvc, orderSvc, quoteSvc, 
        //private loadingIconSvc: LoadingIconService,
        router, route, http) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.orderSvc = orderSvc;
        this.quoteSvc = quoteSvc;
        this.router = router;
        this.route = route;
        this.http = http;
        this.orderListGridData = [];
        this.pageSize = 20;
        this.skip = 0;
        this.buttonCount = 20;
        this.info = true;
        this.type = 'numeric';
        this.pageSizes = true;
        this.previousNext = true;
        this.default365DaysOrderList = [];
        this.fiveYearOrderItemList = [];
        this.orderListWithProducts = [];
        this.productListItems = [];
        this.sourceUserList = [];
        this.userList = [];
        this.sourceBusinessNameList = [];
        this.businessNameList = [];
        this.exportToExcelOptions = ["Orders", "Orders with products"];
        this.defaultExportToExcelOption = "Orders";
        this.orderStatusTypeList = [];
        this.ddlPlaceHolder = { text: 'All', value: null };
        this.defaultOrderStatus = 0;
        this.exportToExcelDialogOpen = false;
        this.exportToExcelTemplate = false;
        this.searchParams = new searchOrders_1.SearchOrders();
        this.inputParams = false;
        this.rowCallback = function (context) {
            switch (context.dataItem.orderStatusDescription) {
                case 'Submitted':
                    return { blue: true };
                case 'Picked':
                    return { purple: true };
                case 'Awaiting CSR':
                    return { yellow: true };
                case 'Accepted':
                    return { lightgreen: true };
                case 'Shipped':
                    return { green: true };
                case 'Canceled':
                    return { grey: true };
                case 'In Process':
                    return { pink: true };
                default:
                    return {};
            }
        };
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    ;
    /**************************
     * angular life cycle hooks
     *************************/
    OrdersGridComponent.prototype.ngOnInit = function () {
        //set the default 365 date range
        this.endDateValue = new Date();
        this.startDateValue = this.addDays(new Date(), parseInt(ONE_YEAR_SPAN)); //set initial list to last 365 days
        this.startDateFiveYear = this.addDays(new Date(), parseInt(FIVE_YEAR_SPAN));
        this.getOrderItemsForLast365Days(); // Fetch the item list with the initial state
        this.getUserList(); // user list for User autocomplete box
        this.getOrderStatusTypeList();
        this.getBusinessNameList();
        this.defaultOrderStatus = 0; //set dropdown list to 'All'
    };
    OrdersGridComponent.prototype.ngAfterViewInit = function () {
        // Expand the first row initially
        //this.grid.expandRow(0);
        jQuery(".k-grid .k-filter-row").hide();
    };
    /****************
     * event handlers
     ****************/
    OrdersGridComponent.prototype.onMainSearchBoxClick = function (eventValue) {
        this.FilterWithAllSearchParams();
    };
    OrdersGridComponent.prototype.handleUserListChange = function (eventValue) {
        this.userList = this.sourceUserList
            .filter(function (s) { return s.toLowerCase()
            .indexOf(eventValue.toLowerCase()) !== -1; });
    };
    OrdersGridComponent.prototype.handleUserSelectionChange = function (eventValue) {
        if (eventValue != "")
            this.orderListGridData = this.FilterUserSelectionChange(eventValue);
        else
            this.FilterWithAllSearchParams();
    };
    OrdersGridComponent.prototype.handleBusinessNameChange = function (eventValue) {
        this.businessNameList = this.sourceBusinessNameList
            .filter(function (x) { return x.toLowerCase()
            .indexOf(eventValue.toLowerCase()) !== -1; });
    };
    OrdersGridComponent.prototype.handleBusinessNameSelectionChange = function (eventValue) {
        if (eventValue != "")
            this.orderListGridData = this.FilterBusinessNameSelectionChange(eventValue);
        else
            this.FilterWithAllSearchParams();
    };
    OrdersGridComponent.prototype.handleOrderStatusListChange = function (eventValue) {
        var dropdownSelectionText = this.orderStatusTypeList.find(function (obj) {
            return obj.value === eventValue;
        }).text;
        this.FilterWithAllSearchParams();
    };
    OrdersGridComponent.prototype.handleStartDateChange = function (event) {
        if (this.fromDateNode.value > this.toDateNode.value) {
            this.openDateSelectionErrorDialog();
        }
        else if ((this.toDateNode.value.getYear() - this.fromDateNode.value.getYear()) > 5) {
            this.openDateRangeErrorDialog();
        }
        else {
            this.FilterWithAllSearchParams();
        }
    };
    OrdersGridComponent.prototype.handleEndDateChange = function (event) {
        if (this.fromDateNode.value > this.toDateNode.value) {
            this.openDateSelectionErrorDialog();
        }
        else if ((this.toDateNode.value.getYear() - this.fromDateNode.value.getYear()) > 5) {
            this.openDateRangeErrorDialog();
        }
        else {
            this.FilterWithAllSearchParams();
        }
    };
    OrdersGridComponent.prototype.FilterUserSelectionChange = function (userNameVal) {
        return this.orderListGridData.filter(function (x) { return x.projectOwnerName.trim() == userNameVal.trim(); });
    };
    OrdersGridComponent.prototype.FilterBusinessNameSelectionChange = function (businessNameVal) {
        return this.orderListGridData.filter(function (x) { return x.businessName.trim() == businessNameVal.trim(); });
    };
    //on date time picker change, also do further filters after server trip
    OrdersGridComponent.prototype.FilterWithAllSearchParams = function () {
        var _this = this;
        if (this.fromDateNode.value.toLocaleString() == this.startDateValue.toLocaleString() &&
            this.toDateNode.value.toLocaleString() == this.endDateValue.toLocaleString()) {
            this.orderListGridData = this.default365DaysOrderList;
        }
        else if (this.fromDateNode.value > this.startDateFiveYear) {
            this.orderListGridData = this.fiveYearOrderItemList
                .filter(function (x) {
                var convertedSubmitDate = new Date(Date.parse(x.submitDate));
                return convertedSubmitDate >= _this.fromDateNode.value
                    && convertedSubmitDate <= _this.toDateNode.value;
            });
        }
        else {
            this.searchParams = {
                startDate: this.fromDateNode.value.toLocaleDateString(),
                endDate: this.toDateNode.value.toLocaleDateString()
            };
            this.orderListGridData = this.getOrdersBasedOnSearchParams(this.searchParams, this.inputParams = true);
        }
        this.FilterAgainWithRemainingInputParams(this.orderListGridData); //filter more with other possible search params;
    };
    /*****************************
     * api calls through services
     *****************************/
    OrdersGridComponent.prototype.getOrderItemsForLast365Days = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#orderListGrid"));
        this.blockUI.start('Loading...');
        return this.orderSvc.getLast365DaysOrderItemList()
            .subscribe(function (data) {
            _this.fiveYearOrderItemList = data.model;
            //var initialDate365Days = this.getFormattedDate(this.startDateValue, "inCSharpFormat");
            _this.default365DaysOrderList = _this.fiveYearOrderItemList
                .filter(function (obj) {
                var convertedSubmitDate = new Date(Date.parse(obj.submitDate));
                return convertedSubmitDate >= _this.startDateValue;
            });
            _this.orderListGridData = _this.default365DaysOrderList;
            //this.loadingIconSvc.Stop(jQuery("#orderListGrid"));
            _this.blockUI.stop();
        });
    };
    OrdersGridComponent.prototype.getOrdersBasedOnSearchParams = function (searchParams, inputParams) {
        var _this = this;
        this.blockUI.start('Loading...');
        //this.loadingIconSvc.Start(jQuery("#orderListGrid"));    
        return this.orderSvc.getOrdersBasedOnSearchParams(searchParams)
            .subscribe(function (data) {
            _this.orderListGridData = data.model;
            _this.blockUI.stop();
            //this.loadingIconSvc.Stop(jQuery("#orderListGrid"));
        });
    };
    OrdersGridComponent.prototype.getUserList = function () {
        var _this = this;
        return this.orderSvc.getUserList()
            .subscribe(function (data) {
            _this.sourceUserList = data.model.map(function (x) { return x.userFullName; });
        });
    };
    OrdersGridComponent.prototype.getBusinessNameList = function () {
        var _this = this;
        return this.orderSvc.getBusinessNameList()
            .subscribe(function (data) {
            _this.sourceBusinessNameList = data.model.map(function (x) { return x.businessName; });
        });
    };
    OrdersGridComponent.prototype.getOrderStatusTypeList = function () {
        var _this = this;
        return this.orderSvc.getOrderStatusList()
            .subscribe(function (data) {
            _this.orderStatusTypeList = [{ text: 'All', value: 0 }];
            data.model.forEach(function (x, index) {
                _this.orderStatusTypeList.push({ text: x.displayText, value: x.keyId });
            });
            _this.orderStatusTypeList.sort(function (a, b) { return a.text < b.text ? -1 : a.text > b.text ? 1 : 0; } // sort by descending
            );
        });
    };
    /***********************
     *  UI button Click Events
     ***********************/
    OrdersGridComponent.prototype.closeExportToExcelDialog = function () {
        this.exportToExcelDialogOpen = false;
    };
    OrdersGridComponent.prototype.onExportToExcelClick = function () {
        this.openExportToExcelDialog();
    };
    OrdersGridComponent.prototype.exportToExcel = function (grid) {
        //this.loadingIconSvc.Start(jQuery("#orderListGrid")); 
        if (this.exportToExcelNode.value == "Orders") {
            grid.data = this.orderListGridData;
            grid.saveAsExcel();
        }
        else {
            this.excelexport.save();
        }
        this.exportToExcelDialogOpen = false;
        //this.loadingIconSvc.Stop(jQuery("#orderListGrid")); 
    };
    OrdersGridComponent.prototype.onResetButtonClick = function () {
        this.mainSearchBox.nativeElement.value = "";
        this.userListNode.text = "";
        this.businessNameNode.text = "";
        this.defaultOrderStatus = 0;
        this.endDateValue = new Date();
        this.startDateValue = this.addDays(new Date(), parseInt(ONE_YEAR_SPAN)); //set initial list to last 365 days
        this.orderListGridData = this.default365DaysOrderList;
    };
    /* Common functions */
    OrdersGridComponent.prototype.addDays = function (date, days) {
        var dateInMs = date.setDate(date.getDate() - days);
        return new Date(dateInMs);
    };
    OrdersGridComponent.prototype.openDateSelectionErrorDialog = function () {
        var dateSelectionErrorMsg = order_constants_1.OrderConstants.DATE_SELECTION_ERROR_MSG;
        this.toastrSvc.Warning(dateSelectionErrorMsg);
        this.onResetButtonClick();
    };
    OrdersGridComponent.prototype.openDateRangeErrorDialog = function () {
        var dateRangeErrorMsg = order_constants_1.OrderConstants.DATE_RANGE_ERROR_MSG;
        this.toastrSvc.Warning(dateRangeErrorMsg);
        this.onResetButtonClick();
    };
    OrdersGridComponent.prototype.openExportToExcelDialog = function () {
        var _this = this;
        this.exportToExcelDialogOpen = true;
        this.exportToExcelDialogTitle = order_constants_1.OrderConstants.EXPORT_TO_EXCEL_TITLE;
        this.exportToExcelDialogMessage = order_constants_1.OrderConstants.EXPORT_TO_EXCEL_DIALOG_MSG;
        this.orderListWithProducts = [];
        this.orderListGridData.forEach(function (order, index) {
            _this.quoteSvc.getQuoteItems(order.quoteId)
                .then(function (resp) {
                if (resp.isok) {
                    _this.productListItems = resp.model;
                    _this.productListItems.forEach(function (product, index) {
                        //create additional properties by computing
                        var extNetPriceValue = product.netPrice * product.quantity;
                        //create additional properties by computing
                        var extListPriceValue = product.listPrice * product.quantity;
                        Object.assign(product, { extNetPrice: extNetPriceValue, extListPrice: extListPriceValue });
                        //final object for excel export with products
                        _this.orderListWithProducts.push(Object.assign({}, order, product));
                    });
                }
            }).catch(function (error) {
                //console.log('Retrieval error: ${error}');
                console.log(error);
            });
        });
    };
    /********************
     * Filter with all input params
     * @param recycledOrderListData
     ********************/
    /**/
    OrdersGridComponent.prototype.FilterAgainWithRemainingInputParams = function (recycledOrderListData) {
        var searchVal = this.mainSearchBox.nativeElement.value;
        var userNameVal = this.userListNode.value;
        var orderStatusVal = this.orderStatusNode.value;
        var businessNameVal = this.businessNameNode.value;
        var orderStatusDesc = this.orderStatusTypeList.find(function (obj) { return obj.value == orderStatusVal; }).text;
        var orderListDataToReturn = null;
        //possibility of all input boxes being empty
        //all empty except for 'All' as default order status
        if (this.isTextBoxEmpty(searchVal) &&
            this.isTextBoxEmpty(userNameVal) &&
            this.isTextBoxEmpty(businessNameVal)) {
            if (orderStatusDesc == "All") {
                orderListDataToReturn = recycledOrderListData;
            }
            else {
                orderListDataToReturn = recycledOrderListData.filter(function (y) {
                    return (y.orderStatusDescription === orderStatusDesc);
                });
            }
        }
        else if (!this.isTextBoxEmpty(searchVal) &&
            !this.isTextBoxEmpty(userNameVal) &&
            !this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return ((y.projectName.indexOf(searchVal) !== -1 ||
                    y.activeQuoteTitle.indexOf(searchVal) !== -1 ||
                    y.poNumber.indexOf(searchVal) !== -1) &&
                    y.projectOwnerName.trim() == userNameVal.trim() &&
                    y.businessName.trim() == businessNameVal.trim() &&
                    y.orderStatusDescription === orderStatusDesc);
            });
        }
        else if (this.isTextBoxEmpty(searchVal) &&
            !this.isTextBoxEmpty(userNameVal) &&
            !this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return (y.projectOwnerName == userNameVal.trim() &&
                    y.businessName.trim() == businessNameVal.trim() &&
                    y.orderStatusDescription === orderStatusDesc);
            });
        }
        else if (!this.isTextBoxEmpty(searchVal) &&
            !this.isTextBoxEmpty(userNameVal) &&
            this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return ((y.projectName.indexOf(searchVal) !== -1 ||
                    y.activeQuoteTitle.indexOf(searchVal) !== -1 ||
                    y.poNumber.indexOf(searchVal) !== -1) &&
                    (y.projectOwnerName.trim() == userNameVal.trim()) &&
                    (y.orderStatusDescription === orderStatusDesc));
            });
        }
        else if (!this.isTextBoxEmpty(searchVal) &&
            this.isTextBoxEmpty(userNameVal) &&
            !this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return ((y.projectName.indexOf(searchVal) !== -1 ||
                    y.activeQuoteTitle.indexOf(searchVal) !== -1 ||
                    y.poNumber.indexOf(searchVal) !== -1) &&
                    (y.businessName.trim() == businessNameVal.trim()) &&
                    (y.orderStatusDescription === orderStatusDesc));
            });
        }
        else if (this.isTextBoxEmpty(searchVal) &&
            this.isTextBoxEmpty(userNameVal) &&
            !this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return (y.businessName.trim() == businessNameVal.trim() &&
                    y.orderStatusDescription === orderStatusDesc);
            });
        }
        else if (this.isTextBoxEmpty(searchVal) &&
            !this.isTextBoxEmpty(userNameVal) &&
            this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return (y.projectOwnerName.trim() == userNameVal.trim() &&
                    (y.orderStatusDescription === orderStatusDesc));
            });
        }
        else if (!this.isTextBoxEmpty(searchVal) &&
            this.isTextBoxEmpty(userNameVal) &&
            this.isTextBoxEmpty(businessNameVal)) {
            orderListDataToReturn = recycledOrderListData.filter(function (y) {
                return ((y.projectName.indexOf(searchVal) !== -1 ||
                    y.activeQuoteTitle.indexOf(searchVal) !== -1 ||
                    y.poNumber.indexOf(searchVal) !== -1) &&
                    (y.orderStatusDescription === orderStatusDesc));
            });
        }
        this.orderListGridData = orderListDataToReturn;
    };
    OrdersGridComponent.prototype.isTextBoxEmpty = function (value) {
        if (value == "")
            return true;
        else
            return false;
    };
    OrdersGridComponent.prototype.onAdditionalDocsLinkClick = function (quoteId) {
        var _this = this;
        return this.orderSvc.uploadAdditionalDocs(quoteId)
            .subscribe(function (data) {
            var filename = "AdditionalDocs-" + quoteId + ".zip";
            var blob = new Blob([data._body], { type: 'application/zip' });
            kendo_file_saver_1.saveAs(blob, filename);
        }, function (err) {
            _this.toastrSvc.Error("Something went wrong. Please try again.");
        });
    };
    __decorate([
        core_1.ViewChild("mainSearchBox"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "mainSearchBox", void 0);
    __decorate([
        core_1.ViewChild("userListNode"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "userListNode", void 0);
    __decorate([
        core_1.ViewChild("orderStatusNode"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "orderStatusNode", void 0);
    __decorate([
        core_1.ViewChild("businessNameNode"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "businessNameNode", void 0);
    __decorate([
        core_1.ViewChild("fromDateNode"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "fromDateNode", void 0);
    __decorate([
        core_1.ViewChild("toDateNode"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "toDateNode", void 0);
    __decorate([
        core_1.ViewChild("exportToExcelNode"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "exportToExcelNode", void 0);
    __decorate([
        core_1.ViewChild("excelexport"),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "excelexport", void 0);
    __decorate([
        core_1.ViewChild(kendo_angular_grid_1.GridComponent),
        __metadata("design:type", kendo_angular_grid_1.GridComponent)
    ], OrdersGridComponent.prototype, "grid", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], OrdersGridComponent.prototype, "blockUI", void 0);
    OrdersGridComponent = __decorate([
        core_1.Component({
            selector: 'orders-grid',
            template: __webpack_require__("./src/app/order/components/orders-grid.component.html"),
            styles: [__webpack_require__("./src/app/order/components/orders-grid.component.css")],
            encapsulation: core_1.ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService,
            user_service_1.UserService,
            order_service_1.OrderService,
            quote_service_1.QuoteService,
            router_1.Router,
            router_1.ActivatedRoute,
            http_1.Http])
    ], OrdersGridComponent);
    return OrdersGridComponent;
}());
exports.OrdersGridComponent = OrdersGridComponent;


/***/ }),

/***/ "./src/app/order/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/order/components/order.component.ts"));
__export(__webpack_require__("./src/app/order/components/order-form.component.ts"));
__export(__webpack_require__("./src/app/order/components/order-form-quote-items.component.ts"));
__export(__webpack_require__("./src/app/order/components/orders-grid.component.ts"));
__export(__webpack_require__("./src/app/order/components/order-item-products.component.ts"));
__export(__webpack_require__("./src/app/order/components/edit-project-location.component.ts"));
__export(__webpack_require__("./src/app/order/components/edit-customer-address.component.ts"));
__export(__webpack_require__("./src/app/order/components/edit-seller-address.component.ts"));
__export(__webpack_require__("./src/app/order/services/order.service.ts"));
__export(__webpack_require__("./src/app/order/services/order-resolver.service.ts"));


/***/ }),

/***/ "./src/app/order/order-constants.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var OrderConstants = /** @class */ (function () {
    function OrderConstants() {
    }
    Object.defineProperty(OrderConstants, "DATE_SELECTION_ERROR_MSG", {
        /**********************
         * Orders Grid
         **********************/
        get: function () {
            return "'From Date' can not be less than 'To Date'. Please, select another date range.";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "DATE_RANGE_ERROR_MSG", {
        get: function () {
            return "Your selection returned large set of data. Please shorten your date range selection.";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "EXPORT_TO_EXCEL_TITLE", {
        get: function () {
            return "Export To Excel";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "EXPORT_TO_EXCEL_DIALOG_MSG", {
        get: function () {
            return "Please select an export type:";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "CONFIRM_CONFIGURED_SUBMIT_MSG", {
        /**********************
        * Order Submit Form
        **********************/
        get: function () {
            return "<p>Are you sure you want to submit Order? <br/>No further changes will be available on this project after it has been submitted.</p>"
                + "<p>At the point model creation submittal is accepted, any changes or cancellations to an order with Factory Install Options will incur a 25% cancellation fee.</p>";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "SUBMIT_ORDER_CONFIRM_MSG", {
        get: function () {
            return "<p>Are you sure you want to submit Order? <br/>No further changes will be available on this project after it has been submitted.</p>";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "BOOTBOX_ALERT_MSG", {
        get: function () {
            return "<p>Thank you for submitting the order. Your Daikin Customer Service Representative will review the order and get back to you within 24 hours.<br/> <br/>To cancel the order, please contact your Daikin Customer Service Representative.</p>";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "CHECK_RELEASE_DATE", {
        get: function () {
            return "Please enter order release date at least 28 days from today.";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "EXCEEDED_MAX_FILE_SIZE", {
        get: function () {
            return "File has exceeded max allowed size of 3MB";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "PO_UPLOAD_URL", {
        get: function () {
            return "/api/Order/UploadPOAttachment";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "ADDITIONAL_DOCS_UPLOAD_URL", {
        get: function () {
            return "/api/Order/UploadAdditionalOrderDocs";
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(OrderConstants, "REMOVE_UPLOADED_DOCS_URL", {
        get: function () {
            return "/api/Order/RemoveUploadedDocsUrl";
        },
        enumerable: true,
        configurable: true
    });
    ;
    return OrderConstants;
}());
exports.OrderConstants = OrderConstants;


/***/ }),

/***/ "./src/app/order/services/order-resolver.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
var order_service_1 = __webpack_require__("./src/app/order/services/order.service.ts");
var OrderResolver = /** @class */ (function () {
    function OrderResolver(orderSvc) {
        this.orderSvc = orderSvc;
    }
    OrderResolver.prototype.resolve = function (route, state) {
        var projectId = route.params['projectid'];
        var quoteId = route.params['quoteid'];
        var recordState = route.params['recordState'];
        if (recordState.toLowerCase() == "new") {
            return this.orderSvc.orderForm(projectId, quoteId)
                .map(function (orderFormModel) {
                if (orderFormModel) {
                    return orderFormModel;
                }
                else {
                    return null;
                }
            }).catch(function (error) {
                //console.log('Retrieval error: ${error}');
                console.log(error);
                return Observable_1.Observable.of(null);
            });
        }
        else if (recordState.toLowerCase() == "submitted") {
            return this.orderSvc.getSubmittedOrderForm(quoteId)
                .map(function (orderFormModel) {
                if (orderFormModel) {
                    return orderFormModel;
                }
                else {
                    return null;
                }
            }).catch(function (error) {
                //console.log('Retrieval error: ${error}');
                console.log(error);
                return Observable_1.Observable.of(null);
            });
        }
    };
    OrderResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [order_service_1.OrderService])
    ], OrderResolver);
    return OrderResolver;
}());
exports.OrderResolver = OrderResolver;


/***/ }),

/***/ "./src/app/order/services/order.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var OrderService = /** @class */ (function () {
    function OrderService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        this.downloadHeaders = new http_1.Headers();
        this.downloadOptions = new http_1.RequestOptions({
            //method: RequestMethod.Post,
            responseType: http_1.ResponseContentType.Blob,
            headers: this.downloadHeaders
        });
    }
    OrderService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    OrderService.prototype.extractHtml = function (res) {
        return res._body;
    };
    OrderService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    //Test
    OrderService.prototype.getSubmittalOrder = function () {
        return this.http.get("/api/Order/GetSubmittalOrder", { headers: this.headers }).toPromise()
            .then(function (resp) {
            debugger;
            return resp;
        })
            .catch(this.handleError);
    };
    OrderService.prototype.orderForm = function (projectId, quoteId) {
        return this.http.get("/api/Order/OrderForm?projectId=" + projectId + "&quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.getSubmittedOrderForm = function (quoteId) {
        return this.http.get("/api/Order/GetSubmittedOrder?quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.postOrder = function (order) {
        return this.http.post("/api/Order/PostOrder", order, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.sendOrderEmail = function (order) {
        return this.http.post("/ProjectDashboard/SendEmailOrderSubmit", order, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    //orders grid api calls
    OrderService.prototype.getLast365DaysOrderItemList = function () {
        return this.http.get("/api/Order/GetOrdersForGrid", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.getUserList = function () {
        return this.http.get("/api/User/GetUsersViewable", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.getOrderStatusList = function () {
        return this.http.get("/api/Order/GetOrderStatusTypes", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.getBusinessNameList = function () {
        return this.http.get("/api/Business/GetBusinessList", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.getOrderItemsForLast365Days = function () {
        return this.http.get("/api/Order/GetOrdersForGrid", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.getOrdersBasedOnSearchParams = function (searchParams) {
        return this.http.post("/api/Order/GetOrdersBasedOnSearchParams", searchParams, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.uploadAdditionalDocs = function (quoteId) {
        var httpUrl = "/api/Order/UploadAdditionalDocsZip?quoteId=";
        return this.http.get(httpUrl + quoteId, this.downloadOptions)
            .map(function (res) { return res; })
            .share()
            .catch(this.handleError);
    };
    OrderService.prototype.removeUploadedDocsOnCancel = function (quoteId) {
        return this.http.get("/api/Order/DeleteUploadedDocsOnCancel?quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService.prototype.checkIfOrderIsSubmitted = function (quoteId) {
        return this.http.get("/api/Order/CheckIfOrderIsSubmitted?quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    OrderService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], OrderService);
    return OrderService;
}());
exports.OrderService = OrderService;


/***/ }),

/***/ "./src/app/product/components/product-details-gridView.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div *ngIf=\"user\" class=\"product-details\">\r\n    <div class=\"row no-padding\" style=\"margin-bottom:10px;\">\r\n        <div class=\"col col-md-12 product-name-gridView\" style=\"background-color: #007fcc; height:35px;\">\r\n            <a (click)=\"productDetails($event, product, 'product-overview')\" style=\"color: #ffffff;\">{{product.name}}</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row no-padding\">\r\n        <div class=\"col col-md-6 product-image\" style=\"background-color: transparent; height: 135px;\">\r\n            <product-image [product]=\"product\"></product-image>\r\n            <!--<img width=\"135\" height=\"100\" src=\"{{product.image.url}}\" />-->\r\n        </div>\r\n        <div class=\"col col-md-6 product-info\" style=\"background-color: transparent; height: 135px;\">\r\n            <!--<div class=\"product-name\"><a href=\"/ProductDashboard/Product?ProductId={{product.productId}}\">{{product.name}}</a></div>-->\r\n            <div class=\"as-lnk\">Model No.:</div>\r\n            <div style=\"font-size:smaller\"> {{product.productNumber}}</div>\r\n            <div *ngIf=\"userSvc.currentUser.showPrices\">\r\n                <div class=\"as-lnk\">Price:</div>\r\n                <div style=\"font-size:smaller\"> {{product.price | currency:'USD':true:'1.2-2'}}</div>\r\n            </div>\r\n            <div>\r\n                <span class=\"pull-right\">\r\n                    <a (click)=\"productDetails($event, product, 'product-overview')\" title=\"Product overview\"><img src=\"/v3/src/assets/images/RelatedDocumentsLinkIcon_Blue.png\"></a>\r\n                    <a (click)=\"productDetails($event, product, 'product-accessories')\" title=\"Product accessories\"><img src=\"/v3/src/assets/images/RelatedAccessoriesLinkIcon_Blue.png\"></a>\r\n                    <a (click)=\"productDetails($event, product, 'product-specs')\" title=\"Product specifications\"><img src=\"/v3/src/assets/images/TechDetailLInkIcon_blue.png\"></a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row no-padding\" style=\"background-color: #effaff;\">\r\n        <div class=\"col col-md-8\" style=\"height: 120px; padding:10px\">\r\n            <div *ngIf=\"product.specifications.all != null\">\r\n\r\n\r\n                <div *ngIf=\"SEERNonDucted && product.specifications.all.seerNonDucted\" class=\"as-lnk\">SEER (Non-Ducted): <span class=\"grey-text\">{{product.specifications.all.seerNonDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"IEERNonDucted && product.specifications.all.ieerNonDucted\" class=\"as-lnk\">IEER (Non-Ducted): <span class=\"grey-text\">{{product.specifications.all.ieerNonDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"EERNonDucted && product.specifications.all.eerNonDucted\" class=\"as-lnk\">EER (Non-Ducted): <span class=\"grey-text\">{{product.specifications.all.eerNonDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"HSPFNonDucted && product.specifications.all.hspfNonDucted\" class=\"as-lnk\">HSPF (Non-Ducted): <span class=\"grey-text\">{{product.specifications.all.hspfNonDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"COP47NonDucted && product.specifications.all.coP47NonDucted\" class=\"as-lnk\">COP47 (Non-Ducted): <span class=\"grey-text\">{{product.specifications.all.coP47NonDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"SCHENonDucted && product.specifications.all.scheNonDucted\" class=\"as-lnk\">SCHE (Non-Ducted): <span class=\"grey-text\">{{product.specifications.all.scheNonDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n\r\n                <div *ngIf=\"SEERDucted && product.specifications.all.seerDucted\" class=\"as-lnk\">SEER (Ducted): <span class=\"grey-text\">{{product.specifications.all.seerDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"EERDucted && product.specifications.all.eerDucted\" class=\"as-lnk\">EER (Ducted): <span class=\"grey-text\">{{product.specifications.all.eerDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"HSPFDucted && product.specifications.all.hspfDucted\" class=\"as-lnk\">HSPF (Ducted): <span class=\"grey-text\">{{product.specifications.all.hspfDucted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"COP47Ducted && product.specifications.all.coP47Ducted\" class=\"as-lnk\">COP47 (Ducted): <span class=\"grey-text\">{{product.specifications.all.coP47Ducted.value | number:'1.2-2'}}</span></div>\r\n\r\n                <div *ngIf=\"AFUE && product.specifications.all.afue\" class=\"as-lnk\">AFUE: <span class=\"grey-text\">{{product.specifications.all.afue.value | number:'1.2-2'}}</span></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div *ngIf=\"basketQuoteId != 0 && basketQuoteId != undefined\" class=\"col col-md-4 product-qty no-padding\" style=\"text-align:center\">\r\n            <div>Quantity</div>\r\n            <product-quantity-input [(product)]=\"product\"></product-quantity-input>\r\n            <!--<product-quantity-input [(quantity)]=\"product.quantity\"></product-quantity-input>-->\r\n        </div>\r\n        <div *ngIf=\"user.showPrices\">\r\n            <div [ngSwitch]=\"product.productStatusTypeId\" style=\"text-align:center;\">\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.New\" style=\"color:blue; font-size:smaller; \">New</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Active\" style=\"color:#38c638; font-size:smaller;\">Active</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenModuleUnit\" style=\"color:red; font-size:smaller;\">Hidden</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Inactive\" style=\"color:red; font-size:smaller;\">Inactive</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Obsolete\" style=\"color:red; font-size:smaller;\">Obsolete</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenSellable\" style=\"color:red; font-size:smaller;\">Hidden Sellable</span>\r\n            </div>\r\n            <div [ngSwitch]=\"product.inventoryStatusId\" style=\"text-align:center;\">\r\n                <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.Available\" style=\"color:black; background-color:#6df0af; padding:3px;\">Available</span>\r\n                <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.NotAvailable\" style=\"color:black; background-color:#ffcce6; padding:3px;\">Not Available</span>\r\n                <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.ContactCSR\" style=\"color:black; background-color:#f7d38c; padding:3px;\">\r\n                    <span *ngIf=\"product.productStatusTypeId == enums.ProductStatusTypeEnum.Active && product.invAvailableDate != null && (user.businessTypeId == enums.BusinessTypeEnum.Daikin || user.businessTypeId == enums.BusinessTypeEnum.ManufacturerRep); else contactCSRBlock\">\r\n                        ETA: {{product.invAvailableDate | date : 'shortDate'}}\r\n                    </span>\r\n                    <ng-template #contactCSRBlock>\r\n                        <span>Contact CSR</span>\r\n                    </ng-template>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n    <!--<div *ngIf=\"basketQuoteId!=0\" class=\"col col-md-1\" style=\"background-color: lightcyan\">\r\n        <div>Quantity</div>\r\n        <input class=\"numericTextBox\" type=\"number\" value=\"{{product.quantity}}\" min=\"0\" max=\"1000\" step=\"1\" style=\"width:70px;\" />\r\n\r\n    </div>-->\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/product/components/product-details-gridView.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProductDetailsGridViewComponent = /** @class */ (function () {
    function ProductDetailsGridViewComponent(router, route, elementRef, toastrSvc, userSvc, enums, productSvc) {
        this.router = router;
        this.route = route;
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        //@Output() changeQty: EventEmitter<any> = new EventEmitter();
        this.viewProductDetailsEvent = new core_1.EventEmitter();
        this.SEERNonDucted = false;
        this.EERNonDucted = false;
        this.HSPFNonDucted = false;
        this.COP47NonDucted = false;
        this.IEERNonDucted = false;
        this.SCHENonDucted = false;
        this.SEERDucted = false;
        this.EERDucted = false;
        this.HSPFDucted = false;
        this.COP47Ducted = false;
        this.AFUE = false;
    }
    ProductDetailsGridViewComponent.prototype.ngOnChanges = function () {
        this.resetColumns();
        this.setupColumns();
    };
    ProductDetailsGridViewComponent.prototype.ngOnInit = function () { };
    ProductDetailsGridViewComponent.prototype.ngAfterViewChecked = function () {
    };
    //public productDetails(event: any, product: any, activeTab: any){
    //    //this.productSvc.product = product;
    //    //this.router.navigate(['/product', { outlets: { 'productDetails': [product.productId] } }], { queryParams: { tab: activeTab } });
    //    this.viewProductDetailsEvent.emit(product);
    //}
    ProductDetailsGridViewComponent.prototype.productDetails = function (event, product, activeTab) {
        var eventParams = {
            'product': product,
            'activeTab': activeTab
        };
        this.viewProductDetailsEvent.emit(eventParams);
    };
    ProductDetailsGridViewComponent.prototype.resetColumns = function () {
        this.SEERNonDucted = false;
        this.EERNonDucted = false;
        this.HSPFNonDucted = false;
        this.COP47NonDucted = false;
        this.IEERNonDucted = false;
        this.SCHENonDucted = false;
        this.SEERDucted = false;
        this.EERDucted = false;
        this.HSPFDucted = false;
        this.COP47Ducted = false;
        this.AFUE = false;
    };
    ProductDetailsGridViewComponent.prototype.setupColumns = function () {
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.MiniSplit //Mini-Split
            || (this.product.productFamilyId == this.enums.ProductFamilyEnum.AlthermaSplit && (this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || this.product.productModelTypeId == this.enums.ProductModelTypeEnum.All)) //Altherma
            || (this.product.productFamilyId == this.enums.ProductFamilyEnum.MultiSplit && (this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || this.product.productModelTypeId == this.enums.ProductModelTypeEnum.All)) //MultiSplit - Outdoor/All
            || this.product.productFamilyId == this.enums.ProductFamilyEnum.SkyAir) {
            this.SEERNonDucted = true;
            this.EERNonDucted = true;
            this.HSPFNonDucted = true;
            this.COP47NonDucted = true;
        }
        if ((this.product.productFamilyId == this.enums.ProductFamilyEnum.VRV || this.product.productFamilyId == this.enums.ProductFamilyEnum.MultiSplit) && this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) {
            //Show nothing
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.VRV && (this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || this.product.productModelTypeId == this.enums.ProductModelTypeEnum.All)) {
            this.IEERNonDucted = true;
            this.EERNonDucted = true;
            this.COP47NonDucted = true;
            this.SCHENonDucted = true;
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.UnitarySplitSystem) {
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.SplitAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.SplitHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.AirHandler || this.product.productClassPIMId == this.enums.ProductClassPIMEnum.Coil) {
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.GasFurnace) {
                this.AFUE = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.UnitaryPackagedSystem) {
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.PackageAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.PackagedHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.PackagedGED) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.AFUE = true;
                if (this.product.productEnergySourceTypeId = this.enums.ProductEnergySourceTypeEnum.DualFuel) {
                    this.HSPFDucted = true;
                    this.COP47Ducted = true;
                }
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.LightCommercialSplitSystem) {
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.LightCommercialPackagedAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.LightCommercialPackagedHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.AirHandler) {
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                //this.AFUEDucted = true;
            }
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsGridViewComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsGridViewComponent.prototype, "product", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProductDetailsGridViewComponent.prototype, "viewProductDetailsEvent", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsGridViewComponent.prototype, "basketQuoteId", void 0);
    ProductDetailsGridViewComponent = __decorate([
        core_1.Component({
            selector: 'product-details-gridView',
            template: __webpack_require__("./src/app/product/components/product-details-gridView.component.html"),
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums,
            product_service_1.ProductService])
    ], ProductDetailsGridViewComponent);
    return ProductDetailsGridViewComponent;
}());
exports.ProductDetailsGridViewComponent = ProductDetailsGridViewComponent;
;


/***/ }),

/***/ "./src/app/product/components/product-details-listView.component.html":
/***/ (function(module, exports) {

module.exports = "<!--<div class=\"row product-details no-padding\">-->\r\n<div class=\"row product-details no-padding\">\r\n    <div class=\"col col-md-3 product-image no-padding\" style=\"background-color:none\">\r\n        <!--<div class=\"product-image no-padding\" style=\"background-color:none\">-->\r\n        <product-image [product]=\"product\"></product-image>\r\n    </div>\r\n\r\n    <div class=\"col col-md-3 product-info\" style=\"background-color:none\">\r\n        <!--<div class=\"product-info no-padding\" style=\"background-color:none\">-->\r\n        <!--<div class=\"product-name\"><a href=\"/ProductDashboard/Product?ProductId={{product.productId}}\">{{product.name}}</a></div>-->\r\n        <div class=\"product-link\"><a (click)=\"productDetails($event, product, 'product-overview')\">{{product.name}}</a></div>\r\n        <div class=\"as-lnk\">Model No.: </div> <div style=\"font-size:smaller\"> {{product.productNumber}}</div>\r\n        <div *ngIf=\"userSvc.currentUser.showPrices\">\r\n            <div class=\"as-lnk\">Price: </div> <div style=\"font-size:smaller\"> {{product.price | currency:'USD':true:'1.2-2'}}</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col product-specs\" [ngClass]=\"{'col-md-4' : basketQuoteId != 0 && basketQuoteId != undefined, 'col-md-6' : basketQuoteId == 0 || basketQuoteId == undefined}\" style=\"background-color:none\">\r\n        <product-spec-bars [product]=\"product\"></product-spec-bars>\r\n        <div *ngIf=\"user.showPrices\">\r\n            <span [ngSwitch]=\"product.productStatusTypeId\">\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.New\" style=\"color:blue; font-size:smaller; text-align:right;\">New</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Active\" style=\"color:#38c638; font-size:smaller; text-align:right;\">Active</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenModuleUnit\" style=\"color:red; font-size:smaller; text-align:right;\">Hidden</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Inactive\" style=\"color:red; font-size:smaller; text-align:right;\">Inactive</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Obsolete\" style=\"color:red; font-size:smaller; text-align:right;\">Obsolete</span>\r\n                <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenSellable\" style=\"color:red; font-size:smaller; text-align:right;\">Hidden Sellable</span>\r\n            </span>\r\n            <span [ngSwitch]=\"product.inventoryStatusId\">\r\n                <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.Available\" style=\"color:black; background-color:#6df0af; padding:3px; font-size:smaller; text-align:right;\">Available</span>\r\n                <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.NotAvailable\" style=\"color:black; background-color:#ffcce6; padding:3px; font-size:smaller; text-align:right;\">Not Available</span>\r\n\r\n                <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.ContactCSR\" style=\"color:black; background-color:#f7d38c; padding:3px; font-size:smaller; text-align:right;\">\r\n                    <span *ngIf=\"product.productStatusTypeId == enums.ProductStatusTypeEnum.Active && product.invAvailableDate != null && (user.businessTypeId == enums.BusinessTypeEnum.Daikin || user.businessTypeId == enums.BusinessTypeEnum.ManufacturerRep); else contactCSRBlock\">\r\n                        ETA: {{product.invAvailableDate | date : 'shortDate'}}\r\n                    </span>\r\n                    <ng-template #contactCSRBlock>\r\n                        <span>Contact CSR</span>\r\n                    </ng-template>\r\n                </span>\r\n               \r\n\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"basketQuoteId != 0 && basketQuoteId != undefined\" class=\"col col-md-2 product-qty no-padding\" style=\"text-align:center\">\r\n        <div class=\"productQtyContainer\" style=\"padding:10px 0px 25px 0px;\">\r\n            <div>Quantity</div>\r\n            <product-quantity-input [(product)]=\"product\"></product-quantity-input>\r\n            <!--<product-quantity-input [(quantity)]=\"product.quantity\"></product-quantity-input>-->\r\n        </div>\r\n        <!--<kendo-numerictextbox [autoCorrect]=\"autoCorrect\" value=\"{{product.quantity}}\" step=\"1\" min=\"0\" style=\"width:100px;\"></kendo-numerictextbox>-->\r\n        <!--<div>\r\n            <button (click)=\"showQty()\">Quantity</button>\r\n        </div>-->\r\n    </div>\r\n\r\n    <!--<hr class=\"col col-md-12 product-row-line\" />-->\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/product-details-listView.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProductDetailsListViewComponent = /** @class */ (function () {
    function ProductDetailsListViewComponent(router, elementRef, toastrSvc, userSvc, enums, productSvc) {
        this.router = router;
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        //@Output() changeQty: EventEmitter<any> = new EventEmitter();
        this.viewProductDetailsEvent = new core_1.EventEmitter();
    }
    ProductDetailsListViewComponent.prototype.ngOnInit = function () {
        //this.productSvc.getBasketQuoteId().then(this.getBasketQuoteIdCallback.bind(this));        
    };
    ProductDetailsListViewComponent.prototype.productDetails = function (event, product, activeTab) {
        var eventParams = {
            'product': product,
            'activeTab': activeTab
        };
        this.viewProductDetailsEvent.emit(eventParams);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsListViewComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsListViewComponent.prototype, "product", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProductDetailsListViewComponent.prototype, "viewProductDetailsEvent", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsListViewComponent.prototype, "basketQuoteId", void 0);
    ProductDetailsListViewComponent = __decorate([
        core_1.Component({
            selector: 'product-details-listView',
            template: __webpack_require__("./src/app/product/components/product-details-listView.component.html"),
        }),
        __metadata("design:paramtypes", [router_1.Router, core_1.ElementRef,
            toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums,
            product_service_1.ProductService])
    ], ProductDetailsListViewComponent);
    return ProductDetailsListViewComponent;
}());
exports.ProductDetailsListViewComponent = ProductDetailsListViewComponent;
;


/***/ }),

/***/ "./src/app/product/components/product-details-tableView.component.html":
/***/ (function(module, exports) {

module.exports = "<!--<kendo-grid id=\"product-table-view\" [data]=\"gridViewData\" [skip]=\"skip\" [pageSize]=\"pageSize\" [pageable]=\"true\" (pageChange)=\"pageChange($event)\" style=\"height:480px;\">-->\r\n<kendo-grid id=\"product-table-view\" [data]=\"gridViewData\"\r\n            [skip]=\"skip\" [pageSize]=\"pageSize\" [pageable]=\"true\"\r\n            (pageChange)=\"pageChange($event)\" [height]=\"570\">\r\n\r\n    <kendo-grid-column field=\"product.name\" title=\"PRODUCT\" width=\"450\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <img class=\"product-image\" *ngIf=\"dataItem.product.image.hasImage\" src=\"{{dataItem.product.image.url}}\" style=\"width:32px;height:auto;\" />\r\n            <img class=\"product-image\" *ngIf=\"!dataItem.product.image.hasImage && dataItem.product.subProducts[0] && dataItem.product.subProducts[0].image.hasImage\" src=\"{{dataItem.product.subProducts[0].image.url}}\" style=\"width:32px;height:auto;\" />\r\n            <a (click)=\"productDetails($event, dataItem.product, 'product-overview')\">{{dataItem.product.name}}</a>\r\n\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column width=\"160\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"user.showPrices\">\r\n                <span [ngSwitch]=\"dataItem.product.productStatusTypeId\">\r\n                    <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.New\" style=\"color:blue; font-size:smaller;\">New</span>\r\n                    <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Active\" style=\"color:#38c638; font-size:smaller;\">Active</span>\r\n                    <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenModuleUnit\" style=\"color:red; font-size:smaller;\">Hidden</span>\r\n                    <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Inactive\" style=\"color:red; font-size:smaller;\">Inactive</span>\r\n                    <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Obsolete\" style=\"color:red; font-size:smaller;\">Obsolete</span>\r\n                    <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenSellable\" style=\"color:red; font-size:smaller;\">Hidden Sellable</span>\r\n                </span>\r\n                <span [ngSwitch]=\"dataItem.product.inventoryStatusId\">\r\n                    <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.Available\" style=\"color:black; background-color:#6df0af; padding:3px; font-size:smaller;\">Available</span>\r\n                    <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.ContactCSR\" style=\"color:black; background-color:#f7d38c; padding:3px; font-size:smaller;\">\r\n                        <span *ngIf=\"dataItem.product.productStatusTypeId == enums.ProductStatusTypeEnum.Active && dataItem.product.invAvailableDate != null && (user.businessTypeId == enums.BusinessTypeEnum.Daikin || user.businessTypeId == enums.BusinessTypeEnum.ManufacturerRep); else contactCSRBlock\">\r\n                            ETA: {{dataItem.product.invAvailableDate | date : 'shortDate'}}\r\n                        </span>\r\n                        <ng-template #contactCSRBlock>\r\n                            <span>Contact CSR</span>\r\n                        </ng-template>\r\n\r\n                    </span>\r\n                    <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.NotAvailable\" style=\"color:black; background-color:#ffcce6; padding:3px; font-size:smaller;\">Not Available</span>\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column field=\"product.productNumber\" title=\"MODEL NO.\" width=\"230\">\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column width=\"180\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <a (click)=\"productDetails($event, dataItem.product, 'product-overview')\" title=\"Product overview\"><img src=\"/v3/src/assets/images/RelatedDocumentsLinkIcon_Blue.png\"></a>\r\n            <a (click)=\"productDetails($event, dataItem.product, 'product-accessories')\" title=\"Product accessories\"><img src=\"/v3/src/assets/images/RelatedAccessoriesLinkIcon_Blue.png\"></a>\r\n            <a (click)=\"productDetails($event, dataItem.product, 'product-specs')\" title=\"Product specifications\"><img src=\"/v3/src/assets/images/TechDetailLInkIcon_blue.png\"></a>\r\n        </ng-template>\r\n\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column title=\"Quantity\" *ngIf=\"basketQuoteId != 0 && basketQuoteId != undefined\" width=\"100\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <product-quantity-input [(product)]=\"dataItem.product\"></product-quantity-input>\r\n            <!--<product-quantity-input [(quantity)]=\"dataItem.product.quantity\"></product-quantity-input>-->\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"userSvc.currentUser.showPrices\" field=\"product.price\" title=\"PRICE\" width=\"100\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span>{{dataItem.product.price | currency:'USD':true:'1.2-2'}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"SEERNonDucted\" title=\"SEER (Non-Ducted)\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitarySplitSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.UnitaryPackagedSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialSplitSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialPackagedSystem\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.seerNonDucted\">{{dataItem.product.specifications.all.seerNonDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"IEERNonDucted\" title=\"IEER (Non-Ducted)\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitarySplitSystem && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitaryPackagedSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialSplitSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialPackagedSystem\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.ieerNonDucted\">{{dataItem.product.specifications.all.ieerNonDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"EERNonDucted\" title=\"EER (Non-Ducted)\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitarySplitSystem && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitaryPackagedSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialSplitSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialPackagedSystem\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.eerNonDucted\">{{dataItem.product.specifications.all.eerNonDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"HSPFNonDucted\" title=\"HSPF (Non-Ducted)\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitarySplitSystem && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitaryPackagedSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialSplitSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialPackagedSystem\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.hspfNonDucted\">{{dataItem.product.specifications.all.hspfNonDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"COP47NonDucted\" title=\"COP47 (Non-Ducted)\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitarySplitSystem && dataItem.product.productFamilyId != enums.ProductFamilyEnum.UnitaryPackagedSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialSplitSystem && dataItem.product.productFamilyId != this.enums.ProductFamilyEnum.LightCommercialPackagedSystem\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.coP47NonDucted\">{{dataItem.product.specifications.all.coP47NonDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"SCHENonDucted\" title=\"SCHE (Non-Ducted)\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.scheNonDucted\">{{dataItem.product.specifications.all.scheNonDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <!--Unitary-->\r\n\r\n    <kendo-grid-column *ngIf=\"SEERDucted\" title=\"SEER (Ducted)\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" width=\"150\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null &&  (dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem)\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.seerDucted\">{{dataItem.product.specifications.all.seerDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"EERDucted\" title=\"EER (Ducted)\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" width=\"150\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null && (dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem)\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.eerDucted\">{{dataItem.product.specifications.all.eerDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"HSPFDucted\" title=\"HSPF (Ducted)\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" width=\"150\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null &&  (dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem)\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.hspfDucted\">{{dataItem.product.specifications.all.hspfDucted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"COP47Ducted\" title=\"COP47 (Ducted)\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" width=\"150\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null &&  (dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem || dataItem.product.productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem)\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.coP47Ducted\">{{dataItem.product.specifications.all.coP47Ducted.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"AFUE\" title=\"AFUE\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" width=\"150\">\r\n            <div *ngIf=\"dataItem.product.specifications.all != null\">\r\n                <span *ngIf=\"dataItem.product.specifications.all.afue\">{{dataItem.product.specifications.all.afue.value | number:'1.2-2'}}</span>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/product/components/product-details-tableView.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProductDetailsTableViewComponent = /** @class */ (function () {
    function ProductDetailsTableViewComponent(elementRef, toastrSvc, userSvc, enums, productSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        this.viewProductDetailsEvent = new core_1.EventEmitter();
        this.pageChangeEvt = new core_1.EventEmitter();
        this.SEERNonDucted = false;
        this.EERNonDucted = false;
        this.HSPFNonDucted = false;
        this.COP47NonDucted = false;
        this.IEERNonDucted = false;
        this.SCHENonDucted = false;
        this.SEERDucted = false;
        this.EERDucted = false;
        this.HSPFDucted = false;
        this.COP47Ducted = false;
        this.AFUE = false;
    }
    ProductDetailsTableViewComponent.prototype.ngOnChanges = function () {
        this.resetColumns();
        this.setupColumns();
    };
    ProductDetailsTableViewComponent.prototype.ngOnInit = function () { };
    ProductDetailsTableViewComponent.prototype.pageChange = function (event) {
        this.pageChangeEvt.emit(event);
    };
    ProductDetailsTableViewComponent.prototype.resetColumns = function () {
        this.SEERNonDucted = false;
        this.EERNonDucted = false;
        this.HSPFNonDucted = false;
        this.COP47NonDucted = false;
        this.IEERNonDucted = false;
        this.SCHENonDucted = false;
        this.SEERDucted = false;
        this.EERDucted = false;
        this.HSPFDucted = false;
        this.COP47Ducted = false;
        this.AFUE = false;
    };
    ProductDetailsTableViewComponent.prototype.setupColumns = function () {
        if ((this.productFamilyId == this.enums.ProductFamilyEnum.AlthermaSplit
            && (this.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor ||
                this.productModelTypeId == this.enums.ProductModelTypeEnum.All)) //Altherma
            || (this.productFamilyId == this.enums.ProductFamilyEnum.MultiSplit &&
                (this.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor ||
                    this.productModelTypeId == this.enums.ProductModelTypeEnum.All))) {
            this.SEERNonDucted = true;
            this.EERNonDucted = true;
            this.HSPFNonDucted = true;
            this.COP47NonDucted = true;
        }
        if (((this.productFamilyId == this.enums.ProductFamilyEnum.MiniSplit)
            && (this.productModelTypeId == this.enums.ProductModelTypeEnum.System ||
                this.productModelTypeId == this.enums.ProductModelTypeEnum.All)) || //Mini-Split
            ((this.productFamilyId == this.enums.ProductFamilyEnum.SkyAir)
                && (this.productModelTypeId == this.enums.ProductModelTypeEnum.System ||
                    this.productModelTypeId == this.enums.ProductModelTypeEnum.All))) {
            this.SEERNonDucted = true;
            this.EERNonDucted = true;
            this.HSPFNonDucted = true;
            this.COP47NonDucted = true;
        }
        // MultiSplit/VRV/SkyAir/MiniSplit - Indoor
        if ((this.productFamilyId == this.enums.ProductFamilyEnum.VRV
            && this.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) ||
            (this.productFamilyId == this.enums.ProductFamilyEnum.MultiSplit
                && this.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) ||
            (this.productFamilyId == this.enums.ProductFamilyEnum.MiniSplit
                && (this.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor)) ||
            (this.productFamilyId == this.enums.ProductFamilyEnum.SkyAir
                && (this.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor))) {
            //Show nothing
        }
        if (this.productFamilyId == this.enums.ProductFamilyEnum.VRV
            && (this.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor ||
                this.productModelTypeId == this.enums.ProductModelTypeEnum.All)) {
            this.IEERNonDucted = true;
            this.EERNonDucted = true;
            this.COP47NonDucted = true;
            this.SCHENonDucted = true;
        }
        //MiniSplit SkyAir Indoor
        if ((this.productFamilyId == this.enums.ProductFamilyEnum.MiniSplit &&
            this.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) ||
            (this.productFamilyId == this.enums.ProductFamilyEnum.SkyAir &&
                this.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor)) {
            this.SEERNonDucted = false;
            this.EERNonDucted = false;
            this.HSPFNonDucted = false;
            this.COP47NonDucted = false;
        }
        if (this.productFamilyId == this.enums.ProductFamilyEnum.UnitarySplitSystem) {
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.SplitAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.SplitHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.AirHandler ||
                this.productClassPIMId == this.enums.ProductClassPIMEnum.Coil) {
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.GasFurnace) {
                this.AFUE = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
        }
        if (this.productFamilyId == this.enums.ProductFamilyEnum.UnitaryPackagedSystem) {
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.PackageAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.PackagedHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.PackagedGED) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
        }
        if (this.productFamilyId == this.enums.ProductFamilyEnum.LightCommercialSplitSystem) {
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.LightCommercialPackagedAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.LightCommercialPackagedHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.AirHandler) {
            }
            if (this.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                //this.AFUEDucted = true;
            }
        }
    };
    ProductDetailsTableViewComponent.prototype.validateQuantity = function (event) {
        var s = 0;
        //if (this.valueAsNumber < 0) {
        //            this.valueAsNumber = 0;
        //            self.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        //        } else if (Math.floor(this.valueAsNumber) != this.valueAsNumber) {
        //            this.valueAsNumber = 0;
        //            self.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        //        }
        //        else {
        //            self.product.quantity = this.valueAsNumber;
        //        }
    };
    ProductDetailsTableViewComponent.prototype.productDetails = function (event, product, activeTab) {
        var eventParams = {
            'product': product,
            'activeTab': activeTab
        };
        this.viewProductDetailsEvent.emit(eventParams);
    };
    ProductDetailsTableViewComponent.prototype.ngAfterViewChecked = function () {
        //var self = this;
        //var element = this.elementRef.nativeElement;
        //numeric text box
        //var numericTextBox = jQuery(element).find(".numericTextBox");
        //if (numericTextBox[0] != undefined) {
        //    jQuery(numericTextBox[0]).change(function () {
        //        if (this.valueAsNumber < 0) {
        //            this.valueAsNumber = 0;
        //            self.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        //        } else if (Math.floor(this.valueAsNumber) != this.valueAsNumber) {
        //            this.valueAsNumber = 0;
        //            self.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        //        }
        //        else {
        //            self.product.quantity = this.valueAsNumber;
        //        }
        //    });
        //}
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "productFamilyId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "productModelTypeId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "unitInstallationTypeId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "productClassPIMId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "gridViewData", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "skip", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "pageSize", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProductDetailsTableViewComponent.prototype, "viewProductDetailsEvent", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProductDetailsTableViewComponent.prototype, "pageChangeEvt", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductDetailsTableViewComponent.prototype, "basketQuoteId", void 0);
    ProductDetailsTableViewComponent = __decorate([
        core_1.Component({
            selector: 'product-details-tableView',
            template: __webpack_require__("./src/app/product/components/product-details-tableView.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService,
            enums_1.Enums,
            product_service_1.ProductService])
    ], ProductDetailsTableViewComponent);
    return ProductDetailsTableViewComponent;
}());
exports.ProductDetailsTableViewComponent = ProductDetailsTableViewComponent;
;


/***/ }),

/***/ "./src/app/product/components/product-image.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\r\n    <div class=\"sub-product-img-container\" style=\"width:150px; height:135px;\" >\r\n        <span *ngIf=\"images.length == 0\">\r\n            <!--<img width=\"135\" height=\"100\" src=\"/Images/NoImage.png\" class=\"sub-product-img\"/>-->\r\n            <img src=\"/v3/src/assets/images/NoImage.png\" class=\"sub-product-img no-image\" style=\"width:145px; height:110px;\" />\r\n        </span>\r\n        <span *ngIf=\"images.length > 0\">\r\n            <span *ngFor=\"let image of images ; let idx = index\">\r\n                <img id=\"img-{{product.productNumber}}-{{idx}}\" src=\"{{image.url}}\" class=\"sub-product-img\" style=\"width:145px; height:110px;\" [ngClass]=\"{hidden : idx > 0}\" />\r\n            </span>\r\n        </span>\r\n        \r\n        <div *ngIf=\"images.length > 1\" style=\"text-align:center\">\r\n            <span *ngFor=\"let image of images ; let idx = index\">\r\n                <button id=\"img-btn-{{product.productNumber}}-{{idx}}\" class=\"product-img-btn\" [ngClass]=\"{active : idx == 0}\"></button>\r\n            </span>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!--[ngStyle]=\"{'display': idx > 0 ? 'none': 'block'}\"-->\r\n"

/***/ }),

/***/ "./src/app/product/components/product-image.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProductImageComponent = /** @class */ (function () {
    function ProductImageComponent(toastrSvc, userSvc, productSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.images = [];
    }
    ProductImageComponent.prototype.ngOnChanges = function () {
        this.images = [];
        if (this.product.image.hasImage) {
            this.images.push(this.product.image);
        }
        if (this.product.subProducts.length > 0) {
            for (var i = 0; i < this.product.subProducts.length; i++) {
                this.images.push(this.product.subProducts[i].image);
            }
        }
    };
    ProductImageComponent.prototype.ngOnInit = function () {
    };
    ProductImageComponent.prototype.ngAfterViewInit = function () {
        this.setupImageToggleBtn();
    };
    ProductImageComponent.prototype.ngAfterViewChecked = function () {
    };
    ProductImageComponent.prototype.setupImageToggleBtn = function () {
        jQuery(".product-img-btn").click(function (event) {
            //get productNumberIdx
            var targetId = event.target.id; // ex: "img-btn-FDXS09LVJURXS09LVJU-0"
            var productNumberIdx = targetId.substring(8, targetId.length);
            //find sub-product Imgabe Id by productNumberIdx
            var imgBtn = jQuery(event.target);
            //imgBtn.addClass("active");
            var parentDiv = imgBtn.parents(".sub-product-img-container");
            var imgId = "img-" + productNumberIdx;
            //var img = jQuery(parentDiv).find(imgId)[0];
            var subProductImgaes = jQuery(parentDiv).find(".sub-product-img");
            for (var i = 0; i < subProductImgaes.length; i++) {
                if (subProductImgaes[i].id == imgId) {
                    jQuery(subProductImgaes[i]).removeClass("hidden");
                }
                else {
                    jQuery(subProductImgaes[i]).addClass("hidden");
                }
            }
            var imgBtns = jQuery(parentDiv).find(".product-img-btn");
            jQuery(imgBtns).removeClass("active");
            imgBtn.addClass("active");
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductImageComponent.prototype, "product", void 0);
    ProductImageComponent = __decorate([
        core_1.Component({
            selector: 'product-image',
            template: __webpack_require__("./src/app/product/components/product-image.component.html"),
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, user_service_1.UserService,
            product_service_1.ProductService])
    ], ProductImageComponent);
    return ProductImageComponent;
}());
exports.ProductImageComponent = ProductImageComponent;
;


/***/ }),

/***/ "./src/app/product/components/product-quantity-add.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"productQtyContainer\">\r\n    <div>Quantity</div>\r\n    <product-quantity-input [(product)]=\"product\"></product-quantity-input>\r\n    <div>\r\n        <button class=\"btn btn-primary\" style=\"margin:5px;\" (click)=\"addProductToQuote()\">Add</button>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/product/components/product-quantity-add.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var ProductQuantityAddComponent = /** @class */ (function () {
    function ProductQuantityAddComponent(toastrSvc, userSvc, productSvc, basketSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
    }
    ProductQuantityAddComponent.prototype.ngOnInit = function () {
    };
    ProductQuantityAddComponent.prototype.addProductToQuote = function () {
        var _this = this;
        var self = this;
        if (this.product.quantity > 0) {
            var data = {
                "ProductId": this.product.productId,
                "Quantity": this.product.quantity
            };
            this.blockUI.start('Loading...');
            //self.loadingIconSvc.Start(jQuery("#productPageContainer"));
            this.productSvc.addProductToQuote(data).then(function (resp) {
                _this.blockUI.stop();
                // self.loadingIconSvc.Stop(jQuery("#productPageContainer"));
                _this.product.quantity = 0;
                self.basketSvc.getBasket().then(function (resp) {
                    if (resp.isok) {
                        //self.userBasket = resp.model;
                        self.basketSvc.userBasket = resp.model;
                        jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
                    }
                });
                self.toastrSvc.displayResponseMessages(resp);
            });
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductQuantityAddComponent.prototype, "product", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProductQuantityAddComponent.prototype, "blockUI", void 0);
    ProductQuantityAddComponent = __decorate([
        core_1.Component({
            selector: 'product-quantity-add',
            template: __webpack_require__("./src/app/product/components/product-quantity-add.component.html"),
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], ProductQuantityAddComponent);
    return ProductQuantityAddComponent;
}());
exports.ProductQuantityAddComponent = ProductQuantityAddComponent;
;


/***/ }),

/***/ "./src/app/product/components/product-quantity-input.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<input class=\"numericTextBox productQuantity\" type=\"number\" [(ngModel)]=\"product.quantity\" (change)=\"validateQuantity($event)\" min=\"0\" step=\"1\" style=\"width:70px; line-height:30px; font-size:1.2em; text-align: center;\" />\r\n<!--<input class=\"numericTextBox productQuantity\" type=\"number\" [(ngModel)]=\"quantity\" (change)=\"validateQuantity($event)\" min=\"0\" step=\"1\" style=\"width:70px; line-height:30px; font-size:1.2em; text-align: center;\" />-->\r\n"

/***/ }),

/***/ "./src/app/product/components/product-quantity-input.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProductQuantityInputComponent = /** @class */ (function () {
    //@Input() quantity: any;
    function ProductQuantityInputComponent(toastrSvc, userSvc, productSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
    }
    ProductQuantityInputComponent.prototype.ngOnInit = function () {
    };
    ProductQuantityInputComponent.prototype.validateQuantity = function (event) {
        var value = parseFloat(event.target.value);
        if (value == null || isNaN(value)) {
            this.product.quantity = 0;
            event.target.value = 0;
        }
        else if ((value < 0) || (Math.floor(value) != value)) {
            this.product.quantity = 0;
            event.target.value = 0;
            this.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductQuantityInputComponent.prototype, "product", void 0);
    ProductQuantityInputComponent = __decorate([
        core_1.Component({
            selector: 'product-quantity-input',
            template: __webpack_require__("./src/app/product/components/product-quantity-input.component.html"),
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, user_service_1.UserService,
            product_service_1.ProductService])
    ], ProductQuantityInputComponent);
    return ProductQuantityInputComponent;
}());
exports.ProductQuantityInputComponent = ProductQuantityInputComponent;
;


/***/ }),

/***/ "./src/app/product/components/product-spec-bars.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"product.specifications.all != null\">\r\n    <div *ngIf=\"SEERNonDucted\">\r\n        <div *ngIf=\"product.specifications.all.seerNonDucted\">SEER (Non-Ducted):<span class=\"pull-right\">{{product.specifications.all.seerNonDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"seerRatingBar\"></div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"IEERNonDucted\">\r\n        <div *ngIf=\"product.specifications.all.ieerNonDucted\">IEER (Non-Ducted):<span class=\"pull-right\">{{product.specifications.all.ieerNonDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"ieerRatingBar\"></div>\r\n    </div>\r\n\r\n    <div *ngIf=\"EERNonDucted\">\r\n        <div *ngIf=\"product.specifications.all.eerNonDucted\">EER (Non-Ducted):<span class=\"pull-right\">{{product.specifications.all.eerNonDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"eerRatingBar\"></div>\r\n    </div>\r\n\r\n    <div *ngIf=\"HSPFNonDucted\">\r\n        <div *ngIf=\"product.specifications.all.hspfNonDucted\">HSPF (Non-Ducted):<span class=\"pull-right\">{{product.specifications.all.hspfNonDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"hspfRatingBar\"></div>\r\n    </div>\r\n\r\n    <div *ngIf=\"COP47NonDucted\">\r\n        <div *ngIf=\"product.specifications.all.coP47NonDucted\">COP47 (Non-Ducted):<span class=\"pull-right\">{{product.specifications.all.coP47NonDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"cop47RatingBar\"></div>\r\n    </div>\r\n    \r\n  \r\n    <div *ngIf=\"SCHENonDucted\">\r\n        <div *ngIf=\"product.specifications.all.scheNonDucted\">SCHE(Non-Ducted):<span class=\"pull-right\">{{product.specifications.all.scheNonDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"scheRatingBar\"></div>\r\n    </div>\r\n\r\n    <div *ngIf=\"SEERDucted\">\r\n        <div *ngIf=\"product.specifications.all.seerDucted\">SEER (Ducted):<span class=\"pull-right\">{{product.specifications.all.seerDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"seerRatingBarDucted\"></div>\r\n    </div>\r\n    <div *ngIf=\"EERDucted\">\r\n        <div *ngIf=\"product.specifications.all.eerDucted\">EER (Ducted):<span class=\"pull-right\">{{product.specifications.all.eerDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"eerRatingBarDucted\"></div>\r\n    </div>\r\n    <div *ngIf=\"HSPFDucted\">\r\n        <div *ngIf=\"product.specifications.all.hspfDucted\">HSPF (Ducted):<span class=\"pull-right\">{{product.specifications.all.hspfDucted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"hspfRatingBarDucted\"></div>\r\n    </div>\r\n    <div *ngIf=\"COP47Ducted\">\r\n        <div *ngIf=\"product.specifications.all.coP47Ducted\">COP47 (Ducted):<span class=\"pull-right\">{{product.specifications.all.coP47Ducted.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"cop47RatingBarDucted\"></div>\r\n    </div>\r\n    <div *ngIf=\"AFUE\">\r\n        <div *ngIf=\"product.specifications.all.afue\">AFUE:<span class=\"pull-right\">{{product.specifications.all.afue.value | number:'1.2-2'}}</span></div>\r\n        <div class=\"afueRatingBar\"></div>\r\n    </div>\r\n    \r\n        \r\n</div>"

/***/ }),

/***/ "./src/app/product/components/product-spec-bars.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProductSpecBarsComponent = /** @class */ (function () {
    function ProductSpecBarsComponent(elementRef, toastrSvc, userSvc, enums, productSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        //@Input() userBasket: any;
        this.SEERNonDucted = false;
        this.EERNonDucted = false;
        this.HSPFNonDucted = false;
        this.COP47NonDucted = false;
        this.IEERNonDucted = false;
        this.SCHENonDucted = false;
        this.SEERDucted = false;
        this.EERDucted = false;
        this.HSPFDucted = false;
        this.COP47Ducted = false;
        this.AFUE = false;
    }
    ProductSpecBarsComponent.prototype.ngOnChanges = function () {
        this.resetColumns();
        this.setupColumns();
    };
    ProductSpecBarsComponent.prototype.ngOnInit = function () {
        setTimeout(this.setupSpecBars.bind(this), 200); // wait 0.2 sec
    };
    ProductSpecBarsComponent.prototype.setupSpecBars = function () {
        var self = this;
        var element = this.elementRef.nativeElement;
        var seerRatingBar = jQuery(element).find(".seerRatingBar");
        if (seerRatingBar[0] != undefined && this.product.specifications.all.seerNonDucted) {
            jQuery(seerRatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 40,
                value: this.product.specifications.all.seerNonDucted.value
            });
        }
        var scheRatingBar = jQuery(element).find(".scheRatingBar");
        if (scheRatingBar[0] != undefined && this.product.specifications.all.scheNonDucted) {
            jQuery(scheRatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 35,
                value: this.product.specifications.all.scheNonDucted.value
            });
        }
        var ieerRatingBar = jQuery(element).find(".ieerRatingBar");
        if (ieerRatingBar[0] != undefined && this.product.specifications.all.ieerNonDucted) {
            jQuery(ieerRatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 40,
                value: this.product.specifications.all.ieerNonDucted.value
            });
        }
        var eerRatingBar = jQuery(element).find(".eerRatingBar");
        if (eerRatingBar[0] != undefined && this.product.specifications.all.eerNonDucted) {
            jQuery(eerRatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 20,
                value: this.product.specifications.all.eerNonDucted.value
            });
        }
        var hspfRatingBar = jQuery(element).find(".hspfRatingBar");
        if (hspfRatingBar[0] != undefined && this.product.specifications.all.hspfNonDucted) {
            jQuery(hspfRatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 20,
                value: this.product.specifications.all.hspfNonDucted.value
            });
        }
        var cop47RatingBar = jQuery(element).find(".cop47RatingBar");
        if (cop47RatingBar[0] != undefined && this.product.specifications.all.coP47NonDucted) {
            jQuery(cop47RatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 10,
                value: this.product.specifications.all.coP47NonDucted.value
            });
        }
        var afueRatingBar = jQuery(element).find(".afueRatingBar");
        if (afueRatingBar[0] != undefined && this.product.specifications.all.afue) {
            jQuery(afueRatingBar[0]).kendoProgressBar({
                showStatus: false,
                max: 100,
                value: this.product.specifications.all.afue.value
            });
        }
        //Unitary
        if (self.product.productFamilyId == this.enums.ProductFamilyEnum.UnitarySplitSystem || self.product.productFamilyId == this.enums.ProductFamilyEnum.UnitaryPackagedSystem || self.product.productFamilyId == this.enums.ProductFamilyEnum.LightCommercialSplitSystem || self.product.productFamilyId == this.enums.ProductFamilyEnum.LightCommercialPackagedSystem) {
            var seerRatingBarDucted = jQuery(element).find(".seerRatingBarDucted");
            if (seerRatingBarDucted[0] != undefined && this.product.specifications.all.seerDucted) {
                jQuery(seerRatingBarDucted[0]).kendoProgressBar({
                    showStatus: false,
                    max: 40,
                    value: this.product.specifications.all.seerDucted.value
                });
            }
            var ieerRatingBarDucted = jQuery(element).find(".ieerRatingBarDucted");
            if (ieerRatingBarDucted[0] != undefined && this.product.specifications.all.ieerDucted) {
                jQuery(ieerRatingBarDucted[0]).kendoProgressBar({
                    showStatus: false,
                    max: 40,
                    value: this.product.specifications.all.ieerDucted.value
                });
            }
            var eerRatingBarDucted = jQuery(element).find(".eerRatingBarDucted");
            if (eerRatingBarDucted[0] != undefined && this.product.specifications.all.eerDucted) {
                jQuery(eerRatingBarDucted[0]).kendoProgressBar({
                    showStatus: false,
                    max: 20,
                    value: this.product.specifications.all.eerDucted.value
                });
            }
            var hspfRatingBarDucted = jQuery(element).find(".hspfRatingBarDucted");
            if (hspfRatingBarDucted[0] != undefined && this.product.specifications.all.hspfDucted) {
                jQuery(hspfRatingBarDucted[0]).kendoProgressBar({
                    showStatus: false,
                    max: 20,
                    value: this.product.specifications.all.hspfDucted.value
                });
            }
            var cop47RatingBarDucted = jQuery(element).find(".cop47RatingBarDucted");
            if (cop47RatingBarDucted[0] != undefined && this.product.specifications.all.coP47Ducted) {
                jQuery(cop47RatingBarDucted[0]).kendoProgressBar({
                    showStatus: false,
                    max: 10,
                    value: this.product.specifications.all.coP47Ducted.value
                });
            }
        }
    };
    ProductSpecBarsComponent.prototype.resetColumns = function () {
        this.SEERNonDucted = false;
        this.EERNonDucted = false;
        this.HSPFNonDucted = false;
        this.COP47NonDucted = false;
        this.IEERNonDucted = false;
        this.SCHENonDucted = false;
        this.SEERDucted = false;
        this.EERDucted = false;
        this.HSPFDucted = false;
        this.COP47Ducted = false;
        this.AFUE = false;
    };
    ProductSpecBarsComponent.prototype.setupColumns = function () {
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.MiniSplit //Mini-Split
            || (this.product.productFamilyId == this.enums.ProductFamilyEnum.AlthermaSplit && (this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || this.product.productModelTypeId == this.enums.ProductModelTypeEnum.All)) //Altherma
            || (this.product.productFamilyId == this.enums.ProductFamilyEnum.MultiSplit && (this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || this.product.productModelTypeId == this.enums.ProductModelTypeEnum.All)) //MultiSplit - Outdoor/All
            || this.product.productFamilyId == this.enums.ProductFamilyEnum.SkyAir) {
            this.SEERNonDucted = true;
            this.EERNonDucted = true;
            this.HSPFNonDucted = true;
            this.COP47NonDucted = true;
        }
        if ((this.product.productFamilyId == this.enums.ProductFamilyEnum.VRV || this.product.productFamilyId == this.enums.ProductFamilyEnum.MultiSplit) && this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) {
            //Show nothing
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.VRV && (this.product.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || this.product.productModelTypeId == this.enums.ProductModelTypeEnum.All)) {
            this.IEERNonDucted = true;
            this.EERNonDucted = true;
            this.COP47NonDucted = true;
            this.SCHENonDucted = true;
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.UnitarySplitSystem) {
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.SplitAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.SplitHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.AirHandler || this.product.productClassPIMId == this.enums.ProductClassPIMEnum.Coil) {
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.GasFurnace) {
                this.AFUE = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.UnitaryPackagedSystem) {
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.PackageAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.PackagedHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.PackagedGED) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.AFUE = true;
                if (this.product.productEnergySourceTypeId = this.enums.ProductEnergySourceTypeEnum.DualFuel) {
                    this.HSPFDucted = true;
                    this.COP47Ducted = true;
                }
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                this.AFUE = true;
            }
        }
        if (this.product.productFamilyId == this.enums.ProductFamilyEnum.LightCommercialSplitSystem) {
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.LightCommercialPackagedAC) {
                this.SEERDucted = true;
                this.EERDucted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.LightCommercialPackagedHP) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.AirHandler) {
            }
            if (this.product.productClassPIMId == this.enums.ProductClassPIMEnum.All) {
                this.SEERDucted = true;
                this.EERDucted = true;
                this.HSPFDucted = true;
                this.COP47Ducted = true;
                //this.AFUEDucted = true;
            }
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductSpecBarsComponent.prototype, "product", void 0);
    ProductSpecBarsComponent = __decorate([
        core_1.Component({
            selector: 'product-spec-bars',
            template: __webpack_require__("./src/app/product/components/product-spec-bars.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums,
            product_service_1.ProductService])
    ], ProductSpecBarsComponent);
    return ProductSpecBarsComponent;
}());
exports.ProductSpecBarsComponent = ProductSpecBarsComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/product-accessories.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"product.accessories.length == 0\">\r\n    No Related Accessories\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin border-bottom-row accessory-list-row\" *ngFor=\"let item of product.accessories ; let idx = index\">\r\n\r\n    <!--Only Internal users (Daikin Employees) can see Hidden Unit-->\r\n    <div *ngIf=\"item.accessory.productStatusTypeId != enums.ProductStatusTypeEnum.HiddenModuleUnit || currentUser.userTypeId >= 100\">\r\n        \r\n        <div class=\"col col-md-3 product-image no-padding\" style=\"height:130px;\">\r\n            <img src=\"{{item.accessory.image.url}}\" style=\"width:130px; height:110px;\" class=\"sub-product-img\" />\r\n        </div>\r\n\r\n        <div class=\"product-info\" [ngClass]=\"{'col col-md-7' : quoteId != 0 && quoteId != undefined, 'col col-md-9' : quoteId == 0 || quoteId == undefined}\" style=\"background-color:none\">\r\n            <div>\r\n                <a (click)=\"accessoryDetails($event, item.accessory)\" class=\"product-link\">  {{item.accessory.name}}</a>\r\n            </div>\r\n            <div>\r\n                <span class=\"as-lnk\">Model No.: </span> <span class=\"pull-right\"> {{item.accessory.productNumber}}</span>\r\n            </div>\r\n            <div *ngIf=\"showPrices\">\r\n                <span class=\"as-lnk\">Price: </span> <span class=\"pull-right\"> {{item.accessory.price | currency:'USD':true:'1.2-2'}}</span>\r\n            </div>\r\n            <div>\r\n                <span class=\"as-lnk\">Quantity required: </span> <span class=\"pull-right\"> {{item.quantity}}</span>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div *ngIf=\"quoteId != 0 && quoteId != undefined\" class=\"col col-md-2 product-qty no-padding\" style=\"text-align:center\">\r\n\r\n            <product-quantity-add [product]=\"item.accessory\"></product-quantity-add>\r\n        </div>\r\n    </div>\r\n   \r\n</div>"

/***/ }),

/***/ "./src/app/product/components/productDetails/product-accessories.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var ProductAccessoriesComponent = /** @class */ (function () {
    function ProductAccessoriesComponent(router, toastrSvc, userSvc, enums, productSvc, basketSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.showPrices = false;
    }
    ProductAccessoriesComponent.prototype.ngOnChanges = function () {
        if (this.userBasket != undefined) {
            this.quoteId = this.userBasket.quoteId;
        }
        if (this.currentUser != undefined) {
            this.showPrices = this.currentUser.showPrices;
        }
    };
    ProductAccessoriesComponent.prototype.ngOnInit = function () { };
    ProductAccessoriesComponent.prototype.accessoryDetails = function (event, accessory) {
        this.productSvc.product = accessory;
        this.router.navigate(['/product', { outlets: { 'productDetails': [accessory.productId] } }], { queryParams: { activeTab: 'product-overview' } });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProductAccessoriesComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductAccessoriesComponent.prototype, "product", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductAccessoriesComponent.prototype, "userBasket", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductAccessoriesComponent.prototype, "currentUser", void 0);
    ProductAccessoriesComponent = __decorate([
        core_1.Component({
            selector: 'product-accessories',
            template: __webpack_require__("./src/app/product/components/productDetails/product-accessories.component.html"),
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], ProductAccessoriesComponent);
    return ProductAccessoriesComponent;
}());
exports.ProductAccessoriesComponent = ProductAccessoriesComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/product-details.component.html":
/***/ (function(module, exports) {

module.exports = "<div style=\"margin-bottom:50px;\">\r\n    <h1 *ngIf=\"product\">{{product.name}}</h1>\r\n\r\n    <div class=\"scrollmenu\" id=\"productDetailsTabs\">\r\n        <ul class=\"sub-tab-bar\">\r\n            <li id=\"product-overview\" class=\"active\"> <a> OVERVIEW </a> </li>\r\n            <li id=\"product-accessories\"> <a> RELATED ACCESSORIES </a> </li>\r\n            <li id=\"product-specs\"> <a> TECHNICAL SPECIFICATIONS </a> </li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\n    <!--Overview Tab-->\r\n    <div id=\"productOverviewTab\" *ngIf=\"product\" class=\"sub-tab-view\">\r\n        <product-overview [product]=\"product\" [userBasket]=\"userBasket\" [currentUser]=\"currentUser\"></product-overview>\r\n    </div>\r\n\r\n    <!--Related Accessories / Parent Products Tab-->\r\n    <div id=\"productRelatedAccessoriesTab\" *ngIf=\"product\" class=\"sub-tab-view accessory-list-view\" style=\"display:none;\">\r\n        <!--General Product-->\r\n        <div *ngIf=\"!product.isSystem && product.productModelTypeId != enums.ProductModelTypeEnum.Accessory\">\r\n            <product-accessories [product]=\"product\" [userBasket]=\"userBasket\" [currentUser]=\"currentUser\"></product-accessories>\r\n        </div>\r\n        <!--System Product-->\r\n        <div *ngIf=\"product.isSystem\">\r\n            <div class=\"sort-filter-container\" *ngIf=\"product.isSystem\" id=\"accessoryFilters\">\r\n                <div class=\"type-opts\">\r\n                    <label>Showing:&nbsp;</label>\r\n                    <input type=\"radio\" name=\"accessory-filter-type\" value=\"all\" checked />\r\n                    <label>All</label>\r\n                    <input type=\"radio\" name=\"accessory-filter-type\" value=\"indoor\" />\r\n                    <label>Indoor</label>\r\n                    <input type=\"radio\" name=\"accessory-filter-type\" value=\"outdoor\" />\r\n                    <label>Outdoor</label>\r\n                </div>\r\n            </div>\r\n            <div id=\"indoorAccessories\">\r\n                <product-accessories [product]=\"relatedIndoorUnit\" [userBasket]=\"userBasket\" [currentUser]=\"currentUser\"></product-accessories>\r\n            </div>\r\n            <div id=\"outdoorAccessories\">\r\n                <product-accessories [product]=\"relatedOutdoorUnit\" [userBasket]=\"userBasket\" [currentUser]=\"currentUser\"></product-accessories>\r\n            </div>\r\n        </div>\r\n\r\n        <!--Accessories Product-->\r\n        <div *ngIf=\"product.productModelTypeId == enums.ProductModelTypeEnum.Accessory\">\r\n\r\n            <div class=\"row row-nomargin border-bottom-row accessory-list-row\" *ngFor=\"let item of product.parentProducts ; let idx = index\">\r\n\r\n                <div class=\"col col-md-2 product-image no-padding\" style=\"height:130px;\">\r\n                    <img src=\"{{item.image.url}}\" width=\"150\" height=\"130\" class=\"sub-product-img\" />\r\n                </div>\r\n\r\n                <div *ngIf=\"userBasket\" class=\"product-info\" [ngClass]=\"{'col-md-8' : userBasket.basketQuoteId != 0 && userBasket.basketQuoteId != undefined, 'col-md-10' : userBasket.basketQuoteId == 0 || userBasket.basketQuoteId == undefined}\" style=\"background-color:none\">\r\n                    <div>\r\n                        <a (click)=\"productDetails($event, item)\" class=\"product-link\">  {{item.name}}</a>\r\n                    </div>\r\n                    <div>\r\n                        <span class=\"as-lnk\">Model No.: </span> <span class=\"pull-right\"> {{item.productNumber}}</span>\r\n                    </div>\r\n                    <div *ngIf=\"showPrices\">\r\n\r\n                        <span class=\"as-lnk\">Price: </span> <span class=\"pull-right\"> {{item.price | currency:'USD':true:'1.2-2'}}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!--Technical Specs Tabs-->\r\n    <div id=\"productSpecsTab\" *ngIf=\"product\" class=\"sub-tab-view dk-list-grey\" style=\"display:none;\">\r\n      \r\n\r\n        <div *ngIf=\"!product.isSystem\">\r\n            \r\n            <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.Controllers \r\n                || product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.RTU\r\n                || product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.Packaged\">\r\n\r\n                <!--<technical-specifications [specifications]=\"product.specifications\" [userBasket]=\"userBasket\"></technical-specifications>-->\r\n                <!--<div>General Product</div>-->\r\n                <div id=\"technical-specs\"></div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"product.isSystem\">\r\n            \r\n            <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.Controllers\r\n                || product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.RTU\r\n                || product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.Packaged\">\r\n                <!--<technical-specifications [specifications]=\"product.specifications\" [userBasket]=\"userBasket\"></technical-specifications>-->\r\n                <!--<div>System Product</div>-->\r\n                <div id=\"technical-specs\"></div>\r\n            </div>\r\n        </div>\r\n               \r\n\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.Accessories\">\r\n            <!--<div>Accessories</div>-->\r\n            <technical-specifications-accessories [product]=\"product\" [userBasket]=\"userBasket\"></technical-specifications-accessories>\r\n\r\n        </div>\r\n\r\n        <div *ngIf=\"product.submittalSheetTypeId == 1\">\r\n            <!--<div>Other</div>-->\r\n            <technical-specifications-other [product]=\"product\" [userBasket]=\"userBasket\"></technical-specifications-other>\r\n        </div>\r\n\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.SystemHP\">\r\n            <!--<div>System HP</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n           \r\n        </div>\r\n\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.SystemCooling\">\r\n            <!--<div>System cooling</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.MultiSplitIndoor || Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.VRVIndoor)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.MultiSplitIndoor || product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.VRVIndoor\">\r\n            <!--<div>MultiSplitIndoor || VRVIndoor</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n                     \r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.MultiSplitOutdoor)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.MultiSplitOutdoor\">\r\n            <!--<div>MultiSplitOutdoor</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n            \r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.VRVIIIAirCooled)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.VRVIIIAirCooled\">\r\n            <!--<div>VRVIIIAirCooled</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.VRVIIIWaterCooled)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.VRVIIIWaterCooled\">\r\n            <!--<div>VRVIIIWaterCooled</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.ACAndHP)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.ACAndHP\">\r\n            <!--<div>ACAndHP</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CoilsAndAirHandler)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.CoilsAirHandlers\">\r\n            <!--<div>CoilsAirHandlers</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.GasFurnace)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.GasFurnace\">\r\n            <!--<div>GasFurnace</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CommercialACAndHP)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.CommercialACAndHP\">\r\n            <!--<div>CommercialACAndHP</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CommercialAH)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.CommercialAH\">\r\n            <!--<div>CommercialAH</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedACAndHP)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.PackagedACAndHP\">\r\n            <!--<div>PackagedACAndHP</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedDualFuel)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.PackagedDF\">\r\n            <!--<div>PackagedDF</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n\r\n        <!--if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedGasElectric)-->\r\n        <div *ngIf=\"product.submittalSheetTypeId == enums.SubmittalSheetTypeEnum.PackagedGE\">\r\n            <!--<div>PackagedGE</div>-->\r\n            <div id=\"technical-specs\">Template</div>\r\n\r\n        </div>\r\n\r\n        <!--<div>{{product.submittalSheetTypeId}}</div>-->\r\n\r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productDetails/product-details.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var ProductDetailsComponent = /** @class */ (function () {
    function ProductDetailsComponent(router, route, toastrSvc, userSvc, enums, productSvc, basketSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.showPrices = false;
    }
    ProductDetailsComponent.prototype.ngOnChange = function () {
        //console.log("ProductDetail Component: ngOnChange");
    };
    ProductDetailsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.product = null; // this is to invoke change detection
            var data = {
                "ProductId": params.id,
            };
            _this.productSvc.getProduct(data).then(_this.GetProductCallback.bind(_this));
        });
        if (this.basketSvc.userBasket == undefined) {
            this.basketSvc.getBasket().then(this.getBasketCallback.bind(this));
        }
        else {
            this.userBasket = this.basketSvc.userBasket;
        }
        if (this.userSvc.currentUser == undefined) {
            this.userSvc.getCurrentUser().then(function (resp) {
                if (resp.isok) {
                    _this.userSvc.currentUser = resp.model;
                    _this.currentUser = resp.model;
                    _this.showPrices = _this.userSvc.currentUser.showPrices;
                }
            });
        }
        else {
            this.currentUser = this.userSvc.currentUser;
        }
    };
    ProductDetailsComponent.prototype.ngAfterContentInit = function () {
        //console.log("product Detail: ngAfterContentInit");
    };
    ProductDetailsComponent.prototype.ngAfterContentChecked = function () {
        //console.log("product Detail: ngAfterContentChecked");
    };
    ProductDetailsComponent.prototype.ngAfterViewInit = function () {
        //console.log("product Detail: ngAfterViewInit");
        //this.route.queryParams.subscribe((params: { tab: string }) => {
        //    var subTabId = '#' + params.tab;
        //    $(subTabId).click();
        //});
    };
    ProductDetailsComponent.prototype.ngAfterViewChecked = function () {
        //console.log("product Detail: ngAfterViewChecked");
        if (jQuery('#accessoryFilters').length) {
            jQuery('input[name="accessory-filter-type"]').on('change', function () {
                jQuery('#indoorAccessories, #outdoorAccessories').hide();
                switch (jQuery(this).val()) {
                    case "indoor":
                        jQuery('#indoorAccessories').show();
                        break;
                    case "outdoor":
                        jQuery('#outdoorAccessories').show();
                        break;
                    default:
                        jQuery('#indoorAccessories, #outdoorAccessories').show();
                }
            });
        }
    };
    ProductDetailsComponent.prototype.setupActiveTab = function () {
        //Product family tabs
        jQuery('.productFamilyTab li').each(function () {
            jQuery(this).removeClass('active');
        });
        if (this.product.productFamilyId != null) {
            var activeFamilyTabId = "#product-family-tab-" + this.product.productFamilyId;
        }
        else {
            var activeFamilyTabId = "#product-family-tab-home";
        }
        jQuery(activeFamilyTabId).addClass("active");
        //Product details tabs
        jQuery('#productDetailsTabs li').click(function () {
            jQuery('#productDetailsTabs li').each(function () {
                jQuery(this).removeClass('active');
            });
            jQuery(this).addClass('active');
        });
        jQuery('#product-overview').click(function () {
            jQuery('#productOverviewTab').show();
            jQuery('#productRelatedAccessoriesTab').hide();
            jQuery('#productSpecsTab').hide();
        });
        jQuery('#product-accessories').click(function () {
            jQuery('#productOverviewTab').hide();
            jQuery('#productRelatedAccessoriesTab').show();
            jQuery('#productSpecsTab').hide();
        });
        jQuery('#product-specs').click(function () {
            jQuery('#productOverviewTab').hide();
            jQuery('#productRelatedAccessoriesTab').hide();
            jQuery('#productSpecsTab').show();
        });
    };
    ProductDetailsComponent.prototype.setActiveTabByUrlParam = function () {
        this.route.queryParams.subscribe(function (params) {
            var activeTabId = '#' + params.activeTab;
            jQuery(activeTabId).click();
        });
    };
    ProductDetailsComponent.prototype.GetProductCallback = function (resp) {
        if (resp.isok) {
            this.product = resp.model;
            //this.productSvc.product = resp.model;
            this.getSubmittalDataSheet(this.product);
            this.setupActiveTab();
        }
        if (this.product.isSystem) {
            for (var i in this.product.subProducts) {
                var item = this.product.subProducts[i];
                if (item.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) {
                    this.relatedIndoorUnit = item;
                }
                else if (item.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor) {
                    this.relatedOutdoorUnit = item;
                }
            }
        }
        console.log("************ SubmittalSheetTypeId: " + this.product.submittalSheetTypeId + " *******************");
    };
    ProductDetailsComponent.prototype.getBasketCallback = function (resp) {
        if (resp.isok) {
            this.userBasket = resp.model;
            this.basketSvc.userBasket = resp.model;
        }
    };
    ProductDetailsComponent.prototype.productDetails = function (event, product) {
        this.productSvc.product = product;
        this.router.navigate(['/product', { outlets: { 'productDetails': [product.productId] } }], { queryParams: { activeTab: 'product-overview' } });
    };
    ProductDetailsComponent.prototype.getSubmittalDataSheet = function (product) {
        var _this = this;
        this.productSvc.getSubmittalDataSheet(product.productNumber).then(function (resp) {
            if (resp) {
                var HtmlString = resp;
                jQuery("#technical-specs").replaceWith(HtmlString);
                _this.setActiveTabByUrlParam();
            }
        });
    };
    ProductDetailsComponent = __decorate([
        core_1.Component({
            selector: 'product-details',
            template: __webpack_require__("./src/app/product/components/productDetails/product-details.component.html"),
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, product_service_1.ProductService, basket_service_1.BasketService])
    ], ProductDetailsComponent);
    return ProductDetailsComponent;
}());
exports.ProductDetailsComponent = ProductDetailsComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/product-overview-info.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row row-nomargin product-details\" style=\"padding:10px;\">\r\n    <div class=\"col col-md-2 product-image no-padding\" style=\"background-color:none\">\r\n        <product-image [product]=\"product\"></product-image>\r\n    </div>\r\n\r\n    <div class=\"product-info\" [ngClass]=\"{'col col-md-8' : quoteId != 0 && quoteId != undefined, 'col col-md-10' : quoteId == 0 || quoteId == undefined}\" style=\"background-color:none\">\r\n        <div>\r\n            <span class=\"as-lnk\">Model No.: </span> <span class=\"pull-right\"> {{product.productNumber}}</span>\r\n        </div>\r\n        <div>\r\n            <span class=\"as-lnk\">Model Type.: </span> <span class=\"pull-right\"> {{product.productModelTypeDescription}}</span>\r\n        </div>\r\n        <div *ngIf=\"showPrices\" >\r\n            <span class=\"as-lnk\">Price: </span> <span class=\"pull-right\"> {{product.price | currency:'USD':true:'1.2-2'}}</span>\r\n        </div>\r\n        <div>\r\n            <span class=\"as-lnk\">Rated Cooling Capacity: </span> <span class=\"pull-right\"> {{product.coolingCapacityRated}}</span>\r\n        </div>\r\n        <div>\r\n            <span class=\"as-lnk\">Rated Heating Capacity: </span> <span class=\"pull-right\"> {{product.heatingCapacityRated}}</span>\r\n        </div>\r\n\r\n        <product-spec-bars [product]=\"product\"></product-spec-bars>\r\n    </div>\r\n\r\n\r\n\r\n    <div *ngIf=\"quoteId != 0 && quoteId != undefined\" class=\"col col-md-2 product-qty no-padding\" style=\"text-align:center\">\r\n        <product-quantity-add [product]=\"product\"></product-quantity-add>\r\n    </div>\r\n\r\n    <!--<div class=\"product-info\" [ngClass]=\"{'col col-md-8' : userBasket.quoteId != 0 && userBasket.quoteId != undefined, 'col col-md-10' : userBasket.quoteId == 0 || userBasket.quoteId == undefined}\" style=\"background-color:none\">\r\n        <div>\r\n            <span class=\"as-lnk\">Model No.: </span> <span class=\"pull-right\"> {{product.productNumber}}</span>\r\n        </div>\r\n        <div>\r\n            <span class=\"as-lnk\">Model Type.: </span> <span class=\"pull-right\"> {{product.productModelTypeDescription}}</span>\r\n        </div>\r\n        <div *ngIf=\"userSvc.currentUser.showPrices\">\r\n            <span class=\"as-lnk\">Price: </span> <span class=\"pull-right\"> {{product.price | currency:'USD':true:'1.2-2'}}</span>\r\n        </div>\r\n        <div>\r\n            <span class=\"as-lnk\">Rated Cooling Capacity: </span> <span class=\"pull-right\"> {{product.coolingCapacityRated}}</span>\r\n        </div>\r\n        <div>\r\n            <span class=\"as-lnk\">Rated Heating Capacity: </span> <span class=\"pull-right\"> {{product.heatingCapacityRated}}</span>\r\n        </div>\r\n               \r\n        <product-spec-bars [product]=\"product\"></product-spec-bars>\r\n    </div>\r\n\r\n\r\n\r\n    <div *ngIf=\"userBasket.quoteId != 0 && userBasket.quoteId != undefined\" class=\"col col-md-2 product-qty no-padding\" style=\"text-align:center\">\r\n        <product-quantity-add [product]=\"product\"></product-quantity-add>\r\n    </div>-->\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/product/components/productDetails/product-overview-info.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var ProductOverviewInfoComponent = /** @class */ (function () {
    function ProductOverviewInfoComponent(elementRef, toastrSvc, userSvc, productSvc, basketSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.showPrices = false;
    }
    ProductOverviewInfoComponent.prototype.ngOnChanges = function () {
        if (this.userBasket != undefined) {
            this.quoteId = this.userBasket.quoteId;
        }
        if (this.currentUser != undefined) {
            this.showPrices = this.currentUser.showPrices;
        }
    };
    ProductOverviewInfoComponent.prototype.ngOnInit = function () {
    };
    ProductOverviewInfoComponent.prototype.ngAfterViewInit = function () {
        console.log("product-overview-info: ngAfterViewInit");
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductOverviewInfoComponent.prototype, "product", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductOverviewInfoComponent.prototype, "userBasket", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductOverviewInfoComponent.prototype, "currentUser", void 0);
    ProductOverviewInfoComponent = __decorate([
        core_1.Component({
            selector: 'product-overview-info',
            template: __webpack_require__("./src/app/product/components/productDetails/product-overview-info.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService, basket_service_1.BasketService])
    ], ProductOverviewInfoComponent);
    return ProductOverviewInfoComponent;
}());
exports.ProductOverviewInfoComponent = ProductOverviewInfoComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/product-overview.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<product-overview-info [product]=\"product\" [userBasket]=\"userBasket\" [currentUser]=\"currentUser\"></product-overview-info>\r\n\r\n<related-documents-accessories [product]=\"product\"></related-documents-accessories>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productDetails/product-overview.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var ProductOverviewComponent = /** @class */ (function () {
    function ProductOverviewComponent(elementRef, toastrSvc, userSvc, productSvc, basketSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
    }
    ProductOverviewComponent.prototype.ngOnChanges = function (changes) {
        console.log("ProductDetail-OverView Component: ngOnChange");
    };
    ProductOverviewComponent.prototype.ngOnInit = function () { };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductOverviewComponent.prototype, "product", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductOverviewComponent.prototype, "userBasket", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductOverviewComponent.prototype, "currentUser", void 0);
    ProductOverviewComponent = __decorate([
        core_1.Component({
            selector: 'product-overview',
            template: __webpack_require__("./src/app/product/components/productDetails/product-overview.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], ProductOverviewComponent);
    return ProductOverviewComponent;
}());
exports.ProductOverviewComponent = ProductOverviewComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/related-documents-accessories.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"row dk-list-grey\">\r\n\r\n    <div class=\"col col-md-6\">\r\n        <div class=\"dk-list-header\">RELATED DOCUMENTS</div>\r\n        <div style=\"overflow-y: auto; max-height: 500px;\">\r\n            <div class=\"row row-nomargin dk-list-row\" *ngFor=\"let item of product.documents ; let idx = index\">\r\n                <span class=\"col col-md-12\">\r\n                    <img src=\"/v3/src/assets/images/related-document-icon.png\" />\r\n\r\n                    <a href=\"{{item.url}}\" target=\"_blank\"> {{item.description}} </a>\r\n\r\n                    <a href=\"{{item.url}}\" target=\"_blank\" class=\"pull-right\">{{item.name}}</a>\r\n\r\n                </span>\r\n                <!--<span class=\"col col-md-6\">\r\n                    <a href=\"{{item.url}}\" target=\"_blank\" class=\"pull-right\"> View Document </a>\r\n                </span>-->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!--General Product-->\r\n    <div *ngIf=\"!product.isSystem && !(product.productModelTypeId == enums.ProductModelTypeEnum.System)\r\n         && !(product.productModelTypeId == enums.ProductModelTypeEnum.Accessory)\" class=\"col col-md-6\">\r\n        <div class=\"dk-list-header\">RELATED ACCESSORIES</div>\r\n        <div *ngIf=\"product.accessories.length == 0\">\r\n            No Related Accessories\r\n        </div>\r\n\r\n        <div *ngIf=\"product.accessories.length > 0\">\r\n            <div style=\"overflow-y: auto; max-height: 500px;\">\r\n                <div class=\"row row-nomargin dk-list-row\" *ngFor=\"let item of product.accessories ; let idx = index\">\r\n                    <div class=\"col col-md-6\">\r\n                        <a (click)=\"productDetails($event, item.accessory)\" class=\"pull-left\"> {{item.accessory.name}} </a>\r\n                    </div>\r\n                    <div class=\"col col-md-6\">\r\n                        <a (click)=\"productDetails($event, item.accessory)\" class=\"pull-right\"> {{item.accessory.productNumber}} </a>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                \r\n            </div>\r\n\r\n            <div class=\"row row-nomargin\" style=\"padding-top:10px;\">\r\n                <button class=\"btn btn-default\" id=\"viewAllAccessoriesBtn\">View all accessories</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!--System Product-->\r\n    <div *ngIf=\"product.isSystem || product.productModelTypeId == enums.ProductModelTypeEnum.System\" \r\n         class=\"col col-md-6\">\r\n        <div class=\"dk-list-header\">INDOOR UNIT RELATED ACCESSORIES</div>\r\n        <div style=\"overflow-y: auto; max-height: 240px;\">\r\n\r\n            <div class=\"row row-nomargin dk-list-row\" *ngFor=\"let item of relatedIndoorUnit.accessories ; let idx = index\">\r\n                <div class=\"col col-md-6\">\r\n                    <a (click)=\"productDetails($event, item.accessory)\" class=\"pull-left\"> {{item.accessory.name}} </a>\r\n                </div>\r\n                <div class=\"col col-md-6\">\r\n                    <a (click)=\"productDetails($event, item.accessory)\" class=\"pull-right\"> {{item.accessory.productNumber}} </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"dk-list-header\">OUTDOOR UNIT RELATED ACCESSORIES</div>\r\n        <div style=\"overflow-y: auto; max-height: 240px;\">\r\n\r\n            <div class=\"row row-nomargin dk-list-row\" *ngFor=\"let item of relatedOutdoorUnit.accessories ; let idx = index\">\r\n                <div class=\"col col-md-6\">\r\n                    <a (click)=\"productDetails($event, item.accessory)\" class=\"pull-left\"> {{item.accessory.name}} </a>\r\n                </div>\r\n                <div class=\"col col-md-6\">\r\n                    <a (click)=\"productDetails($event, item.accessory)\" class=\"pull-right\"> {{item.accessory.productNumber}} </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row row-nomargin\" style=\"padding-top:10px;\">\r\n            <button class=\"btn btn-default\" id=\"viewAllAccessoriesBtn\">View all accessories</button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!--Accessory-->\r\n    <div *ngIf=\"product.productModelTypeId == enums.ProductModelTypeEnum.Accessory\" class=\"col col-md-6\">\r\n        <div class=\"dk-list-header\">PARENT PRODUCTS</div>\r\n        <div style=\"overflow-y: auto; max-height: 500px;\">\r\n            <div class=\"row row-nomargin dk-list-row\" *ngFor=\"let item of product.parentProducts ; let idx = index\">\r\n                <div class=\"col col-md-6\">\r\n                    <a (click)=\"productDetails($event, item)\" class=\"pull-left\"> {{item.name}} </a>\r\n                </div>\r\n                <div class=\"col col-md-6\">\r\n                    <a (click)=\"productDetails($event, item)\" class=\"pull-right\"> {{item.productNumber}} </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div class=\"row row-nomargin\" style=\"padding-top:10px;\">\r\n            <button class=\"btn btn-default\" id=\"viewAllAccessoriesBtn\">View parent products</button>\r\n        </div>-->\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productDetails/related-documents-accessories.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var RelatedDocsAndAssrComponent = /** @class */ (function () {
    function RelatedDocsAndAssrComponent(router, toastrSvc, userSvc, enums, productSvc, basketSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
    }
    RelatedDocsAndAssrComponent.prototype.ngOnInit = function () {
        if (this.product.isSystem) {
            for (var i in this.product.subProducts) {
                var item = this.product.subProducts[i];
                if (item.productModelTypeId == this.enums.ProductModelTypeEnum.Indoor) {
                    this.relatedIndoorUnit = item;
                }
                else if (item.productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor) {
                    this.relatedOutdoorUnit = item;
                }
            }
        }
        if (this.product.productTypeId == this.enums.ProductTypeEnum.Accessory) {
            jQuery('#product-accessories a').text("PARENT PRODUCTS");
        }
        else {
            jQuery('#product-accessories a').text("RELATED ACCESSORIES");
        }
    };
    RelatedDocsAndAssrComponent.prototype.ngAfterViewInit = function () {
        jQuery('#viewAllAccessoriesBtn').click(function () {
            jQuery('#productOverviewTab').hide();
            jQuery('#productRelatedAccessoriesTab').show();
            jQuery('#productSpecsTab').hide();
            jQuery('#productDetailsTabs li').each(function () {
                jQuery(this).removeClass('active');
            });
            jQuery('#product-accessories').addClass('active');
        });
    };
    RelatedDocsAndAssrComponent.prototype.productDetails = function (event, product) {
        this.productSvc.product = product;
        this.router.navigate(['/product', { outlets: { 'productDetails': [product.productId] } }]);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], RelatedDocsAndAssrComponent.prototype, "product", void 0);
    RelatedDocsAndAssrComponent = __decorate([
        core_1.Component({
            selector: 'related-documents-accessories',
            template: __webpack_require__("./src/app/product/components/productDetails/related-documents-accessories.component.html"),
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums,
            product_service_1.ProductService, basket_service_1.BasketService])
    ], RelatedDocsAndAssrComponent);
    return RelatedDocsAndAssrComponent;
}());
exports.RelatedDocsAndAssrComponent = RelatedDocsAndAssrComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-accessories.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"dk-list-header\">TECHNICAL SPECIFICATIONS</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Capacity Index Limit - Max</span> <span class=\"pull-right\">{{specs['capacityIndexLimitMax']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Capacity Index Limit - Min</span> <span class=\"pull-right\">{{specs['capacityIndexLimitMin']?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Capacity Rated</span> <span class=\"pull-right\">{{specs['coolingCapacityRated']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\"> Cooling Input Power</span> <span class=\"pull-right\">{{specs['coolingInputPower']?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Operation Range SspanMax</span> <span class=\"pull-right\">{{specs['coolingOperationRangeSspanMax']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Operation Range SspanMin</span> <span class=\"pull-right\">{{specs['coolingOperationRangeSspanMin']?.value}}</span>\r\n    </div>\r\n  \r\n</div> \r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Dimensions - Depth</span>  <span class=\"pull-right\">{{specs[\"dimensionsDepth\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Dimensions - Height</span> <span class=\"pull-right\">{{specs[\"dimensionsHeight\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Dimensions - Width</span>  <span class=\"pull-right\">{{specs[\"dimensionsWidth\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Fuse Size</span> <span class=\"pull-right\">{{specs[\"fuseSize\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">HL Pressure Line</span>  <span class=\"pull-right\">{{specs[\"pipeSizeHPLP\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Input Power</span> <span class=\"pull-right\">{{specs[\"heatingInputPower\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Operation Range Sspan Max</span>  <span class=\"pull-right\">{{specs[\"heatingOperationRangeSspanMax\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Operation Range Sspan Min</span> <span class=\"pull-right\">{{specs[\"heatingOperationRangeSspanMin\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">InERP</span>  <span class=\"pull-right\">{{specs[\"inerp\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Inter Connecting Wires</span> <span class=\"pull-right\">{{specs[\"interConnectingWires\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max Connection Ports</span>  <span class=\"pull-right\">{{specs[\"maxConnectionPorts\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max External Static Pressure</span> <span class=\"pull-right\">{{specs[\"maxExternalStaticPressure\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max Indoor Units</span>  <span class=\"pull-right\">{{specs[\"maxIndoorUnits\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Min Circuit Amps</span> <span *ngIf=\"specs['minCircuitAmpsText']\" class=\"pull-right\">\r\n            {{specs[\"minCircuitAmpsText\"]? specs[\"minCircuitAmpsText\"]?.value : specs[\"MinCircuitAmps\"]?.value}}\r\n        </span> \r\n                                                       \r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Pipe Size - Gas</span>  <span class=\"pull-right\">{{specs[\"pipeSizeGas\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">PipeSize - Liquid</span> <span class=\"pull-right\">{{specs[\"pipeSizeLiquid\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Power Frequency</span>  <span class=\"pull-right\">{{specs[\"powerFrequency\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Power Phase</span> <span class=\"pull-right\">{{specs[\"powerPhase\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Power Voltage</span>  <span class=\"pull-right\">{{specs[\"powerVoltage\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\"> Product Class Name</span> <span class=\"pull-right\">{{specs[\"productClassName\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated External Static Pressure</span>  <span class=\"pull-right\">{{specs[\"ratedExternalStaticPressure\"]?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Refrigerant Type</span> <span class=\"pull-right\">{{specs[\"refrigerantType\"]?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Weight - Net</span>  <span class=\"pull-right\">{{specs[\"WeightNetText\"]? specs[\"WeightNetText\"]?.value : specs[\"WeightNet\"]?.value}}</span>\r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-accessories.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var TechnicalSpecificationsAccessoriesComponent = /** @class */ (function () {
    function TechnicalSpecificationsAccessoriesComponent(elementRef, toastrSvc, userSvc, productSvc, basketSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.specs = [];
    }
    TechnicalSpecificationsAccessoriesComponent.prototype.ngOnInit = function () {
        this.specs = this.product.specifications.all;
        //for (var key in this.product.specifications.all) {
        //    var item: any = {
        //        key: key,
        //        value: this.product.specifications.all[key]
        //    }
        //    this.specs.push(item);
        //}
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsAccessoriesComponent.prototype, "product", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsAccessoriesComponent.prototype, "userBasket", void 0);
    TechnicalSpecificationsAccessoriesComponent = __decorate([
        core_1.Component({
            selector: 'technical-specifications-accessories',
            template: __webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-accessories.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], TechnicalSpecificationsAccessoriesComponent);
    return TechnicalSpecificationsAccessoriesComponent;
}());
exports.TechnicalSpecificationsAccessoriesComponent = TechnicalSpecificationsAccessoriesComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-other.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"dk-list-header\">TECHNICAL SPECIFICATIONS</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">InERP</span> <span class=\"pull-right\">{{specs['inerp']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Product Class Name</span> <span class=\"pull-right\">{{specs['productClassName']?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Short Name</span> <span class=\"pull-right\">{{specs['shortName']?.value}}</span>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-other.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var TechnicalSpecificationsOtherComponent = /** @class */ (function () {
    function TechnicalSpecificationsOtherComponent(elementRef, toastrSvc, userSvc, productSvc, basketSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.specs = [];
    }
    TechnicalSpecificationsOtherComponent.prototype.ngOnInit = function () {
        this.specs = this.product.specifications.all;
        //for (var key in this.product.specifications.all) {
        //    var item: any = {
        //        key: key,
        //        value: this.product.specifications.all[key]
        //    }
        //    this.specs.push(item);
        //}
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsOtherComponent.prototype, "product", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsOtherComponent.prototype, "userBasket", void 0);
    TechnicalSpecificationsOtherComponent = __decorate([
        core_1.Component({
            selector: 'technical-specifications-other',
            template: __webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-other.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], TechnicalSpecificationsOtherComponent);
    return TechnicalSpecificationsOtherComponent;
}());
exports.TechnicalSpecificationsOtherComponent = TechnicalSpecificationsOtherComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-systemHP.component.html":
/***/ (function(module, exports) {

module.exports = "<!--This view is not used. Delete after 01/06/2017-->\r\n<div class=\"dk-list-header\">TECHNICAL SPECIFICATIONS</div>\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Additional Refrigerant Charge</span> <span class=\"pull-right\">{{specs['additionalRefrigerantCharge']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating COP (Non-Ducted)</span> <span class=\"pull-right\">{{specs['coP47Nonducted']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Condensate Drain Outlet (in)</span> <span class=\"pull-right\">{{specs['condensateDrainOutlet']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Capacity Max</span> <span class=\"pull-right\">{{specs['coolingCapacityMax']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Capacity Min</span> <span class=\"pull-right\">{{specs['coolingCapacityMin']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Capacity Rated</span> <span class=\"pull-right\">{{specs['coolingCapacityRated']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Capacity Sensible</span> <span class=\"pull-right\">{{specs['coolingCapacitySensible']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Input Power</span> <span class=\"pull-right\">{{specs['coolingInputPower']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Operation Range StdMax</span> <span class=\"pull-right\">{{specs['coolingOperationRangeStdMax']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Operation Range StdMin</span> <span class=\"pull-right\">{{specs['coolingOperationRangeStdMin']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Cooling Operation Range wBaffleMax</span> <span class=\"pull-right\">{{specs['coolingOperationRangewBaffleMax']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">CoolingOperationRangewBaffleMin</span> <span class=\"pull-right\">{{specs['coolingOperationRangewBaffleMin']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">EER Nonducted</span> <span class=\"pull-right\">{{specs['eerNonducted']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Factory Std Refrigerant Charge</span> <span class=\"pull-right\">{{(specs['factoryStdRefrigerantChargeText'] ? specs['factoryStdRefrigerantChargeText']?.value : specs['factoryStdRefrigerantCharge']?.value)  | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Fuse Size</span> <span class=\"pull-right\">{{specs['fuseSize']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">HSPF Nonducted</span> <span class=\"pull-right\">{{specs['hspfNonducted']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Capacity Max</span> <span class=\"pull-right\">{{specs['heatingCapacityMax']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Capacity Min</span> <span class=\"pull-right\">{{specs['heatingCapacityMin']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Capacity Rated</span> <span class=\"pull-right\">{{specs['heatingCapacityRated']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Input Power</span> <span class=\"pull-right\">{{specs['heatingInputPower']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Operation Range Std Max</span> <span class=\"pull-right\">{{specs['heatingOperationRangeStdMax']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Operation Range Std Min</span> <span class=\"pull-right\">{{specs['heatingOperationRangeStdMin']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Operation Range wBaffle Max</span> <span class=\"pull-right\">{{specs['heatingOperationRangewBaffleMax']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Heating Operation Range wBaffle Min</span> <span class=\"pull-right\">{{specs['heatingOperationRangewBaffleMin']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">InERP</span> <span class=\"pull-right\">{{specs['inerp']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Inter Connecting Wires</span> <span class=\"pull-right\">{{specs['interConnectingWires']?.value }}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max External Static Pressure</span> <span class=\"pull-right\">{{specs['maxExternalStaticPressure']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max Indoor to Indoor Piping</span> <span class=\"pull-right\">{{specs['maxIndoortoIndoorPiping']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max Overcurrent Protection</span> <span class=\"pull-right\">{{(specs['maxOvercurrentProtectionText']? specs['maxOvercurrentProtectionText']?.value: specs['maxOvercurrentProtection']?.value)  | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Max Pipe Length Total</span> <span class=\"pull-right\">{{specs['maxPipeLengthTotal']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Min Circuit Amps</span> <span class=\"pull-right\">{{(specs['minCircuitAmpsText']? specs['minCircuitAmpsText']?.value : specs['minCircuitAmps']?.value)  | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Moisture Removal Rate</span> <span class=\"pull-right\">{{specs['moistureRemovalRate']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Pipe Size - Gas</span> <span class=\"pull-right\">{{specs['pipeSizeGas']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">PipeSize - Liquid</span> <span class=\"pull-right\">{{specs['pipeSizeLiquid']?.value}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Power Frequency</span> <span class=\"pull-right\">{{specs['powerFrequency']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Power Phase</span> <span class=\"pull-right\">{{specs['powerPhase']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Power Voltage</span> <span class=\"pull-right\">{{specs['powerVoltage']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Cooling Condition AmbientDB</span> <span class=\"pull-right\">{{specs['ratedCoolingConditionAmbientDB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Cooling Condition AmbientWB</span> <span class=\"pull-right\">{{specs['ratedCoolingConditionAmbientWB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Cooling Condition RoomDB</span> <span class=\"pull-right\">{{specs['ratedCoolingConditionRoomDB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Cooling Condition RoomWB</span> <span class=\"pull-right\">{{specs['ratedCoolingConditionRoomWB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated External Static Pressure</span> <span class=\"pull-right\">{{specs['ratedExternalStaticPressure']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Heating Condition AmbientDB</span> <span class=\"pull-right\">{{specs['ratedHeatingConditionAmbientDB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Heating Condition AmbientWB</span> <span class=\"pull-right\">{{specs['ratedHeatingConditionAmbientWB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Heating Condition RoomDB</span> <span class=\"pull-right\">{{specs['ratedHeatingConditionRoomDB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Heating Condition RoomWB</span> <span class=\"pull-right\">{{specs['ratedHeatingConditionRoomWB']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Height Difference</span> <span class=\"pull-right\">{{specs['ratedHeightDifference']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Rated Load Amps</span> <span class=\"pull-right\">{{(specs['ratedLoadAmpsText'] ? specs['ratedLoadAmpsText']?.value : specs['ratedLoadAmps']?.value) | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Refrigerant Type</span> <span class=\"pull-right\">{{specs['refrigerantType']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">SEER Nonducted</span> <span class=\"pull-right\">{{specs['seerNonducted']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Short Name</span> <span class=\"pull-right\">{{specs['shortName']?.value}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Sound Pressure - High</span> <span class=\"pull-right\">{{specs['soundPressureHigh']?.value | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row row-nomargin dk-list-row\">\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\">Unit Installation Type</span> <span class=\"pull-right\">{{product.productCategoryName}}</span>\r\n    </div>\r\n    <div class=\"col col-md-6 col-xs-12\">\r\n        <span class=\"pull-left\"> Weight - Net</span> <span class=\"pull-right\">{{(specs['weightNetText'] ? specs['weightNetText']?.value : specs['weightNet']?.value) | number:'1.2-2'}}</span>\r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-systemHP.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
//This component is not used.Delete after 01/ 06 / 2017
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var TechnicalSpecificationsSystemHPComponent = /** @class */ (function () {
    function TechnicalSpecificationsSystemHPComponent(elementRef, toastrSvc, userSvc, productSvc, basketSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.specs = [];
    }
    TechnicalSpecificationsSystemHPComponent.prototype.ngOnInit = function () {
        this.specs = this.product.specifications.all;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsSystemHPComponent.prototype, "product", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsSystemHPComponent.prototype, "userBasket", void 0);
    TechnicalSpecificationsSystemHPComponent = __decorate([
        core_1.Component({
            selector: 'technical-specifications-systemHP',
            template: __webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-systemHP.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], TechnicalSpecificationsSystemHPComponent);
    return TechnicalSpecificationsSystemHPComponent;
}());
exports.TechnicalSpecificationsSystemHPComponent = TechnicalSpecificationsSystemHPComponent;
;


/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications.component.html":
/***/ (function(module, exports) {

module.exports = "<!--This view is not used. Delete after 01/06/2017-->\r\n<div class=\"dk-list-header\">TECHNICAL SPECIFICATIONS</div>\r\n    <!--<div class=\"dk-list-header\">TECHNICAL SPECIFICATIONS</div>-->\r\n    <div *ngFor=\"let item of specs ; let idx = index\">\r\n        <div *ngIf=\"item.name\" class=\"row row-nomargin row-halfpage border-bottom-row\" style=\"margin:5px;\">\r\n            <span class=\"pull-left\">{{item.name}}</span>\r\n            <span class=\"pull-right\">{{item.value}}</span>\r\n        </div>\r\n    </div>\r\n"

/***/ }),

/***/ "./src/app/product/components/productDetails/technicalSpecifications/technical-specifications.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
//This component is not used.Delete after 01/ 06 / 2017
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var TechnicalSpecificationsComponent = /** @class */ (function () {
    function TechnicalSpecificationsComponent(elementRef, toastrSvc, userSvc, productSvc, basketSvc) {
        this.elementRef = elementRef;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.specs = [];
    }
    TechnicalSpecificationsComponent.prototype.ngOnInit = function () {
        for (var key in this.specifications.all) {
            this.specs.push(this.specifications.all[key]);
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsComponent.prototype, "specifications", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TechnicalSpecificationsComponent.prototype, "userBasket", void 0);
    TechnicalSpecificationsComponent = __decorate([
        core_1.Component({
            selector: 'technical-specifications',
            template: __webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications.component.html"),
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], TechnicalSpecificationsComponent);
    return TechnicalSpecificationsComponent;
}());
exports.TechnicalSpecificationsComponent = TechnicalSpecificationsComponent;
;


/***/ }),

/***/ "./src/app/product/components/productFamilyGrid.component.html":
/***/ (function(module, exports) {

module.exports = "<!--<div class=\"row\" style=\"margin-bottom:10px\">\r\n    <div id=\"dk-productFamilies\" class=\"row\">\r\n        <kendo-grid [data]=\"productFamilies\" \r\n                    [pageSize]=\"pageSize\"\r\n          [skip]=\"skip\"\r\n          [pageable]=\"{\r\n            buttonCount: buttonCount,\r\n            info: info,\r\n            type: type,\r\n            pageSizes: pageSizes,\r\n            previousNext: previousNext\r\n          }\"\r\n          [scrollable]=\"'none'\"\r\n          (pageChange)=\"pageChange($event)\">\r\n            <kendo-grid-column field=\"Id\">\r\n                <ng-template kendoCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                    <strong>{{dataItem.Id}}</strong>\r\n                </ng-template>\r\n            </kendo-grid-column>\r\n            <kendo-grid-column field=\"Name\">\r\n                <template kendoCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                    <strong>{{dataItem.Name}}</strong>\r\n                </template>\r\n            </kendo-grid-column>\r\n        </kendo-grid>\r\n\r\n      <table>\r\n          <thead>\r\n              <tr>\r\n              <th>Id</th>\r\n              <th>Name</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr *ngFor=\"let productFamily of productFamilies\">\r\n                  <td>{{ productFamily.Id}}</td>\r\n                  <td>{{ productFamily.Name }}</td>\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n    </div>\r\n</div>-->\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productFamilyGrid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var productFamily_service_1 = __webpack_require__("./src/app/product/services/productFamily.service.ts");
var ProductFamilyGridComponent = /** @class */ (function () {
    function ProductFamilyGridComponent(_productFamilyService) {
        this._productFamilyService = _productFamilyService;
        this.pageTitle = 'Product Families';
        this.imageWidth = 50;
        this.imageMargin = 2;
        this.showImage = true;
        this.listFilter = 'All';
    }
    ProductFamilyGridComponent.prototype.ngOnInit = function () {
        this.getProductFamilies();
    };
    ProductFamilyGridComponent.prototype.getProductFamilies = function () {
        var _this = this;
        this._productFamilyService.getProductFamilies()
            .subscribe(function (data) { return _this.productFamilies = data; }, function (error) { return _this.errorMessage = error; });
    };
    ProductFamilyGridComponent = __decorate([
        core_1.Component({
            selector: 'dk-productFamilies',
            template: __webpack_require__("./src/app/product/components/productFamilyGrid.component.html"),
            styles: [__webpack_require__("./src/app/product/components/productList.component.css")],
            providers: [productFamily_service_1.ProductFamilyService]
        }),
        __metadata("design:paramtypes", [productFamily_service_1.ProductFamilyService])
    ], ProductFamilyGridComponent);
    return ProductFamilyGridComponent;
}());
exports.ProductFamilyGridComponent = ProductFamilyGridComponent;


/***/ }),

/***/ "./src/app/product/components/productList.component.css":
/***/ (function(module, exports) {

module.exports = " \r\n\r\nthead{\r\n    color:white;\r\n}\r\n\r\n/*TODO: Hacking Kendo grid to fix horizontal scroll bar size*/\r\n\r\n#product-table-view.k-grid .k-grid-container {\r\n    overflow: visible;\r\n}\r\n\r\n#userBasket #userBasketInnerDiv {\r\n    background-color: #cff0ff;\r\n    padding: 10px 25px 10px 25px;\r\n}\r\n\r\n#productFamilyTabs {\r\n    padding: 0px;\r\n}\r\n\r\n.product-list-view .k-grid .k-grid-header, .product-grid-view .k-grid .k-grid-header {\r\n    display: none;\r\n}\r\n\r\n/*Product grid row layout*/\r\n\r\n@media screen and (min-width: 1350px) {\r\n    .product-list-view .k-grid table tbody tr {\r\n        width: 50%;\r\n        float: left;\r\n        background-color: #fff;\r\n    }\r\n\r\n        .product-list-view .k-grid table tbody tr td {\r\n            /*width: inherit;*/\r\n            width: 889px;\r\n        }\r\n\r\n    .product-grid-view .k-grid table tbody tr {\r\n        width: 25%;\r\n        float: left;\r\n        background-color: #fff;\r\n    }\r\n\r\n        .product-grid-view .k-grid table tbody tr td {\r\n            width: 25%;\r\n            padding: 0px;\r\n        }\r\n}\r\n\r\n/*fix extra space on kendo grid*/\r\n\r\n/*#product-list-view, #product-grid-view {\r\n    border-width: 0px;\r\n}*/\r\n\r\n/*@media screen and (min-width: 1350px) {\r\n    .product-list-view .k-grid table tbody tr .product-image{\r\n        width: 15%;\r\n        float:left;\r\n    \r\n    }\r\n\r\n    .product-list-view .k-grid table tbody tr .product-info{\r\n        width: 30%;\r\n        float:left;\r\n    }\r\n\r\n     .product-list-view .k-grid table tbody tr .product-specs{\r\n        width: 40%;\r\n        float:left;\r\n    }\r\n\r\n      .product-list-view .k-grid table tbody tr .product-qty{\r\n        width: 15%;\r\n        float:left;\r\n    }\r\n}*/\r\n\r\ndiv.seerRatingBar, div.ieerRatingBar, div.eerRatingBar, div.hspfRatingBar, div.cop47RatingBar, div.scheRatingBar,\r\ndiv.seerRatingBarDucted, div.ieerRatingBarDucted, div.eerRatingBarDucted, div.hspfRatingBarDucted, div.cop47RatingBarDucted, div.afueRatingBar {\r\n    height: 4px;\r\n    width: auto;\r\n    display: block;\r\n}\r\n\r\ndiv.seerRatingBar .k-state-selected, div.seerRatingBarDucted .k-state-selected {\r\n        /*background-color: #16a8af;\r\n    border-color: #16a8af;*/\r\n        background: #40c8f4; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#40c8f4),to(#007fcc));\r\n        background: linear-gradient(to right, #40c8f4 0%,#007fcc 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#40c8f4', endColorstr='#007fcc',GradientType=1 );\r\n        border-color: #40c8f4;\r\n    }\r\n\r\ndiv.ieerRatingBar .k-state-selected, div.ieerRatingBarDucted .k-state-selected {\r\n        /*background-color: #16a8af;\r\n    border-color: #16a8af;*/\r\n        background: #40c8f4; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#40c8f4),to(#007fcc));\r\n        background: linear-gradient(to right, #40c8f4 0%,#007fcc 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#40c8f4', endColorstr='#007fcc',GradientType=1 );\r\n        border-color: #40c8f4;\r\n    }\r\n\r\ndiv.scheRatingBar .k-state-selected {\r\n        /*background-color: #16a8af;\r\n    border-color: #16a8af;*/\r\n        background: #40c8f4; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#1eed85),to(#00b27c));\r\n        background: linear-gradient(to right, #1eed85 0%,#00b27c 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1eed85', endColorstr='#00b27c',GradientType=1 );\r\n        border-color: #1eed85;\r\n    }\r\n\r\ndiv.eerRatingBar .k-state-selected, div.eerRatingBarDucted .k-state-selected {\r\n        /*background-color: #109fce;\r\n    border-color: #109fce;*/\r\n        background: #40c8f4; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#40c8f4),to(#007fcc));\r\n        background: linear-gradient(to right, #40c8f4 0%,#007fcc 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#40c8f4', endColorstr='#007fcc',GradientType=1 );\r\n        border-color: #40c8f4;\r\n    }\r\n\r\ndiv.hspfRatingBar .k-state-selected, div.hspfRatingBarDucted .k-state-selected {\r\n        /*background-color: #6306ce;\r\n    border-color: #6306ce;*/\r\n        background: #d70353; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#d70353),to(#8d019a));\r\n        background: linear-gradient(to right, #d70353 0%,#8d019a 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#d70353', endColorstr='#8d019a',GradientType=1 ); /* IE6-9 */\r\n        border-color: #d70353;\r\n    }\r\n\r\ndiv.cop47RatingBar .k-state-selected, div.cop47RatingBarDucted .k-state-selected {\r\n        /*background-color: #6306ce;\r\n    border-color: #6306ce;*/\r\n        background: #d70353; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#d70353),to(#8d019a));\r\n        background: linear-gradient(to right, #d70353 0%,#8d019a 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#d70353', endColorstr='#8d019a',GradientType=1 ); /* IE6-9 */\r\n        border-color: #d70353;\r\n    }\r\n\r\ndiv.afueRatingBar .k-state-selected {\r\n        /*background-color: #6306ce;\r\n    border-color: #6306ce;*/\r\n        background: #d70353; /* Old browsers */ /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */\r\n        background: -webkit-gradient(linear, left top, right top, from(#d70353),to(#8d019a));\r\n        background: linear-gradient(to right, #d70353 0%,#8d019a 100%); /* W3C */\r\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#d70353', endColorstr='#8d019a',GradientType=1 ); /* IE6-9 */\r\n        border-color: #d70353;\r\n    }\r\n\r\n.product-details .product-name {\r\n    word-wrap: break-word;\r\n    font-weight: bold;\r\n    font-family: \"museo-sans\", sans-serif;\r\n    white-space: normal;\r\n    height: auto;\r\n}\r\n\r\n/*center image*/\r\n\r\n.sub-product-img {\r\n    display: block;\r\n    margin: auto;\r\n    -o-object-fit: contain;\r\n       object-fit: contain;\r\n}\r\n\r\n.no-image {\r\n    width: 145px;\r\n    height: 100px;\r\n}\r\n\r\n.product-img-btn {\r\n    background-color: #DBDBDB;\r\n    border-radius: 50%;\r\n    border: 0;\r\n    outline: 0;\r\n    display: inline-block;\r\n    width: 1px;\r\n    height: 10px;\r\n    cursor: pointer;\r\n    margin-left: 1px;\r\n    margin-right: 1px;\r\n}\r\n\r\n.product-img-btn.active {\r\n        background-color: #61656F;\r\n        cursor: default;\r\n    }\r\n\r\n/*product row border*/\r\n\r\n#product-list-view table tbody tr {\r\n    padding: 20px 0px !important;\r\n    border-bottom: 2px solid #A7D7EE;\r\n    height: 150px;\r\n}\r\n\r\n/*.row.product-details{\r\n    border-bottom: 2px solid #A7D7EE;\r\n}*/\r\n\r\n/*hr.product-row-line {\r\n    border-width:2px;\r\n    border-color: #A7D7EE;\r\n}*/\r\n\r\n.product-grid-view .product-details {\r\n    margin-right: 10px;\r\n}\r\n\r\n/*.view-options*/\r\n\r\n/*.view-options {\r\n    position: absolute;\r\n    right: 220px;\r\n    top: 10px;\r\n    z-index: 1;\r\n}*/\r\n\r\n.view-options button:first-child, .view-options button:last-child {\r\n    width: 39px;\r\n}\r\n\r\n.view-options button {\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 40px;\r\n    border: none;\r\n    float: left;\r\n}\r\n\r\n.view-options button.display-view-list {\r\n        background-image: url(/Images/display-view-list.png);\r\n    }\r\n\r\n.view-options button.display-view-table {\r\n        background-image: url(/Images/display-view-table.png);\r\n    }\r\n\r\n.view-options button.display-view-grid {\r\n        background-image: url(/Images/display-view-grid.png);\r\n    }\r\n\r\n.view-options button.selected, .view-options button:hover {\r\n        background-position: 0 -30px;\r\n    }\r\n\r\n/* display button and context button shared styles*/\r\n\r\n.display-btn, .context-btn, .custom-btn {\r\n    height: 30px;\r\n    line-height: 18px;\r\n    display: inline-block;\r\n    color: #4d545d;\r\n    cursor: pointer;\r\n    border: 1px solid #b8b8b8;\r\n}\r\n\r\n/* context menu button */\r\n\r\n.context-btn {\r\n    padding: 0 10px 2px 6px;\r\n    margin: 8px 0 9px 0;\r\n    font-family: \"museo-sans\", sans-serif;\r\n    font-weight: 700;\r\n    line-height: 30px;\r\n}\r\n\r\n.context-btn img {\r\n        padding-right: 6px;\r\n        position: relative;\r\n        top: 2px;\r\n    }\r\n\r\n#productSearchBox {\r\n    width: 250px;\r\n}\r\n\r\n.sort-filter-container {\r\n    background-color: #effaff;\r\n    padding: 10px;\r\n}\r\n\r\n.sortby-container {\r\n    margin: 5px;\r\n}\r\n\r\n.sortby-container label {\r\n        font-weight: normal;\r\n        font-size: 11.7px;\r\n    }\r\n\r\n.filters-container {\r\n    background-color: #e5f2fa;\r\n    padding: 5px;\r\n}\r\n\r\n.filters-container label {\r\n        font-weight: normal;\r\n        font-size: 11.7px;\r\n    }\r\n\r\n.filters-container ul {\r\n        list-style-type: none;\r\n        padding: 0px;\r\n        margin: 0px;\r\n    }\r\n\r\n.filters-container li {\r\n        display: inline-block;\r\n    }\r\n\r\n.product-filters span.k-dropdown-wrap, .product-sort span.k-dropdown-wrap {\r\n    width: 175px;\r\n}\r\n\r\n/*Fix bootstrap inside kendo grid widget*/\r\n\r\n/* reset everything to the default box model */\r\n\r\n/**, :before, :after {\r\n    -webkit-box-sizing: content-box;\r\n    -moz-box-sizing: content-box;\r\n    box-sizing: content-box;\r\n}\r\n\r\n/* set a border-box model only to elements that need it */\r\n\r\n/*.form-control,\r\n.container,\r\n.container-fluid,\r\n.row,\r\n.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1,\r\n.col-xs-2, .col-sm-2, .col-md-2, .col-lg-2,\r\n.col-xs-3, .col-sm-3, .col-md-3, .col-lg-3,\r\n.col-xs-4, .col-sm-4, .col-md-4, .col-lg-4,\r\n.col-xs-5, .col-sm-5, .col-md-5, .col-lg-5,\r\n.col-xs-6, .col-sm-6, .col-md-6, .col-lg-6,\r\n.col-xs-7, .col-sm-7, .col-md-7, .col-lg-7,\r\n.col-xs-8, .col-sm-8, .col-md-8, .col-lg-8,\r\n.col-xs-9, .col-sm-9, .col-md-9, .col-lg-9,\r\n.col-xs-10, .col-sm-10, .col-md-10, .col-lg-10,\r\n.col-xs-11, .col-sm-11, .col-md-11, .col-lg-11,\r\n.col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}*/\r\n\r\n/*Table*/\r\n\r\n.tbl.grey thead tr th {\r\n    background-color: #616771;\r\n    border-color: #616771;\r\n}\r\n\r\n/*accessory-list-view layout*/\r\n\r\n@media screen and (min-width: 1350px) {\r\n    .accessory-list-view div.accessory-list-row {\r\n        width: 50%;\r\n        float: left;\r\n        background-color: #fff;\r\n    }\r\n}\r\n\r\n.accessory-list-view div.accessory-list-row {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n/*.product-filters span.k-dropdown-wrap, .product-sort span.k-dropdown-wrap {\r\n    width: 175px;\r\n}*/\r\n\r\n/*fixed kendo grid pager at bottom of page*/\r\n\r\n/*#product-list-view .k-grid-pager, #product-grid-view .k-grid-pager{\r\n    bottom:0;\r\n    position: fixed;\r\n    width: auto;\r\n    z-index: 1;\r\n}*/\r\n\r\n/*fixed kendo grid pager on top of page*/\r\n\r\n.fixed-pager {\r\n    top: 0;\r\n    position: fixed;\r\n    width: auto;\r\n    z-index: 1;\r\n}\r\n\r\n#scrollUpBtn {\r\n    bottom: 10px;\r\n    position: fixed;\r\n    left: 50%;\r\n    z-index: 1;\r\n    opacity: 0.8;\r\n}\r\n\r\n/*.product-image:hover {\r\n    position:relative;\r\n    top:0px;\r\n    left:0px;\r\n    width:100px !important;\r\n    height:auto;\r\n    display:block;\r\n    z-index:999;\r\n}*/\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productList.component.html":
/***/ (function(module, exports) {

module.exports = "<!--<style>\r\n    .k-grid-pager {\r\n        top: 0;\r\n        position: fixed;\r\n        width: auto;\r\n        z-index: 1;\r\n    }\r\n</style>-->\r\n\r\n<div class=\"sort-filter-container\">\r\n    <div class=\"sortby-container product-sort\">\r\n        <span>\r\n            <label>Sort by</label>\r\n            <!--<kendo-dropdownlist [data]=\"sortByDDLValues\"\r\n                            [textField]=\"'text'\" [valueField]=\"'value'\" [(ngModel)]=\"productSortBy\"\r\n                            (selectionChange)=\"sortProductsBy($event)\"></kendo-dropdownlist>-->\r\n            <input id=\"sortProductDLL\" />\r\n        </span>\r\n\r\n        <span class=\"view-options pull-right\">\r\n            \r\n\r\n            <span style=\"float:left; padding-right: 10px;\">\r\n                <label>Product status</label>\r\n                <kendo-dropdownlist [data]=\"productStatusOptions\"\r\n                                    [textField]=\"'text'\" [valueField]=\"'valueDecimal'\"\r\n                                    (selectionChange)=\"productFilterByDecimalValue($event, 'productStatusTypeId')\"\r\n                                    [valuePrimitive]=\"true\"\r\n                                    [(ngModel)]=\"selectedProductStatus\">\r\n                </kendo-dropdownlist>\r\n            </span>\r\n\r\n            <span style=\"float:left; padding-right: 10px;\">\r\n                <label>Inventory Status</label>\r\n                <kendo-dropdownlist [data]=\"inventoryStatusOptions\"\r\n                                    [textField]=\"'text'\" [valueField]=\"'valueDecimal'\"\r\n                                    (selectionChange)=\"productFilterByDecimalValue($event, 'inventoryStatusId')\"\r\n                                    [valuePrimitive]=\"true\"\r\n                                    [(ngModel)]=\"selectedInventoryStatus\">\r\n                </kendo-dropdownlist>\r\n            </span>\r\n\r\n            <span class=\"hidden-xs\">\r\n                <button class=\"display-btn display-view-table selected\" (click)=\"setViewOption(1)\" title=\"Table view\"></button>\r\n                <button class=\"display-btn display-view-list\" (click)=\"setViewOption(0)\" title=\"List view\"></button>\r\n                <button class=\"display-btn display-view-grid\" (click)=\"setViewOption(2)\" title=\"Grid view\"></button>\r\n            </span>\r\n\r\n\r\n            <!--<kendo-dropdownlist [data]=\"listItems\"\r\n                                [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                [(ngModel)]=\"selectedItem\">\r\n            </kendo-dropdownlist>-->\r\n        </span>\r\n    </div>\r\n\r\n    <div class=\"filters-container product-filters\">\r\n        <ul>\r\n            <!--Family (Sub Family)-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.MiniSplit\r\n                        || productFamilyId == enums.ProductFamilyEnum.MultiSplit\r\n                        || productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.SkyAir\r\n                        || productFamilyId == enums.ProductFamilyEnum.VRV) \">\r\n\r\n                <label>Sub Family</label>\r\n                <kendo-dropdownlist [data]=\"productSubFamilyDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productSubFamilySelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'productSubFamilyId')\"\r\n                                    [popupSettings]=\"{ width: 370 }\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Unit Type (Function Category)-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.MiniSplit\r\n                        || (productFamilyId == enums.ProductFamilyEnum.MultiSplit && (productModelTypeId == this.enums.ProductModelTypeEnum.Outdoor || productModelTypeId == this.enums.ProductModelTypeEnum.All))\r\n                        || productFamilyId == enums.ProductFamilyEnum.SkyAir\r\n                        || (productFamilyId == enums.ProductFamilyEnum.VRV && productModelTypeId == enums.ProductModelTypeEnum.Outdoor)   ) \">\r\n                <label>Unit Type</label>\r\n                <kendo-dropdownlist [data]=\"productFunctionCategoryDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productFunctionCategorySelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event,'productFunctionCategoryId')\"></kendo-dropdownlist>\r\n\r\n            </li>\r\n\r\n            <!--TODO: to be renamed-->\r\n            <!--Unit Style (Unit Installation Type)-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.MiniSplit\r\n                        || ((productFamilyId == enums.ProductFamilyEnum.AlthermaSplit || productFamilyId == enums.ProductFamilyEnum.AlthermaMonobloc) && productModelTypeId == enums.ProductModelTypeEnum.Outdoor)\r\n                        || (productFamilyId == enums.ProductFamilyEnum.MultiSplit && (productModelTypeId == enums.ProductModelTypeEnum.Indoor || productModelTypeId == enums.ProductModelTypeEnum.All))\r\n                        || productFamilyId == enums.ProductFamilyEnum.SkyAir\r\n                        || (productFamilyId == enums.ProductFamilyEnum.VRV && productModelTypeId == enums.ProductModelTypeEnum.Indoor)   ) \">\r\n                <label>Unit Style</label>\r\n                <kendo-dropdownlist [data]=\"unitInstallationTypeDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"unitInstallationTypeSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event,'unitInstallationTypeId')\"></kendo-dropdownlist>\r\n                <!--<input id=\"unitInstallationTypeDDL\" />-->\r\n            </li>\r\n\r\n            <!--Power Supply (Power Voltage)-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.MiniSplit\r\n                        || productFamilyId == enums.ProductFamilyEnum.AlthermaSplit\r\n                        || productFamilyId == enums.ProductFamilyEnum.AlthermaMonobloc\r\n                        || productFamilyId == enums.ProductFamilyEnum.MultiSplit\r\n                        || productFamilyId == enums.ProductFamilyEnum.SkyAir\r\n                        || productFamilyId == enums.ProductFamilyEnum.VRV\r\n                        || productFamilyId == enums.ProductFamilyEnum.Accessories) \">\r\n\r\n                <label>Power Supply </label>\r\n                <kendo-dropdownlist [data]=\"productPowerVoltageDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productPowerVoltageSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'productPowerVoltageTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Capacity (Tonnage)-->\r\n            <li *ngIf=\"( (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && productClassPIMId != enums.ProductClassPIMEnum.GasFurnace)\r\n                         || (productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem && productClassPIMId != enums.ProductClassPIMEnum.GasFurnace )\r\n                         || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && productClassPIMId != enums.ProductClassPIMEnum.GasFurnace )\r\n                         || (productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem && productClassPIMId != enums.ProductClassPIMEnum.GasFurnace ) )\r\n                        && productClassPIMId != enums.ProductClassPIMEnum.All \">\r\n\r\n                <label>Capacity</label>\r\n                <kendo-dropdownlist [data]=\"tonnageDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"tonnageSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'tonnage')\" title=\"Tonnage\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Capacity (Cooling Capacity Nominal)-->\r\n            <!--<li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && productClassPIMId == enums.ProductClassPIMEnum.Coil)\r\n                       || (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && productClassPIMId == enums.ProductClassPIMEnum.AirHandler) \">\r\n\r\n                <label>Capacity</label>\r\n                <kendo-dropdownlist [data]=\"coolingCapacityNominalDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"coolingCapacityNominalSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'coolingCapacityNominal')\" title=\"Cooling Capacity Nominal\"></kendo-dropdownlist>\r\n\r\n            </li>-->\r\n            <!--Capacity (Heating Capacity Rated)-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && productClassPIMId == enums.ProductClassPIMEnum.GasFurnace)\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem && productClassPIMId == enums.ProductClassPIMEnum.GasFurnace)\">\r\n\r\n                <label>Capacity</label>\r\n                <kendo-dropdownlist [data]=\"heatingCapacityRatedDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"heatingCapacityRatedSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'heatingCapacityRated')\" title=\"Heating Capacity Rated\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Compressor Type (Compressor Stage)-->\r\n            <li *ngIf=\"( (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.SplitAC || productClassPIMId == enums.ProductClassPIMEnum.SplitHP || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.SplitAC || productClassPIMId == enums.ProductClassPIMEnum.SplitHP || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem) \">\r\n\r\n                <label>Compressor Stage</label>\r\n                <kendo-dropdownlist [data]=\"productCompressorTypeDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productCompressorTypeSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'productCompressorTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Air Flow Rate High Cooling-->\r\n            <li *ngIf=\"( (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && productClassPIMId == enums.ProductClassPIMEnum.AirHandler)\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && productClassPIMId == enums.ProductClassPIMEnum.AirHandler)\r\n                        || productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem) \">\r\n\r\n                <label>Air Flow Rate High Cooling</label>\r\n                <kendo-dropdownlist [data]=\"airFlowRateHighCoolingDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"airFlowRateHighCoolingSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'airFlowRateHighCooling')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Air Flow Rate High Heating-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && productClassPIMId == enums.ProductClassPIMEnum.GasFurnace)\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && productClassPIMId == enums.ProductClassPIMEnum.GasFurnace)\">\r\n\r\n                <label>Air Flow Rate High Heating</label>\r\n                <kendo-dropdownlist [data]=\"airFlowRateHighHeatingDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"airFlowRateHighHeatingSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'airFlowRateHighHeating')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Gas Valve Type-->\r\n            <li *ngIf=\"( (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.GasFurnace || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || (productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem && (productClassPIMId == enums.ProductClassPIMEnum.PackagedGED))\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.GasFurnace || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem && (productClassPIMId == enums.ProductClassPIMEnum.PackagedGED)) ) \">\r\n\r\n                <label>Gas Valve Type</label>\r\n                <kendo-dropdownlist [data]=\"productGasValveTypeDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productGasValveTypeSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'productGasValveTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Motor Type-->\r\n            <li *ngIf=\"( (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.GasFurnace || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.GasFurnace || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem\r\n                        || productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem) \">\r\n\r\n                <label>Motor Type</label>\r\n                <kendo-dropdownlist [data]=\"productMotorSpeedTypeDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productMotorSpeedTypeSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'productMotorSpeedTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Installation Configutation Type-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.GasFurnace || productClassPIMId == enums.ProductClassPIMEnum.All))\r\n                        || (productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem && (productClassPIMId == enums.ProductClassPIMEnum.GasFurnace || productClassPIMId == enums.ProductClassPIMEnum.All))\">\r\n\r\n                <label>Installation Configutation Type</label>\r\n                <kendo-dropdownlist [data]=\"productInstallationConfigurationTypeDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productInstallationConfigurationTypeSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event, 'productInstallationConfigurationTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Heat Exchanger Type-->\r\n            <li *ngIf=\"(productFamilyId == enums.ProductFamilyEnum.VRV && (productModelTypeId == enums.ProductModelTypeEnum.Outdoor || productModelTypeId == this.enums.ProductModelTypeEnum.All) )\">\r\n                <label>Heat Exchanger Type</label>\r\n                <kendo-dropdownlist [data]=\"productHeatExchangerTypeDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productHeatExchangerTypeSelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event,'productHeatExchangerTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--Unit Type (Accessory Type)-->\r\n            <li *ngIf=\"productTypeId == enums.ProductTypeEnum.Accessory\">\r\n                <label>Unit Type</label>\r\n                <kendo-dropdownlist [data]=\"productAccessoryDDLValues\"\r\n                                    [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productAccessorySelectedValue\"\r\n                                    (selectionChange)=\"productFilter($event,'productAccessoryTypeId')\"></kendo-dropdownlist>\r\n            </li>\r\n\r\n            <!--<kendo-dropdownlist [data]=\"productCategoryDDLValues\"\r\n                           [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"productCategorySelectedValue\"\r\n                           (selectionChange)=\"productFilter($event,'productCategoryId')\"></kendo-dropdownlist>-->\r\n            <!--<kendo-dropdownlist [data]=\"coolingCapacityRatedDDLValues\"\r\n               [defaultItem]=\"defaultItem\" [textField]=\"'text'\" [valueField]=\"'value'\" [(value)]=\"coolingCapacityRatedSelectedValue\"\r\n               (selectionChange)=\"productFilter($event,'coolingCapacityRated')\"></kendo-dropdownlist>-->\r\n            <li>\r\n                <button class=\"btn btn-primary\" (click)=\"clearFilters()\" style=\"margin-left: 10px;\">RESET</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<!--product-table-view-->\r\n<div *ngIf=\"viewOption == 1 &&  gridData\" class=\"product-table-view hidden-xs\">\r\n    <product-details-tableView [user]=\"user\"\r\n                               [productFamilyId]=\"productFamilyId\" [productModelTypeId]=\"productModelTypeId\"\r\n                               [unitInstallationTypeId]=\"unitInstallationTypeId\" [productClassPIMId]=\"productClassPIMId\"\r\n                               [(gridViewData)]=\"gridViewData\" [skip]=\"skip\" [pageSize]=\"pageSize\"\r\n                               [basketQuoteId]=\"basketQuoteId\"\r\n                               (viewProductDetailsEvent)=\"viewProductDetails($event)\"\r\n                               (pageChangeEvt)=\"pageChange($event)\">\r\n    </product-details-tableView>\r\n</div>\r\n\r\n<!--product-list-view-->\r\n<div *ngIf=\"viewOption == 0\" class=\"product-list-view hidden-xs\">\r\n    <kendo-grid id=\"product-list-view\" *ngIf=\"gridData\" [data]=\"gridViewData\"\r\n                [skip]=\"skip\" [pageSize]=\"pageSize\" [pageable]=\"true\" (pageChange)=\"pageChange($event)\">\r\n\r\n        <kendo-grid-column field=\"product.name\">\r\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                <product-details-listView [user]=\"user\"\r\n                                          [(product)]=\"dataItem.product\"\r\n                                          [basketQuoteId]=\"basketQuoteId\"\r\n                                          (viewProductDetailsEvent)=\"viewProductDetails($event)\">\r\n                </product-details-listView>\r\n            </ng-template>\r\n        </kendo-grid-column>\r\n\r\n    </kendo-grid>\r\n</div>\r\n\r\n<!--product-grid-view-->\r\n<div *ngIf=\"viewOption == 2\" class=\"product-grid-view hidden-xs\">\r\n    <kendo-grid id=\"product-grid-view\" *ngIf=\"gridData\" [data]=\"gridViewData\" \r\n                [skip]=\"skip\" [pageSize]=\"pageSize\" [pageable]=\"true\" \r\n                (pageChange)=\"pageChange($event)\">\r\n\r\n        <kendo-grid-column>\r\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                <product-details-gridView [user]=\"user\"\r\n                                          [(product)]=\"dataItem.product\"\r\n                                          [basketQuoteId]=\"basketQuoteId\"\r\n                                          (viewProductDetailsEvent)=\"viewProductDetails($event)\">\r\n                </product-details-gridView>\r\n            </ng-template>\r\n        </kendo-grid-column>\r\n    </kendo-grid>\r\n</div>\r\n\r\n\r\n<!--Mobile-->\r\n<div class=\"product-grid-view visible-xs\">\r\n    <kendo-grid id=\"product-grid-view\" *ngIf=\"gridData\" [data]=\"gridViewData\" [skip]=\"skip\" [pageSize]=\"pageSize\" [pageable]=\"true\" (pageChange)=\"pageChange($event)\">\r\n\r\n        <kendo-grid-column>\r\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n                <product-details-gridView [(product)]=\"dataItem.product\"\r\n                                          [basketQuoteId]=\"basketQuoteId\"\r\n                                          (viewProductDetailsEvent)=\"viewProductDetails($event)\">\r\n                </product-details-gridView>\r\n            </ng-template>\r\n        </kendo-grid-column>\r\n    </kendo-grid>\r\n</div>\r\n\r\n<div id=\"scrollUpBtn\" class=\"text-center\" style=\"display:none\">\r\n    <button class=\"btn btn-primary\" style=\"width:25px;\" (click)=\"scrollUp()\"><span class=\"glyphicon glyphicon-arrow-up\"></span></button>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/productList.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var kendo_data_query_1 = __webpack_require__("./node_modules/@progress/kendo-data-query/dist/es/main.js");
var kendo_data_query_2 = __webpack_require__("./node_modules/@progress/kendo-data-query/dist/es/main.js");
/*
interface Item {
  text: string,
  value: number
}*/
var ProductListComponent = /** @class */ (function () {
    function ProductListComponent(toastrSvc, userSvc, enums, productSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        //public productFamilyId: any;
        //public productModelTypeId: any;
        //public unitInstallationTypeId: any;
        this.updateBasketEvent = new core_1.EventEmitter();
        this.showProductDetailsEvent = new core_1.EventEmitter();
        this.pageSize = 100;
        this.skip = 0;
        this.viewOption = 1;
        //Dropdowns
        //public sortByDDLValues: any = [{ text: "Model No.", value: "product.productNumber" },
        //                                { text: "Product description", value: "product.name" }];
        this.productSortBy = "product.productNumber";
        this.productFilters = [];
        this.defaultItem = { text: "Select...", value: null };
        this.productStatusOptions = [];
        this.inventoryStatusOptions = [];
        /*
        public productStatusOptions : Array<{ text: string, value: any }> = [
            { text: "Released", value: 111267 },
            { text: "Obsolete", value: 111268 },
            { text: "Hidden Module Unit", value: 111269 },
            { text: "All", value: null }
        ];*/
        //public selectedProductStatus: { text: string, value: any } = { text: "Released", value: 111267 };
        this.selectedProductStatus = 111267;
        this.selectedInventoryStatus = 0;
        this.firstViewCheckAfterOnChange = true;
    }
    ProductListComponent.prototype.ngOnChanges = function () {
        //console.log("ProductList: ---- ngOnChanges ----");
        this.firstViewCheckAfterOnChange = true;
        this.gridData = this.productsModel.products;
        this.gridFilteredData = this.gridData;
        this.loadProducts();
        this.skip = 0; // restart from page 1
        this.resetFilters();
        setTimeout(this.updateDropDownLists(this.gridData), 200); // wait 0.2 sec
        this.resetSortBy();
        setTimeout(this.setupGridHeight.bind(this), 200);
        //this.selectedProductStatus = { text: "Released", value: 111267 };
        if (this.productsModel.isSearch == true) {
            this.selectedProductStatus = 0; // All
        }
        else {
            this.selectedProductStatus = this.enums.ProductStatusTypeEnum.Active;
        }
        this.selectedInventoryStatus = 0; // All
        this.setDefaultFilters(this.productsModel.isSearch);
    };
    ProductListComponent.prototype.ngOnInit = function () {
        //console.log("ProductList: ngOnInit");
        var self = this;
        this.productSvc.getBasketQuoteId().then(this.getBasketQuoteIdCallback.bind(this));
        //var data = this.productSvc.getProducts().then(this.getProductsCallback.bind(this));
        this.setupAddProductsBtn();
        this.getProductStatusOptions();
        this.getInventoryStatusOptions();
    };
    ProductListComponent.prototype.ngDoCheck = function () {
    };
    ProductListComponent.prototype.ngAfterContentInit = function () {
    };
    ProductListComponent.prototype.ngAfterContentChecked = function () {
    };
    ProductListComponent.prototype.ngAfterViewInit = function () {
        setTimeout(this.setupDropDownFilters.bind(this), 200); // wait 0.2 sec
        this.setActiveViewOption();
        //this.setupPager();
    };
    ProductListComponent.prototype.ngAfterViewChecked = function () {
        //console.log("ProductList: ngAfterViewChecked");
        if (this.firstViewCheckAfterOnChange) {
            this.updateDropDownLists(this.gridData);
            this.firstViewCheckAfterOnChange = false;
        }
    };
    ProductListComponent.prototype.getProductStatusOptions = function () {
        var _this = this;
        this.productSvc.getProductStatuses().then(function (resp) {
            if (resp.isok) {
                _this.productStatusOptions = resp.model;
            }
            else {
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    ProductListComponent.prototype.getInventoryStatusOptions = function () {
        var _this = this;
        this.productSvc.getInventoryStatuses().then(function (resp) {
            if (resp.isok) {
                _this.inventoryStatusOptions = resp.model;
            }
            else {
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    ProductListComponent.prototype.setDefaultFilters = function (isSearch) {
        if (!isSearch) {
            this.productFilters.push({ field: "product.productStatusTypeId", operator: "eq", value: this.enums.ProductStatusTypeEnum.Active });
        }
        this.applyFilters();
    };
    ProductListComponent.prototype.setupAddProductsBtn = function () {
        var self = this;
        jQuery("#addProductsToQuoteBtn").click(function () {
            var data = {
                "Products": self.gridData
            };
            //self.loadingIconSvc.Start(jQuery("#productPageContainer"));
            self.blockUI.start('Loading...');
            self.productSvc.addProductsToQuote(data).then(function (resp) {
                //self.loadingIconSvc.Stop(jQuery("#productPageContainer"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                self.clearQuantities();
                self.updateBasketEvent.emit();
                //self.reloadGrid();
            }, function (resp) {
                //self.loadingIconSvc.Stop(jQuery("#productPageContainer"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                //TODO: create a log service for this
                for (var _i = 0, _a = resp.messages.items; _i < _a.length; _i++) {
                    var message = _a[_i];
                    console.log(message.text);
                }
            });
        });
    };
    ProductListComponent.prototype.clearQuantities = function () {
        for (var i = 0; i < this.gridViewData.data.length; i++) {
            this.gridViewData.data[i].product.quantity = 0;
        }
    };
    ProductListComponent.prototype.setupPager = function () {
        if (this.viewOption == 1) {
            this.setupGridHeight();
        }
        else {
            if (this.viewOption == 0) {
                var grid = jQuery("#product-list-view");
            }
            else if (this.viewOption == 2) {
                var grid = jQuery("#product-grid-view");
            }
            grid.find(".k-grid-pager").insertBefore(grid.find(".k-grid-content"));
            var pager = grid.find(".k-grid-pager");
            var viewOption = this.viewOption;
            //TODO: Hacking kendo grid css to fix kendo grid with custom pager
            //need to find a better solution
            var gridContainer = grid.find(".k-grid-container");
            gridContainer.css("display", "block");
            //================================================================
            resizeFixed();
            jQuery(window).resize(resizeFixed);
            jQuery(window).scroll(scrollFixed);
        }
        function resizeFixed() {
            pager.css("width", grid.width());
        }
        function scrollFixed() {
            if (viewOption != 1) {
                var offset = jQuery(this).scrollTop(), tableOffsetTop = grid.offset().top, tableOffsetBottom = tableOffsetTop + grid.height() - pager.height();
                if (offset < tableOffsetTop || offset > tableOffsetBottom) {
                    pager.removeClass("fixed-pager");
                    jQuery("#scrollUpBtn").css("display", "none");
                }
                else if (offset >= tableOffsetTop && offset <= tableOffsetBottom) {
                    pager.addClass("fixed-pager");
                    jQuery("#scrollUpBtn").css("display", "block");
                }
            }
        }
    };
    ProductListComponent.prototype.scrollUp = function () {
        jQuery('html, body').animate({ scrollTop: 0 }, 300);
    };
    ProductListComponent.prototype.setupGridHeight = function () {
        if (this.viewOption == 1) {
            var gridContent = jQuery(".k-grid-content");
            var gridHeaderH = jQuery(".k-grid-header").height();
            var gridPagerH = jQuery(".k-grid-header").height();
            var offsetTop = jQuery("#product-table-view").position().top;
            var windowHeight = jQuery(window).height();
            //old code - before kendo grid upgrade 
            //var gridHeight = windowHeight - offsetTop - gridHeaderH - gridPagerH - 5;
            //if (windowHeight > 750) {
            //    gridContent.height(gridHeight);
            //}
            //fix broken css after kendo angular grid upgrade to grid 1.2.1
            var gridContentHeight = 570 - gridHeaderH - gridPagerH;
            gridContent.height(gridContentHeight);
        }
    };
    ProductListComponent.prototype.setupDropDownFilters = function () {
        var self = this;
        //delete when Kendo-angular 2 DDL is used
        jQuery("#sortProductDLL").kendoDropDownList({
            dataSource: [{ text: "Model No.", value: "product.productNumber" },
                { text: "Product description", value: "product.name" }],
            dataTextField: "text",
            dataValueField: "value",
            change: function (e) {
                var value = this.value();
                self.productSortBy = value;
                self.sortBy(value);
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#unitInstallationTypeDDL").kendoDropDownList({
            dataSource: self.unitInstallationTypeDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            //value: self.unitInstallationTypeSelectedValue,
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                //self.unitInstallationTypeSelectedValue = value;
                self.productFilterJQ(value, 'unitInstallationTypeId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#productCategoryDDL").kendoDropDownList({
            dataSource: self.productCategoryDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'productCategoryId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#coolingCapacityRatedDDL").kendoDropDownList({
            dataSource: self.coolingCapacityRatedDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'coolingCapacityRated');
            }
        });
        jQuery("#coolingCapacityNominalDDL").kendoDropDownList({
            dataSource: self.coolingCapacityNominalDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'coolingCapacityNominal');
            }
        });
        jQuery("#heatingCapacityRatedDDL").kendoDropDownList({
            dataSource: self.heatingCapacityRatedDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'heatingCapacityRated');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#powerVoltageDDL").kendoDropDownList({
            dataSource: self.productPowerVoltageDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'productPowerVoltageTypeId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#heatExchangerTypeDDL").kendoDropDownList({
            dataSource: self.productHeatExchangerTypeDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'heatExchangerTypeId'); //heatExchangerTypeId does not have values in DB yet
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#compressorTypeDDL").kendoDropDownList({
            dataSource: self.productCompressorTypeDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'compressorTypeId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#gasValveTypeDDL").kendoDropDownList({
            dataSource: self.productGasValveTypeDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'gasValveTypeId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#motorTypeDDL").kendoDropDownList({
            dataSource: self.productMotorSpeedTypeDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'motorTypeId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#installationConfigurationTypeDDL").kendoDropDownList({
            dataSource: self.productInstallationConfigurationTypeDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'installationConfigurationTypeId');
            }
        });
        //delete when Kendo-angular 2 DDL is used
        jQuery("#airFlowRateTypeDDL").kendoDropDownList({
            dataSource: self.airFlowRateHighCoolingDDLValues,
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "Select ...",
                value: null
            },
            change: function (e) {
                var value = this.value();
                self.productFilterJQ(value, 'airFlowRateHighCooling');
            }
        });
    };
    ProductListComponent.prototype.pageChange = function (event) {
        this.skip = event.skip;
        this.loadProducts();
        var elem;
        if (this.viewOption == 1) {
            elem = document.querySelector("#product-table-view table tbody tr");
            elem.scrollIntoView();
        }
        else {
            elem = document.getElementById("productFamilyName");
            window.scrollTo(0, elem.offsetTop);
        }
    };
    ProductListComponent.prototype.getDistinctValues = function (valueId, description, data) {
        var flags = []; // flags[] is to keep track of what value is already added to distinctValues[]
        var distinctValues = [];
        var productArray = data;
        for (var i = 0; i < productArray.length; i++) {
            var item = { text: "", value: 0 };
            var value = productArray[i].product[valueId];
            if (description == null) {
                var text = productArray[i].product[valueId];
            }
            else {
                var text = productArray[i].product[description];
            }
            if ((flags[value] == true) || value == null) {
                continue;
            }
            else {
                item.text = text;
                item.value = value;
                distinctValues.push(item);
                flags[value] = true;
            }
        }
        distinctValues = this.sortDistinctValues(distinctValues);
        return distinctValues;
    };
    ProductListComponent.prototype.sortDistinctValues = function (distinctValues) {
        var sortedValues = [];
        if (distinctValues.length > 0) {
            if (isNaN(distinctValues[0].text)) {
                sortedValues = distinctValues.sort(function (a, b) {
                    if (a.text < b.text)
                        return -1;
                    if (a.text > b.text)
                        return 1;
                    return 0;
                });
            }
            else {
                sortedValues = distinctValues.sort(function (a, b) { return a.text - b.text; });
            }
        }
        else {
            return distinctValues;
        }
        return sortedValues;
    };
    ProductListComponent.prototype.getBasketQuoteIdCallback = function (resp) {
        if (resp.isok) {
            this.basketQuoteId = resp.model;
        }
    };
    ProductListComponent.prototype.loadProducts = function () {
        if (this.productsModel != undefined) {
            this.gridViewData = {
                data: this.gridFilteredData.slice(this.skip, this.skip + this.pageSize),
                total: this.gridFilteredData.length
            };
        }
    };
    ProductListComponent.prototype.loadProductsNoFilter = function () {
        if (this.productsModel != undefined) {
            this.gridViewData = {
                data: this.gridData.slice(this.skip, this.skip + this.pageSize),
                total: this.gridData.length
            };
        }
        this.updateDropDownLists(this.gridData);
        //this.setupDropDownFilters();
    };
    //This function is used for kendo-dropdownlist (angular 2)
    ProductListComponent.prototype.productFilter = function (selectedObj, field) {
        var fieldName = "product." + field;
        if (selectedObj == undefined || selectedObj.value == null) {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            if (this.productFilters.length > 0) {
                this.applyFilters();
            }
            else {
                this.loadProductsNoFilter();
            }
        }
        else {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            //add new filter value
            this.productFilters.push({ field: fieldName, operator: "eq", value: selectedObj.value });
            this.applyFilters();
        }
    };
    ProductListComponent.prototype.productFilterByDecimalValue = function (selectedObj, field) {
        var fieldName = "product." + field;
        if (selectedObj == undefined || selectedObj.value == null) {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            if (this.productFilters.length > 0) {
                this.applyFilters();
            }
            else {
                this.loadProductsNoFilter();
            }
        }
        else {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            //add new filter value
            this.productFilters.push({ field: fieldName, operator: "eq", value: selectedObj.valueDecimal });
            this.applyFilters();
        }
    };
    ProductListComponent.prototype.productFilterPrimitive = function (value, field) {
        var fieldName = "product." + field;
        if (value == null || value == 0) {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            if (this.productFilters.length > 0) {
                this.applyFilters();
            }
            else {
                this.loadProductsNoFilter();
            }
        }
        else {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            //add new filter value
            this.productFilters.push({ field: fieldName, operator: "eq", value: value });
            this.applyFilters();
        }
    };
    //This function is used for kendo-DDL (JQuery)
    ProductListComponent.prototype.productFilterJQ = function (value, field) {
        var fieldName = "product." + field;
        if (value == undefined || value == null || value == "") {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            if (this.productFilters.length > 0) {
                this.applyFilters();
            }
            else {
                this.loadProductsNoFilter();
            }
        }
        else {
            //Look for the filter by name and remove it from productFilters
            this.removeFilterByName(fieldName);
            //add new filter value
            this.productFilters.push({ field: fieldName, operator: "eq", value: value });
            this.applyFilters();
        }
    };
    ProductListComponent.prototype.removeFilterByName = function (fieldName) {
        for (var i = 0; i < this.productFilters.length; i++) {
            if (this.productFilters[i].field == fieldName) {
                this.productFilters.splice(i, 1);
            }
        }
    };
    ProductListComponent.prototype.applyFilters = function () {
        this.skip = 0; // reset to page 1
        var result = kendo_data_query_1.process(this.gridData, {
            sort: [{ field: this.productSortBy, dir: "asc" }],
            filter: {
                logic: "and",
                filters: this.productFilters
            }
        });
        this.gridViewData = {
            data: result.data.slice(this.skip, this.skip + this.pageSize),
            total: result.data.length
        };
        this.gridFilteredData = result.data;
        this.updateDropDownLists(result.data);
        //this.setupDropDownFilters();
    };
    //sortBy JQuery style
    ProductListComponent.prototype.sortBy = function (fieldName) {
        var result = kendo_data_query_2.orderBy(this.gridFilteredData, [{ field: fieldName, dir: "asc" }]);
        this.gridFilteredData = result; // filtered and sorted data
        this.gridViewData = {
            data: result.slice(this.skip, this.skip + this.pageSize),
            total: result.length
        };
    };
    //sortBy Angular 2 style
    //public sortBy(option: any) {
    //    var fieldName = option.value;
    //    const result = orderBy(this.gridFilteredData, [{ field: fieldName, dir: "asc" }]);
    //    this.gridFilteredData = result; // filtered and sorted data
    //    this.gridViewData = {
    //        data: result.slice(this.skip, this.skip + this.pageSize),
    //        total: result.length
    //    };
    //}
    ProductListComponent.prototype.clearFilters = function () {
        this.resetFilters();
        this.loadProductsNoFilter();
        this.resetSortBy();
    };
    ProductListComponent.prototype.resetFilters = function () {
        this.productFilters = [];
        //Kendo DDL angular 2 
        this.productSubFamilySelectedValue = null;
        this.productFunctionCategorySelectedValue = null;
        this.unitInstallationTypeSelectedValue = null;
        this.productPowerVoltageSelectedValue = null;
        this.tonnageSelectedValue = null;
        this.coolingCapacityRatedSelectedValue = null;
        this.coolingCapacityNominalSelectedValue = null;
        this.heatingCapacityRatedSelectedValue = null;
        this.productCompressorTypeSelectedValue = null;
        this.airFlowRateHighCoolingSelectedValue = null;
        this.airFlowRateHighHeatingSelectedValue = null;
        this.productGasValveTypeSelectedValue = null;
        this.productMotorSpeedTypeSelectedValue = null;
        this.productInstallationConfigurationTypeSelectedValue = null;
        this.productHeatExchangerTypeSelectedValue = null;
        this.productAccessorySelectedValue = null;
        //this.selectedProductStatus = this.enums.ProductStatusTypeEnum.Active;
        this.selectedProductStatus = 0; // All
        this.selectedInventoryStatus = 0; // All
        //this.productCategorySelectedValue = null;
        //delete when Kendo DDL angular 2 is used
        if (jQuery("#unitInstallationTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#unitInstallationTypeDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#productCategoryDDL").data("kendoDropDownList") != undefined) {
            jQuery("#productCategoryDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#coolingCapacityRatedDDL").data("kendoDropDownList") != undefined) {
            jQuery("#coolingCapacityRatedDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#coolingCapacityNominalDDL").data("kendoDropDownList") != undefined) {
            jQuery("#coolingCapacityNominalDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#heatingCapacityRatedDDL").data("kendoDropDownList") != undefined) {
            jQuery("#heatingCapacityRatedDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#powerVoltageDDL").data("kendoDropDownList") != undefined) {
            jQuery("#powerVoltageDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#heatExchangerTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#heatExchangerTypeDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#compressorTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#compressorTypeDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#gasValveTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#gasValveTypeDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#motorTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#motorTypeDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#installationConfigurationTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#installationConfigurationTypeDDL").data("kendoDropDownList").value("");
        }
        if (jQuery("#airFlowRateTypeDDL").data("kendoDropDownList") != undefined) {
            jQuery("#airFlowRateTypeDDL").data("kendoDropDownList").value("");
        }
        this.gridFilteredData = this.gridData;
        //reset sortby
        //jQuery("#sortProductDLL").kendoDropDownList().select(0);
    };
    ProductListComponent.prototype.resetSortBy = function () {
        var sortDDL = jQuery("#sortProductDLL").data("kendoDropDownList");
        if (sortDDL != undefined) {
            sortDDL.select(0);
            sortDDL.trigger("change");
        }
    };
    ProductListComponent.prototype.updateDropDownLists = function (data) {
        this.productSubFamilyDDLValues = this.getDistinctValues("productSubFamilyId", "productSubFamilyName", data);
        this.productFunctionCategoryDDLValues = this.getDistinctValues("productFunctionCategoryId", "productFunctionCategoryName", data);
        this.unitInstallationTypeDDLValues = this.getDistinctValues("unitInstallationTypeId", "unitInstallationTypeDescription", data);
        this.productPowerVoltageDDLValues = this.getDistinctValues("productPowerVoltageTypeId", "productPowerVoltageTypeDescription", data);
        this.tonnageDDLValues = this.getDistinctValues("tonnage", null, data);
        this.coolingCapacityRatedDDLValues = this.getDistinctValues("coolingCapacityRated", null, data);
        this.coolingCapacityNominalDDLValues = this.getDistinctValues("coolingCapacityNominal", null, data);
        this.heatingCapacityRatedDDLValues = this.getDistinctValues("heatingCapacityRated", null, data);
        this.productCompressorTypeDDLValues = this.getDistinctValues("productCompressorTypeId", "productCompressorTypeDescription", data);
        this.airFlowRateHighCoolingDDLValues = this.getDistinctValues("airFlowRateHighCooling", null, data);
        this.airFlowRateHighHeatingDDLValues = this.getDistinctValues("airFlowRateHighHeating", null, data);
        this.productGasValveTypeDDLValues = this.getDistinctValues("productGasValveTypeId", "productGasValveTypeDescription", data);
        this.productMotorSpeedTypeDDLValues = this.getDistinctValues("productMotorSpeedTypeId", "productMotorSpeedTypeDescription", data);
        this.productInstallationConfigurationTypeDDLValues = this.getDistinctValues("productInstallationConfigurationTypeId", "productInstallationConfigurationTypeDescription", data);
        this.productHeatExchangerTypeDDLValues = this.getDistinctValues("productHeatExchangerTypeId", "productHeatExchangerTypeDescription", data);
        this.productAccessoryDDLValues = this.getDistinctValues("productAccessoryTypeId", "productAccessoryTypeDescription", data);
        //deprecated
        //this.coolingCapacityNominalDDLValues = this.getDistinctValues("coolingCapacityNominal", null, data);
        //this.productCategoryDDLValues = this.getDistinctValues("productCategoryId", "productCategoryName", data);
        this.setupDropDownFilters();
    };
    //public startSpinning(target: any) {
    //    var element = jQuery(target);
    //    kendo.ui.progress(element, true);
    //    //setTimeout(function () {
    //    //    kendo.ui.progress(element, false);
    //    //}, 5000);
    //}
    ProductListComponent.prototype.viewProductDetails = function (eventParams) {
        this.showProductDetailsEvent.emit(eventParams);
    };
    ProductListComponent.prototype.setViewOption = function (viewOpt) {
        this.viewOption = viewOpt;
        setTimeout(this.setupPager.bind(this), 200);
    };
    ProductListComponent.prototype.setActiveViewOption = function () {
        jQuery('.view-options button').click(function () {
            jQuery('.view-options button').each(function () {
                jQuery(this).removeClass('selected');
            });
            jQuery(this).addClass('selected');
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "productsModel", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "productFamilyId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "productTypeId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "productModelTypeId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "unitInstallationTypeId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProductListComponent.prototype, "productClassPIMId", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProductListComponent.prototype, "updateBasketEvent", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProductListComponent.prototype, "showProductDetailsEvent", void 0);
    ProductListComponent = __decorate([
        core_1.Component({
            selector: 'product-list',
            template: __webpack_require__("./src/app/product/components/productList.component.html"),
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, product_service_1.ProductService])
    ], ProductListComponent);
    return ProductListComponent;
}());
exports.ProductListComponent = ProductListComponent;
;


/***/ }),

/***/ "./src/app/product/components/products.component.html":
/***/ (function(module, exports) {

module.exports = "<!--<div *ngIf=\"basketQuoteId!=0\">ActiveQuoteId: {{basketQuoteId}}</div>-->\r\n\r\n<basket id=\"userBasket\" [userBasket]=\"userBasket\" \r\n        [productFamilyId]=\"productFamilyId\" \r\n        [productModelTypeId]=\"productModelTypeId\" \r\n        [productData]=\"productData\">\r\n</basket>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">   <!--*blockUI=\"'product-list'\"-->\r\n\r\n        <!--Product Family Tabs-->\r\n        <div id=\"productPageContainer\">\r\n\r\n            <nav id=\"productTabs\" class='navbar navbar-default'>\r\n                <div class='container-fluid navibar'>\r\n                    <div class=\"navbar-header\">\r\n                        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#productFamilyTabs\">\r\n                            <span class=\"icon-bar\"></span>\r\n                            <span class=\"icon-bar\"></span>\r\n                            <span class=\"icon-bar\"></span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"collapse navbar-collapse\" id=\"productFamilyTabs\">\r\n                        <ul class='nav navbar-nav productFamilyTab'>\r\n                            <li id=\"product-family-tab-home\"> <a href=\"/v3/#/product\" (click)=\"showProductHome()\">PRODUCT HOME</a></li>\r\n                            <li *ngFor=\"let item of productFamilyTabs ; let idx = index\" attr.id=\"product-family-tab-{{item.productFamilyId}}\">\r\n                                <a (click)=\"GetProducts(item.productFamilyId,null)\">{{item.name | uppercase}}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <!--Product Home Tab Content-->\r\n            <div id=\"productHome\" class=\"product-family-listing-outer\">\r\n                <div class=\"row\">\r\n                    <h1 *ngIf=\"showProductHomeContent\" class=\"pull-left\">Our Product Ranges</h1>\r\n                    <h1 *ngIf=\"productFamilyId && showProductGrid\" id=\"productFamilyName\" class=\"pull-left\">{{productFamilyName}}</h1>\r\n                    <div class=\"pull-right productSearch\">\r\n                        <input type=\"text\" class=\"k-input k-textbox\"\r\n                               id=\"productSearchBox\"\r\n                               name=\"productSearchFilter\"\r\n                               placeholder=\" Search {{productSearchTextHolder}} Products\" />\r\n                        <button id=\"productSearchBtn\" (click)=\"searchProducts()\"><span class=\"k-icon k-i-search\"></span></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul *ngIf=\"showProductHomeContent\" class=\"product-family-listing-inner\">\r\n\r\n                    <li *ngFor=\"let item of productFamilyTabs ; let idx = index\" style=\"width: 160px; height:300px;\">\r\n\r\n                        <a (click)=\"GetProducts(item.productFamilyId,null)\">\r\n                            <img src=\"/image/10/{{item.productFamilyId}}\" onerror=\"this.onerror = null;\r\n                                    this.src = '/v3/src/assets/images/product-family-noimage.png'\"\r\n                                 style=\"height: 170px; width: 160px;\" />\r\n                            <div class=\"fam-description\" style=\"height:100px;\">\r\n                                <h4 style=\"font-size: 1.4em;\">{{item.name | uppercase}}</h4>\r\n                                <span>View Range</span>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <!--Product List-->\r\n            <div *ngIf=\"showProductGrid\">\r\n                <!--Product Sub-Tabs-->\r\n                <div class=\"scrollmenu\" id=\"productModelTypeTabs\"\r\n                     *ngIf=\"productFamilyId && (productFamilyId == enums.ProductFamilyEnum.AlthermaSplit \r\n                            || productFamilyId == enums.ProductFamilyEnum.AlthermaMonobloc \r\n                            || productFamilyId == enums.ProductFamilyEnum.MultiSplit \r\n                            || productFamilyId == enums.ProductFamilyEnum.VRV\r\n                            || productFamilyId == enums.ProductFamilyEnum.MiniSplit\r\n                            || productFamilyId == enums.ProductFamilyEnum.SkyAir)\" >\r\n                    <ul class=\"sub-tab-bar tabbar-fullwidth\">\r\n                        <li id=\"subTab-111533\"  \r\n                            *ngIf=\"productFamilyId && (productFamilyId == enums.ProductFamilyEnum.SkyAir \r\n                            || productFamilyId == enums.ProductFamilyEnum.MiniSplit)\" >\r\n                            <a (click)=\"GetProducts(productFamilyId, enums.ProductModelTypeEnum.System)\"> SYSTEM </a>\r\n                        </li>\r\n                        <li id=\"subTab-111531\"> \r\n                            <a (click)=\"GetProducts(productFamilyId, enums.ProductModelTypeEnum.Indoor)\"> INDOOR </a> \r\n                        </li>\r\n                        <li id=\"subTab-111532\"> \r\n                            <a (click)=\"GetProducts(productFamilyId, enums.ProductModelTypeEnum.Outdoor)\"> OUTDOOR </a> \r\n                        </li>\r\n                        <li id=\"subTab-100000999\"> \r\n                            <a (click)=\"GetProducts(productFamilyId,100000999)\"> ALL </a> \r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <!--show InstallationTypes Tabs when ProductFamilyName == Unitary Split || Unitary Package || Commercial Split -->\r\n                <!--<div class=\"scrollmenu\" *ngIf=\"productFamilyId && (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem || productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem || productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem || productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem )\" id=\"unitInstallationTypeTabs\">\r\n                <ul class=\"sub-tab-bar\">\r\n                    <li *ngFor=\"let item of unitInstallationTypeTabs; let idx = index\" attr.id=\"subTab-{{item.id}}\"> <a (click)=\"GetProductsByUnitInstallationType(productFamilyId,item.id)\"> {{item.description | uppercase}} </a> </li>\r\n                    <li id=\"subTab-100000999\"><a (click)=\"GetProductsByUnitInstallationType(productFamilyId, 100000999)\"> ALL </a></li>\r\n                </ul>\r\n\r\n            </div>-->\r\n                <!--show InstallationTypes Tabs when ProductFamilyName == Unitary Split || Unitary Package || Commercial Split -->\r\n                <div class=\"scrollmenu\" id=\"unitInstallationTypeTabs\" \r\n                     *ngIf=\"productFamilyId && (productFamilyId == enums.ProductFamilyEnum.UnitarySplitSystem \r\n                            || productFamilyId == enums.ProductFamilyEnum.UnitaryPackagedSystem \r\n                            || productFamilyId == enums.ProductFamilyEnum.LightCommercialSplitSystem \r\n                            || productFamilyId == enums.ProductFamilyEnum.LightCommercialPackagedSystem )\" >\r\n                    <ul class=\"sub-tab-bar tabbar-fullwidth\">\r\n                        <li *ngFor=\"let item of productClassPIMTabs; let idx = index\" attr.id=\"subTab-{{item.id}}\">\r\n                            <a (click)=\"GetProductsByProductClassPIMId(productFamilyId,item.id)\"> {{item.description | uppercase}} </a> \r\n                        </li>\r\n                        <li id=\"subTab-100000999\">\r\n                            <a (click)=\"GetProductsByProductClassPIMId(productFamilyId, 100000999)\"> ALL </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <!--Product grid and filters-->\r\n                <!--<product-list id=\"productGrid\" *ngIf=\"productData\" [productsModel]=\"productData\"\r\n                          [productFamilyId]=\"productFamilyId\"\r\n                          [productModelTypeId]=\"productModelTypeId\"\r\n                          [unitInstallationTypeId]=\"unitInstallationTypeId\"\r\n                          (updateBasketEvent)=\"updateUserBasket()\"\r\n                          (showProductDetailsEvent)=\"showProductDetails($event)\">\r\n\r\n            </product-list>-->\r\n                <!--How to put event emitter on router-outlet?-->\r\n                <!--<router-outlet name=\"productList\"></router-outlet>-->\r\n\r\n                <!--<div *blockUI=\"'product-list'\">-->\r\n                    <product-list id=\"productGrid\" *ngIf=\"productData\"\r\n                                  [user]=\"user\"\r\n                                  [productsModel]=\"productData\"\r\n                                  [productFamilyId]=\"productFamilyId\"\r\n                                  [productTypeId]=\"productTypeId\"\r\n                                  [productModelTypeId]=\"productModelTypeId\"\r\n                                  [unitInstallationTypeId]=\"unitInstallationTypeId\"\r\n                                  [productClassPIMId]=\"productClassPIMId\"\r\n                                  (updateBasketEvent)=\"updateUserBasket()\"\r\n                                  (showProductDetailsEvent)=\"productDetails($event)\">\r\n                    </product-list>\r\n                <!--</div>-->\r\n            </div>\r\n\r\n            <!--<router-outlet name=\"productDetails\"></router-outlet>-->\r\n            <!--<div *ngIf=\"!showProductGrid && product\">\r\n            <product-details [product]=\"product\" [userBasket]=\"userBasket\" ></product-details>\r\n        </div>-->\r\n            <!--<div *ngIf=\"!showProductGrid && product\" style=\"margin-bottom:50px;\">\r\n            <product-details></product-details>\r\n        </div>-->\r\n            <!--<div style=\"margin-bottom:50px;\">\r\n            <router-outlet name=\"productDetails\"></router-outlet>\r\n        </div>-->\r\n\r\n            <div>\r\n                <router-outlet name=\"productDetails\"></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/product/components/products.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var ProductsComponent = /** @class */ (function () {
    function ProductsComponent(router, route, toastrSvc, userSvc, enums, productSvc, basketSvc, locationSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.locationSvc = locationSvc;
        this.productSearchTextHolder = "All";
        this.showProductGrid = true;
        this.showProductHomeContent = true;
        this.product = null;
        this.hasRoutedBack = false;
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    ProductsComponent.prototype.ngOnInit = function () {
        var _this = this;
        var hash = window.location.hash;
        if (hash.includes("#/product/(productDetails:")) {
            this.showProductHomeContent = false;
            //$("#addProductsToQuoteBtn").hide();
        }
        //if (this.productSvc.productFamilyTabs == undefined) {
        //    this.productSvc.getProductFamilies().then(this.getProductFamiliesCallback.bind(this));
        //} else {
        //    this.productFamilyTabs = this.productSvc.productFamilyTabs;
        //}
        if (this.userSvc.currentUser == undefined) {
            this.userSvc.getCurrentUser().then(function (resp) {
                if (resp.isok) {
                    _this.userSvc.currentUser = resp.model;
                    _this.productFamilyTabs = resp.model.productFamilyAccesses;
                }
            });
        }
        else {
            this.productFamilyTabs = this.userSvc.currentUser.productFamilyAccesses;
        }
        this.basketSvc.getBasket().then(this.getBasketCallback.bind(this));
    };
    ProductsComponent.prototype.ngDoCheck = function () {
        var hash = window.location.hash;
        if (hash == "#/product" && this.productFamilyId != null) {
            this.showProductGrid = true;
        }
        else if (hash.includes("#/product/(productDetails:")) {
            this.showProductGrid = false;
        }
    };
    ProductsComponent.prototype.ngAfterContentInit = function () {
        this.userSvc.isAuthenticated().then(function (resp) {
            if (!resp.isok || resp.model != true) {
                //Go back to login page
                window.location.href = "/v3/#/account/login";
            }
        });
        jQuery('#userBasket').insertBefore('#main-container');
        jQuery('#productTabs').insertBefore('#main-container');
        //this.productFamilyTabs = this.userSvc.currentUser.productFamilyAccesses;
        //working ok, but slow
        //if (this.productSvc.productFamilyTabs == undefined || this.productSvc.productFamilyTabs.length == 0) {
        //    this.productSvc.getProductFamilies().then(this.getProductFamiliesCallback.bind(this));
        //} else {
        //    this.productFamilyTabs = this.productSvc.productFamilyTabs;
        //}
    };
    ProductsComponent.prototype.ngAfterViewChecked = function () {
        //this.setupActiveTab();
        this.setupSearchProduct();
    };
    ProductsComponent.prototype.ngOnDestroy = function () {
        jQuery('#content > #userBasket').remove();
        jQuery('#content > #productTabs').remove();
    };
    ProductsComponent.prototype.getBasketCallback = function (resp) {
        if (resp.isok) {
            this.userBasket = resp.model;
            this.basketSvc.userBasket = resp.model;
            jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
        }
    };
    ProductsComponent.prototype.updateUserBasket = function () {
        this.basketSvc.getBasket().then(this.getBasketCallback.bind(this));
        //TODO: remove GetProducts, clear quantities on gridViewData instead
        //this.GetProducts(this.productFamilyId, this.productModelTypeId);
        //kendo.ui.progress(productGrid, true);
    };
    ProductsComponent.prototype.getProductFamiliesCallback = function (resp) {
        if (resp.isok) {
            this.productFamilyTabs = resp.model.productFamilyTabs;
        }
    };
    ProductsComponent.prototype.GetProducts = function (productFamilyId, productModelTypeId) {
        var _this = this;
        this.blockUI.start("Loading...");
        this.showProductGrid = true;
        this.showProductHomeContent = false;
        this.productFamilyId = productFamilyId;
        this.productModelTypeId = productModelTypeId;
        this.productTypeId = this.enums.ProductTypeEnum.Equipment;
        jQuery("#productSearchBox")[0].value = "";
        var data = {
            "ProductFamilyId": this.productFamilyId,
            "ProductModelTypeId": this.productModelTypeId
        };
        this.productSvc.getProducts(data).subscribe(function (res) { return _this.GetProductsCallback(res); });
    };
    //deprecated
    ProductsComponent.prototype.GetProductsByUnitInstallationType = function (productFamilyId, unitInstallationTypeId) {
        var _this = this;
        this.productFamilyId = productFamilyId;
        this.unitInstallationTypeId = unitInstallationTypeId;
        var data = {
            "ProductFamilyId": this.productFamilyId,
            "UnitInstallationTypeId": this.unitInstallationTypeId
        };
        var productGrid = jQuery("#productGrid");
        if (productGrid != undefined) {
            //kendo.ui.progress(productGrid, true);
        }
        //this.productSvc.getProducts(data).then(this.GetProductsCallback.bind(this));
        this.productSvc.getProducts(data).subscribe(function (res) { return _this.GetProductsCallback(res); });
    };
    ProductsComponent.prototype.GetProductsByProductClassPIMId = function (productFamilyId, productClassPIMId) {
        var _this = this;
        this.productFamilyId = productFamilyId;
        this.productClassPIMId = productClassPIMId;
        //this.productSvc.productFamilyId = productFamilyId;
        //this.productSvc.unitInstallationTypeId = unitInstallationTypeId;
        var data = {
            "ProductFamilyId": this.productFamilyId,
            "ProductClassPIMId": this.productClassPIMId
        };
        var productGrid = jQuery("#productGrid");
        this.blockUI.start('Loading...');
        //if (this.hasRoutedBack)
        //this.blockUIList.start('Loading...');
        if (productGrid != undefined) {
            //kendo.ui.progress(productGrid, true);
            //this.blockUIList.start('Loading...');
        }
        //this.productSvc.getProducts(data).then(this.GetProductsCallback.bind(this));
        this.productSvc.getProducts(data).subscribe(function (res) { return _this.GetProductsCallback(res); });
    };
    ProductsComponent.prototype.GetProductsCallback = function (resp) {
        if (resp.isok) {
            this.productData = resp.model;
            this.productFamilyName = resp.model.productFamilyName;
            //this.productTypeId = this.enums.ProductTypeEnum.Equipment;
            this.productSearchTextHolder = resp.model.productFamilyName;
            this.unitInstallationTypeTabs = resp.model.unitInstallationTypeTabs;
            this.productClassPIMTabs = resp.model.productClassPIMTabs;
            this.productModelTypeId = this.productData.productModelTypeId;
            this.unitInstallationTypeId = this.productData.unitInstallationTypeId; // deprecated
            this.productClassPIMId = this.productData.productClassPIMId;
            setTimeout(this.setupActiveTab.bind(this), 200); // wait 0.2 sec
            this.blockUI.stop();
        }
        else {
            this.blockUI.stop();
        }
        this.router.navigate(['/product']);
    };
    ProductsComponent.prototype.showProductHome = function () {
        this.showProductHomeContent = true;
        this.productFamilyId = null;
        this.setupActiveTab();
        //this.productSvc.productFamilyId = null;
        this.productFamilyName = null;
        this.productSearchTextHolder = "All";
        jQuery("#productSearchBox")[0].value = "";
        this.productData = null;
    };
    ProductsComponent.prototype.setupActiveTab = function () {
        //Product family tabs
        jQuery('.productFamilyTab li').each(function () {
            jQuery(this).removeClass('active');
        });
        if (this.productFamilyId != null) {
            if (this.productTypeId == this.enums.ProductTypeEnum.Accessory) {
                var activeFamilyTabId = "#product-family-tab-accessories";
            }
            else {
                var activeFamilyTabId = "#product-family-tab-" + this.productFamilyId;
            }
        }
        else {
            var activeFamilyTabId = "#product-family-tab-home";
        }
        jQuery(activeFamilyTabId).addClass("active");
        //Sub tabs
        jQuery('.sub-tab-bar li').each(function () {
            jQuery(this).removeClass('active-tab');
        });
        if (this.productModelTypeId != null) {
            var activeSubTabId = "#subTab-" + this.productModelTypeId;
        }
        else if (this.productClassPIMId != null) {
            var activeSubTabId = "#subTab-" + this.productClassPIMId;
        }
        jQuery(activeSubTabId).addClass("active-tab");
    };
    ProductsComponent.prototype.setupSearchProduct = function () {
        var self = this;
        jQuery("#productSearchBox").keyup(function (event) {
            event.stopImmediatePropagation();
            if (event.keyCode == 13) {
                jQuery("#productSearchBtn").click();
            }
        });
    };
    ProductsComponent.prototype.searchProducts = function () {
        var self = this;
        self.showProductHomeContent = false;
        self.showProductGrid = true;
        var value = jQuery("#productSearchBox")[0].value;
        //self.blockUI.start('Loading...');
        if (value) {
            self.blockUI.start('Loading...');
            var data = {
                "ProductFamilyId": self.productFamilyId ? self.productFamilyId : null,
                "IsSearch": true,
                "Filter": value
            };
            var productGrid = jQuery("#productGrid");
            if (productGrid != undefined) {
                //kendo.ui.progress(productGrid, true);
            }
            self.productSvc.getProducts(data).subscribe(function (res) { return self.GetProductsCallback(res); });
            // self.GetProductsCallback.bind(self));
        }
        else {
            self.blockUI.stop();
        }
    };
    ProductsComponent.prototype.productDetails = function (eventParams) {
        this.showProductGrid = false;
        this.product = eventParams.product; // may not needed
        this.productSvc.product = eventParams.product;
        this.router.navigate(['/product', { outlets: { 'productDetails': [eventParams.product.productId] } }], { queryParams: { activeTab: eventParams.activeTab } });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProductsComponent.prototype, "blockUI", void 0);
    ProductsComponent = __decorate([
        core_1.Component({
            selector: 'products',
            template: __webpack_require__("./src/app/product/components/products.component.html"),
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, product_service_1.ProductService,
            basket_service_1.BasketService, common_1.Location])
    ], ProductsComponent);
    return ProductsComponent;
}());
exports.ProductsComponent = ProductsComponent;
;


/***/ }),

/***/ "./src/app/product/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/product/services/product.service.ts"));
__export(__webpack_require__("./src/app/product/components/products.component.ts"));
__export(__webpack_require__("./src/app/product/components/productList.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-details-listView.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-details-tableView.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-details-gridView.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-image.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-spec-bars.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-quantity-input.component.ts"));
__export(__webpack_require__("./src/app/product/components/product-quantity-add.component.ts"));
__export(__webpack_require__("./src/app/product/components/productFamilyGrid.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/product-details.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/product-overview.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/product-overview-info.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/related-documents-accessories.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/product-accessories.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-accessories.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-other.component.ts"));
__export(__webpack_require__("./src/app/product/components/productDetails/technicalSpecifications/technical-specifications-systemHP.component.ts"));


/***/ }),

/***/ "./src/app/product/services/product.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import 'rxjs/add/operator/toPromise';
var ProductService = /** @class */ (function () {
    function ProductService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    ProductService.prototype.getBasketQuoteId = function () {
        return this.http.get("/api/Product/GetBasketQuoteId", { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    //Go to product page & reset session["BasketQuoteId"] = 0
    ProductService.prototype.products = function () {
        return this.http.get("/api/Product/Products", { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.browseProductsWithQuoteId = function (quoteId) {
        return this.http.get("/api/Product/BrowseProductsWithQuoteId?quoteId=" + quoteId, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.getProductFamilies = function () {
        return this.http.get("/api/Product/GetProductFamilies", { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.getInstallationTypes = function (data) {
        return this.http.post("/api/Product/GetInstallationTypes", data, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.getProductStatuses = function () {
        return this.http.get("/api/Product/GetProductStatuses", { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.getInventoryStatuses = function () {
        return this.http.get("/api/Product/GetInventoryStatuses", { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.getProducts = function (data) {
        ///return this.http.post("/api/Product/GetProducts", data, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
        return this.http.post("/api/Product/GetProducts", data, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProductService.prototype.getProduct = function (data) {
        return this.http.post("/api/Product/GetProduct", data, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    //public getAccessories(data: any) {
    //    return this.http.post("/api/Product/GetAccessories", data, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    //}
    //add multiple products
    ProductService.prototype.addProductsToQuote = function (data) {
        return this.http.post("/api/Product/AddProductsToQuote", data, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    //add single product
    ProductService.prototype.addProductToQuote = function (product) {
        return this.http.post("/api/Product/AddProductToQuote", product, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.addProductToQuoteByProductNumber = function (product) {
        return this.http.post("/api/Product/AddProductToQuoteByProductNumber", product, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    ProductService.prototype.addSystemToQuote = function (system) {
        return this.http.post("/api/Product/AddSystemToQuote", system, { headers: this.headers })
            .toPromise().then(this.extractData).catch(this.handleError);
    };
    //This service returns HTML as string 
    ProductService.prototype.getSubmittalDataSheet = function (ProductNumber) {
        //return this.http.get("/ProductDashboard/SubmittalTemplateHtml?ProductNumber=FDXS12LVJURXS12LVJU&PdfMode=true").toPromise().then(this.extractHtml).catch(this.handleError);
        return this.http.get("/ProductDashboard/SubmittalTemplateHtml?ProductNumber=" + ProductNumber + "&PdfMode=true")
            .toPromise().then(this.extractHtml).catch(this.handleError);
    };
    ProductService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    ProductService.prototype.extractHtml = function (res) {
        return res._body;
    };
    ProductService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        //this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    ProductService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], ProductService);
    return ProductService;
}());
exports.ProductService = ProductService;


/***/ }),

/***/ "./src/app/product/services/productFamily.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/catch.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/do.js");
__webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
var ProductFamilyService = /** @class */ (function () {
    function ProductFamilyService(_http) {
        this._http = _http;
        this._productFamilyUrl = '/api/Product/GetProductFamilies';
    }
    //getProductFamilies(): Observable<IProductFamily[]> {
    //    return this._http.get(this._productFamilyUrl)
    //        .map((response: Response) => <IProductFamily[]>response.json())
    //        .do(data => console.log('All: ' + JSON.stringify(data)))
    //        .catch(this.handleError);
    //}
    ProductFamilyService.prototype.getProductFamilies = function () {
        return this._http.get(this._productFamilyUrl)
            .map(function (response) { return response.json().data; })
            .do(function (data) { return console.log('All: ' + JSON.stringify(data)); })
            .catch(this.handleError);
    };
    ProductFamilyService.prototype.handleError = function (error) {
        console.error(error);
        return Observable_1.Observable.throw(error.json().error || 'Server error');
    };
    ProductFamilyService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.Http])
    ], ProductFamilyService);
    return ProductFamilyService;
}());
exports.ProductFamilyService = ProductFamilyService;


/***/ }),

/***/ "./src/app/project/components/delete-projects-popup.component.html":
/***/ (function(module, exports) {

module.exports = "<form role=\"form\">\r\n    <div class=\"form-group\">\r\n        <p>Are you sure you want to delete the following projects?</p>\r\n\r\n        <!--<div class=\"well\" style=\"overflow:scroll;height:200px;\">-->\r\n        <div class=\"well\">\r\n            <div *ngFor=\"let project of deleteProjects\">\r\n                <p style=\"color:red;\">{{project.projectName}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <p>Projects selected: {{deleteProjects.length}}</p>\r\n\r\n    </div>\r\n    <div class=\"row action text-center\">\r\n        <button class=\"btn btn-primary\" (click)=\"deleteSelectedProjects()\">Delete Projects</button>\r\n        <button class=\"btn btn-default\" (click)=\"closeDeleteProjectsWindow()\">Cancel</button>\r\n    </div>\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/project/components/delete-projects-popup.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var DeleteProjectsPopupComponent = /** @class */ (function () {
    function DeleteProjectsPopupComponent(toastrSvc, http, projectSvc) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.projectSvc = projectSvc;
        this.clearDeleteProjectsArray = new core_1.EventEmitter();
    }
    DeleteProjectsPopupComponent.prototype.ngOnInit = function () {
    };
    DeleteProjectsPopupComponent.prototype.deleteSelectedProjects = function () {
        var self = this;
        var selectedProjectIds = [];
        for (var _i = 0, _a = this.deleteProjects; _i < _a.length; _i++) {
            var project = _a[_i];
            selectedProjectIds.push(project.projectId);
        }
        this.projectSvc.deleteProjects(selectedProjectIds).then(this.deleteProjectsCallback.bind(this));
    };
    DeleteProjectsPopupComponent.prototype.closeDeleteProjectsWindow = function () {
        var deleteProjectsWindow = jQuery("#deleteProjectsWindow").data("kendoWindow");
        deleteProjectsWindow.close();
    };
    DeleteProjectsPopupComponent.prototype.deleteProjectsCallback = function (resp) {
        if (resp.isok) {
            for (var _i = 0, _a = resp.messages.items; _i < _a.length; _i++) {
                var message = _a[_i];
                if (message.type == 40) {
                    this.toastrSvc.Success(message.text);
                }
            }
            //reload projects grid
            var projectEditAllGridDtaSrc = jQuery('#project-grid').data('kendoGrid').dataSource;
            projectEditAllGridDtaSrc.read();
            //clear deleteProjects Array
            this.clearDeleteProjectsArray.emit();
        }
        else {
            for (var _b = 0, _c = resp.messages.items; _b < _c.length; _b++) {
                var message = _c[_b];
                if (message.type == 10) {
                    this.toastrSvc.Error(message.text);
                }
            }
        }
        this.closeDeleteProjectsWindow();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], DeleteProjectsPopupComponent.prototype, "deleteProjects", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DeleteProjectsPopupComponent.prototype, "clearDeleteProjectsArray", void 0);
    DeleteProjectsPopupComponent = __decorate([
        core_1.Component({
            selector: 'delete-projects-popup',
            template: __webpack_require__("./src/app/project/components/delete-projects-popup.component.html")
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http,
            project_service_1.ProjectService])
    ], DeleteProjectsPopupComponent);
    return DeleteProjectsPopupComponent;
}());
exports.DeleteProjectsPopupComponent = DeleteProjectsPopupComponent;
;


/***/ }),

/***/ "./src/app/project/components/export-projects-popup.component.html":
/***/ (function(module, exports) {

module.exports = "<form role=\"form\">\r\n    <div class=\"form-group\">\r\n        <p>Please select a project export type:</p>\r\n        <input id=\"projectExportTypeDDL\" style=\"width: 90%\">\r\n\r\n    </div>\r\n    <div class=\"row action text-center\">\r\n        <button class=\"btn btn-primary\" (click)=\"exportProjects()\">Export</button>\r\n    </div>\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/project/components/export-projects-popup.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var ExportProjectsPopupComponent = /** @class */ (function () {
    function ExportProjectsPopupComponent(toastrSvc, http, projectSvc) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.projectSvc = projectSvc;
        this.projectExportType = 1;
    }
    ExportProjectsPopupComponent.prototype.ngOnInit = function () {
        this.setupExportTypeDDL();
    };
    ExportProjectsPopupComponent.prototype.setupExportTypeDDL = function () {
        var self = this;
        jQuery("#projectExportTypeDDL").kendoDropDownList({
            dataSource: [{ text: "Project Pipeline Export", value: 1 },
                { text: "Project Pipeline Export - Detailed", value: 2 }],
            dataTextField: "text",
            dataValueField: "value",
            change: function (e) {
                var value = this.value();
                self.projectExportType = value;
            }
        });
    };
    ExportProjectsPopupComponent.prototype.closeExportProjectWindow = function () {
        var exportProjectsWindow = jQuery("#exportProjectsWindow").data("kendoWindow");
        exportProjectsWindow.close();
    };
    ExportProjectsPopupComponent.prototype.exportProjects = function () {
        var filterString = "";
        var sortString = "";
        var prjectsDataSrc = jQuery("#project-grid").data("kendoGrid").dataSource;
        if (prjectsDataSrc.filter() != undefined) {
            filterString = JSON.stringify(prjectsDataSrc.filter()).replace(/\"/g, '\'');
        }
        if (prjectsDataSrc.sort() != undefined) {
            sortString = JSON.stringify(prjectsDataSrc.sort()).replace(/\"/g, '\'');
        }
        var data = {
            "projectExportType": this.projectExportType,
            "showDeletedProjects": this.showDeletedProjects,
            "filter": filterString,
            "sort": sortString
        };
        this.projectSvc.exportProject(data);
        this.closeExportProjectWindow();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ExportProjectsPopupComponent.prototype, "showDeletedProjects", void 0);
    ExportProjectsPopupComponent = __decorate([
        core_1.Component({
            selector: 'export-projects-popup',
            template: __webpack_require__("./src/app/project/components/export-projects-popup.component.html")
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService,
            http_1.Http, project_service_1.ProjectService])
    ], ExportProjectsPopupComponent);
    return ExportProjectsPopupComponent;
}());
exports.ExportProjectsPopupComponent = ExportProjectsPopupComponent;
;


/***/ }),

/***/ "./src/app/project/components/project-edit.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n\r\n        <ul class=\"breadcrumbs\">\r\n            <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n            <li *ngIf=\"action == 'projectCreate'\">Add New Project</li>\r\n            <li *ngIf=\"action == 'projectEdit'\">Edit Project</li>\r\n        </ul>\r\n\r\n        <h4 *ngIf=\"action == 'projectCreate'\">New Project</h4>\r\n        <h4 *ngIf=\"action == 'projectEdit'\">Edit Project</h4>\r\n\r\n        <form #projectEditForm=\"ngForm\" novalidate>\r\n\r\n            <ul class=\"hidden-xs nav nav-tabs\">\r\n                <li class=\"active tabs-header\"><a data-toggle=\"tab\" href=\"#projectDetails\">PROJECT DETAILS</a></li>\r\n                <li class=\"tabs-header\"><a data-toggle=\"tab\" href=\"#engineerDetails\">ENGINEER</a></li>\r\n                <li class=\"tabs-header\"><a data-toggle=\"tab\" href=\"#dealerDetails\">DEALER/CONTRACTOR</a></li>\r\n                <li class=\"tabs-header\"><a data-toggle=\"tab\" href=\"#sellerDetails\">SELLER</a></li>\r\n                <li class=\"tabs-header\"><a data-toggle=\"tab\" id=\"shipToAddressLink\" href=\"#shippingAddressDetails\">SHIPPING ADDRESS/ PROJECT LOCATION</a></li>\r\n                <li class=\"tabs-header\" *ngIf=\"canViewPipelineData || canEditPipelineData\"><a data-toggle=\"tab\" href=\"#projectInternal\">INTERNAL</a></li>\r\n            </ul>\r\n\r\n            <div class=\"visible-xs scrollmenu\">\r\n                <ul class=\"sub-tab-bar\">\r\n                    <li class=\"active tabs-header\"><a data-toggle=\"tab\" href=\"#projectDetails\">PROJECT DETAILS</a></li>\r\n                    <li class=\"tabs-header\"><a data-toggle=\"tab\" class=\"tabs-header\" href=\"#engineerDetails\">ENGINEER</a></li>\r\n                    <li class=\"tabs-header\"><a data-toggle=\"tab\" class=\"tabs-header\" href=\"#dealerDetails\">DEALER/CONTRACTOR</a></li>\r\n                    <li class=\"tabs-header\"><a data-toggle=\"tab\" class=\"tabs-header\" href=\"#sellerDetails\">SELLER</a></li>\r\n                    <li class=\"tabs-header\"><a data-toggle=\"tab\" class=\"tabs-header\" href=\"#shippingAddressDetails\">SHIPPING ADDRESS/ PROJECT LOCATION</a></li>\r\n                    <li class=\"tabs-header\" *ngIf=\"canViewPipelineData || canEditPipelineData\"><a data-toggle=\"tab\" class=\"tabs-header\" href=\"#projectInternal\">INTERNAL</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"tab-content\" style=\"margin:10px;\">\r\n\r\n                <div id=\"projectDetails\" class=\"tab-pane fade in active\">\r\n                    <!--Project Name-->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"control-label required\">Project Name</label>\r\n                                <input type=\"text\" class=\"form-control\" #projectName=\"ngModel\" required name=\"projectName\" [(ngModel)]=\"project.name\" (ngModelChange)=\"projectNameChange($event)\">\r\n                                <div *ngIf=\"projectName.touched && projectName.invalid\" class=\"alert alert-danger\">\r\n                                    Project Name is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <!--Details-->\r\n                    <div class=\"row\">\r\n\r\n                        <!--Types-->\r\n                        <div class=\"col-md-4 col-xs-12\">\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-9\">\r\n                                    <label class=\"control-label required\">Contruction Type</label>\r\n\r\n                                    <select class=\"form-control\" required [(ngModel)]=\"project.constructionTypeId\" (ngModelChange)=\"constructionTypeChange($event)\" name=\"constructionType\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.constructionTypes.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-9\">\r\n                                    <label class=\"control-label required\">Project Status</label>\r\n                                    <select class=\"form-control\" required [(ngModel)]=\"project.projectStatusTypeId\" (ngModelChange)=\"projectStatusTypeChange($event)\" name=\"projectStatusType\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.projectStatusTypes.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-9\">\r\n                                    <label class=\"control-label required\">Project Type</label>\r\n                                    <select class=\"form-control\" required [(ngModel)]=\"project.projectTypeId\" (ngModelChange)=\"projectTypeChange($event)\" name=\"projectType\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.projectTypes.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-9\">\r\n                                    <label class=\"control-label required\">Project Open Status</label>\r\n                                    <select class=\"form-control\" required [(ngModel)]=\"project.projectOpenStatusTypeId\" (ngModelChange)=\"projectOpenStatusTypeChange($event)\" name=\"projectOpenStatusType\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.projectOpenStatusTypes.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-9\">\r\n                                    <label class=\"control-label required\">Vertical Market</label>\r\n                                    <select class=\"form-control\" required [(ngModel)]=\"project.verticalMarketTypeId\" (ngModelChange)=\"verticalMarketTypeChange($event)\" name=\"verticalMarketType\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.verticalMarketTypes.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <!--Dates-->\r\n                        <div class=\"col-md-3 col-xs-12\">\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-12\">\r\n                                    <label for=\"projectDate\" class=\"control-label\">Registration Date</label>\r\n                                    <div>\r\n                                        <kendo-datepicker [value]=\"projectDate\" [disabled]=\"true\">\r\n                                        </kendo-datepicker>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-12\">\r\n                                    <label class=\"control-label required\">Bid Date</label>\r\n                                    <div>\r\n                                        <kendo-datepicker required [(value)]=\"project.bidDate\"></kendo-datepicker>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-12\">\r\n                                    <label class=\"control-label required\">Estimated Close</label>\r\n                                    <div>\r\n                                        <kendo-datepicker required [(value)]=\"project.estimatedClose\"></kendo-datepicker>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-12\">\r\n                                    <label class=\"control-label required\">Estimated Delivery</label>\r\n                                    <div>\r\n                                        <kendo-datepicker required [(value)]=\"project.estimatedDelivery\"></kendo-datepicker>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <!--Location and notes-->\r\n                        <div class=\"col-md-5 col-xs-12\">\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-12\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"project.isStrategicProject\" name=\"isStrategicProject\" /> <label> Strategic Project </label><br />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\" *ngIf=\"project.isStrategicProject\">\r\n                                <div class=\"form-group col-md-12\">\r\n                                    <label class=\"required\">Reason For Strategic Project</label>\r\n                                    <kendo-multiselect required\r\n                                                       [data]=\"project.strategicTypes.items\"\r\n                                                       [(ngModel)]=\"project.selectedStrategicTypes\" name=\"strategicProjectReason\"\r\n                                                       [textField]=\"'text'\"\r\n                                                       [valueField]=\"'valueLong'\"\r\n                                                       [valuePrimitive]=\"true\"></kendo-multiselect>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label class=\"control-label\">Country</label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"project.shipToAddress.countryCode\" (ngModelChange)=\"countryCodeChange($event)\" name=\"shipToCountryCode\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.shipToAddress.countries.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label class=\"control-label\">State</label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"project.shipToAddress.stateId\" name=\"shipToState\">\r\n                                        <option [value]=\"null\" selected disabled>Select ...</option>\r\n                                        <option *ngFor=\"let item of project.shipToAddress.states.items\"\r\n                                                [value]=\"item.value\">\r\n                                            {{item.text}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label class=\"control-label\">City</label>\r\n                                    <input type=\"text\" class=\"form-control\" #shipToLocation=\"ngModel\" name=\"shipToLocation\" [(ngModel)]=\"project.shipToAddress.location\">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label class=\"control-label\">Project Note</label>\r\n                                <textarea class=\"form-control\" #description=\"ngModel\" name=\"description\" [(ngModel)]=\"project.description\"></textarea>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <!--ENGINEER-->\r\n                <div id=\"engineerDetails\" class=\"tab-pane fade\">\r\n\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-5 col-xs-12\">\r\n                            <label class=\"control-label\">Contact Name</label>\r\n                            <input type=\"text\" class=\"form-control\" #engineerName=\"ngModel\" name=\"engineerName\" [(ngModel)]=\"project.engineerName\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-5 col-xs-12\">\r\n                            <label class=\"control-label\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" #engineerBusinessName=\"ngModel\" name=\"engineerBusinessName\" [(ngModel)]=\"project.engineerBusinessName\">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <address [project]=\"project\"\r\n                             [addressType]=\"'engineer'\"\r\n                             [address]=\"project.engineerAddress\"\r\n                             [projectEditForm]=\"projectEditForm\">\r\n\r\n                    </address>\r\n\r\n\r\n                </div>\r\n\r\n                <!--DEALER/CONTRACTOR-->\r\n                <div id=\"dealerDetails\" class=\"tab-pane fade\">\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-5 col-xs-12\">\r\n                            <label class=\"control-label\">Contact Name</label>\r\n                            <input type=\"text\" class=\"form-control\" #dealerContractorName=\"ngModel\" name=\"dealerContractorName\" [(ngModel)]=\"project.dealerContractorName\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-5 col-xs-12\">\r\n                            <label class=\"control-label\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" #customerName=\"ngModel\" name=\"customerName\" [(ngModel)]=\"project.customerName\">\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <address [project]=\"project\"\r\n                             [addressType]=\"'customer'\"\r\n                             [address]=\"project.customerAddress\"\r\n                             [projectEditForm]=\"projectEditForm\">\r\n\r\n                    </address>\r\n\r\n                </div>\r\n\r\n                <!--SELLER-->\r\n                <div id=\"sellerDetails\" class=\"tab-pane fade\">\r\n\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-5 col-xs-12\">\r\n                            <label class=\"control-label\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" #sellerName=\"ngModel\" name=\"sellerName\" [(ngModel)]=\"project.sellerName\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <address [project]=\"project\"\r\n                             [addressType]=\"'seller'\"\r\n                             [address]=\"project.sellerAddress\"\r\n                             [projectEditForm]=\"projectEditForm\">\r\n                    </address>\r\n\r\n                </div>\r\n\r\n                <!--SHIPPING ADDRESS/ PROJECT LOCATION-->\r\n                <div id=\"shippingAddressDetails\" class=\"tab-pane fade\">\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-5 col-xs-12\">\r\n                            <label class=\"control-label\">Business Name</label>\r\n                            <input type=\"text\" class=\"form-control\" #shipToName=\"ngModel\" name=\"shipToName\" [(ngModel)]=\"project.shipToName\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <address [project]=\"project\"\r\n                             [addressType]=\"'shipToAddress'\"\r\n                             [address]=\"project.shipToAddress\"\r\n                             [projectEditForm]=\"projectEditForm\">\r\n\r\n                    </address>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"form-group col-md-2 col-xs-12\">\r\n                            <label class=\"control-label\">Square Footage</label>\r\n                            <input type=\"text\" class=\"form-control\" #squareFootage=\"ngModel\" name=\"squareFootage\" [(ngModel)]=\"project.squareFootage\">\r\n                        </div>\r\n                        <div class=\"form-group col-md-3 col-xs-12\">\r\n                            <label class=\"control-label\">Number Of Floors</label>\r\n                            <input type=\"text\" class=\"form-control\" #numberOfFloors=\"ngModel\" name=\"numberOfFloors\" [(ngModel)]=\"project.numberOfFloors\">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <!--INTERNAL-->\r\n                <div *ngIf=\"canViewPipelineData || canEditPipelineData\" id=\"projectInternal\" class=\"tab-pane fade\">\r\n                    <project-internal [user]=\"user\" [project]=\"project\" [projectEditForm]=\"projectEditForm\"></project-internal>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row text-center\">\r\n                <div class=\"col-md-10\" style=\"padding:10px;\">\r\n                    <button class=\"btn btn-default\" style=\"width:70px;\" (click)=\"cancel()\">Cancel</button>\r\n                    <button class=\"btn btn-primary\" style=\"width:70px;\" (click)=\"submit()\" type=\"submit\" id=\"projectEditSubmitBtn\">Submit</button>\r\n                    <!--<button class=\"btn btn-default\" style=\"width:70px;\" (click)=\"check()\">Check</button>-->\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!--<div *ngIf=\"project\">\r\n            Project Name: {{project.name}}<br />\r\n            ContructionTypeId: {{project.constructionTypeId}}<br />\r\n            Project Status TypeId: {{project.projectStatusTypeId}}<br />\r\n            Project Type Id: {{project.projectTypeId}}<br />\r\n            Project Open Status Id: {{project.projectOpenStatusTypeId}}<br />\r\n            Vertical Market TypeId: {{project.verticalMarketTypeId}}<br />\r\n            ProjectLeadStatusTypeId: {{project.projectLeadStatusTypeId}}<br />\r\n            Bid Date: {{project.bidDate}}<br />\r\n            Country Code: {{project.shipToAddress.countryCode}}<br />\r\n            State: {{project.shipToAddress.stateId}}<br />\r\n\r\n        </div>-->\r\n<!--{{diagnostic}}-->\r\n\r\n\r\n<div id=\"shippingAddressDialog\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Shipping Address</h4>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!suggestedAddress\">\r\n                <p>We were unable to verify entered address, please review. Do you want to continue?</p>\r\n            </div>\r\n            <div class=\"modal-footer\" *ngIf=\"!suggestedAddress\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"reEnterAddress()\">Re-enter address</button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"continue()\">Continue</button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\" *ngIf=\"suggestedAddress\">\r\n                <p>Address you entered:</p>\r\n                <div>\r\n                    <p>\r\n                        <span>{{project.shipToAddress.addressLine1}}</span>\r\n                        <span>{{project.shipToAddress.addressLine2}},</span>\r\n                        <span>{{project.shipToAddress.location}}, </span>\r\n                        <span>{{project.shipToAddress.stateName}}</span>\r\n                        <span>{{project.shipToAddress.postalCode}}</span>\r\n                    </p>\r\n                </div>\r\n                <p>Suggested Address:</p>\r\n                <div>\r\n                    <p>\r\n                        <input type=\"checkbox\" class=\"checkbox-large\" id=\"useSuggestedAddress\" name=\"useSuggestedAddress\" [(ngModel)]=\"useSuggestedAddress\">\r\n\r\n                        <span>{{suggestedAddress.line1}}</span>\r\n                        <span>{{suggestedAddress.line2}},</span>\r\n                        <span>{{suggestedAddress.city}}, </span>\r\n                        <span>{{suggestedAddress.stateProvince}} </span>\r\n                        <span>{{suggestedAddress.zipCode}}</span>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\" *ngIf=\"suggestedAddress\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"reEnterAddress()\">Re-enter address</button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"continue()\">Continue</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/project/components/project-edit.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/esm5/forms.js");
//import 'rxjs/Rx';
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var common_service_1 = __webpack_require__("./src/app/shared/services/common.service.ts");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var address_service_1 = __webpack_require__("./src/app/address/services/address.service.ts");
var ProjectEditComponent = /** @class */ (function () {
    function ProjectEditComponent(router, route, commonSvc, toastrSvc, userSvc, enums, http, projectSvc, addressSvc) {
        var _this = this;
        this.router = router;
        this.route = route;
        this.commonSvc = commonSvc;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.addressSvc = addressSvc;
        this.formIsValid = false;
        this.canViewPipelineData = false;
        this.canEditPipelineData = false;
        this.useSuggestedAddress = false;
        //public ignoreAddressValidation: boolean = false;
        this.defaultItem = { text: "Select ...", value: null };
        //public isStrategicProject: boolean = false;
        //Test
        //public listItems: Array<string> = ['Potential National Account', 'High Visibility', 'Multi Building', 'New Contractor', 'Owner Direct Purchase', 'New Engineer'];
        //public value: any = [];
        this.selectedReasons = [];
        router.events
            .filter(function (event) { return event instanceof router_1.NavigationEnd; })
            .subscribe(function (e) {
            _this.previousUrl = e.url;
        });
        this.action = this.route.snapshot.url[0].path;
        this.project = this.route.snapshot.data['projectModel'].model;
        this.user = this.route.snapshot.data['currentUser'].model;
        // this.project.projectDate = new Date(Date.parse(this.project.projectDate));
        if (this.action == "projectCreate") {
            this.projectDate = new Date();
            this.project.bidDate = null;
            this.project.estimatedClose = null;
            this.project.estimatedDelivery = null;
            this.project.projectStatusTypeId = 1;
        }
        else {
            this.projectDate = new Date(Date.parse(this.project.projectDate));
            this.project.bidDate = new Date(Date.parse(this.project.bidDate));
            this.project.estimatedClose = new Date(Date.parse(this.project.estimatedClose));
            this.project.estimatedDelivery = new Date(Date.parse(this.project.estimatedDelivery));
        }
    }
    ProjectEditComponent.prototype.ngOnInit = function () {
        this.validateForm();
        this.canViewPipelineData = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewPipelineData);
        this.canEditPipelineData = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.EditPipelineData);
    };
    ProjectEditComponent.prototype.ngDoCheck = function () {
        //if (this.projectEditForm.invalid) {
        //    $("#projectEditSubmitBtn").attr("disabled", "disabled");
        //} else {
        //    $("#projectEditSubmitBtn").removeAttr("disabled");
        //}
        //console.log("ProjectEditForm.invalid: " + this.projectEditForm.invalid);
        if (this.formIsValid == false) {
            jQuery("#projectEditSubmitBtn").attr("disabled", "disabled");
        }
        else {
            jQuery("#projectEditSubmitBtn").removeAttr("disabled");
        }
    };
    ProjectEditComponent.prototype.validateForm = function () {
        if (this.projectEditForm.invalid) {
            this.formIsValid = false;
        }
        else {
            this.formIsValid = true;
        }
    };
    ProjectEditComponent.prototype.projectNameChange = function (event) {
        this.project.name = event;
        setTimeout(this.validateForm.bind(this), 200);
    };
    ProjectEditComponent.prototype.constructionTypeChange = function (event) {
        //this.project.constructionTypeId = event.value;
        setTimeout(this.validateForm.bind(this), 200);
    };
    ProjectEditComponent.prototype.projectStatusTypeChange = function (event) {
        //this.project.projectStatusTypeId = event.value;
        setTimeout(this.validateForm.bind(this), 200);
    };
    ProjectEditComponent.prototype.projectTypeChange = function (event) {
        //this.project.projectTypeId = event.value;
        this.setDefaultDates();
        setTimeout(this.validateForm.bind(this), 200);
    };
    ProjectEditComponent.prototype.projectOpenStatusTypeChange = function (event) {
        //this.project.projectOpenStatusTypeId = event.value;
        this.setDefaultDates();
        setTimeout(this.validateForm.bind(this), 200);
    };
    ProjectEditComponent.prototype.verticalMarketTypeChange = function (event) {
        //this.project.verticalMarketTypeId = event.value;
        //this.validateForm();
        setTimeout(this.validateForm.bind(this), 200);
    };
    ProjectEditComponent.prototype.countryCodeChange = function (event) {
        var _this = this;
        var countryCode = event;
        this.addressSvc.getStatesByCountry(countryCode)
            .subscribe(function (resp) {
            if (resp.isok) {
                var states = resp.model;
                _this.project.shipToAddress.states.items = resp.model.items;
                _this.project.shipToAddress.stateId = null;
            }
        }, function (error) {
            console.log("Error: " + error);
        });
    };
    // If project type && open status selected and no dates have been set 
    ProjectEditComponent.prototype.setDefaultDates = function () {
        if (this.project.projectTypeId && this.project.projectOpenStatusTypeId && !this.project.bidDate && !this.project.estimatedClose && !this.project.estimatedDelivery) {
            if (this.project.projectTypeId == "6") {
                // Design build 	
                //  1. Bid: should be same month as registration date
                //  2. Close: Add 60 days to bid date	
                //  3. Delivery: Add 30 days to estimated close
                //  4. Many time the customer marks D/B as budget or design and they should be all bidding 
                this.project.bidDate = new Date(this.projectDate);
                this.project.estimatedClose = new Date(this.project.bidDate);
                this.project.estimatedClose.setDate(this.project.estimatedClose.getDate() + 60);
                this.project.estimatedDelivery = new Date(this.project.estimatedClose);
                this.project.estimatedDelivery.setDate(this.project.estimatedDelivery.getDate() + 30);
            }
            else {
                switch (this.project.projectOpenStatusId) {
                    case "1": // Budget
                    case "2":// Design
                        // 1. Bid: Add 9 months to reg date	
                        // 2. Close: Add 60 days to bid date
                        // 3. Delivery: Add 30 days to close date	
                        this.project.bidDate = new Date(this.projectDate);
                        this.project.bidDate.setDate(this.project.bidDate.getDate() + (30 * 9));
                        this.project.estimatedClose = new Date(this.project.bidDate);
                        this.project.estimatedClose.setDate(this.project.estimatedClose.getDate() + 60);
                        this.project.estimatedDelivery = new Date(this.project.estimatedClose);
                        this.project.estimatedDelivery.setDate(this.project.estimatedDelivery.getDate() + 30);
                        break;
                    case "3": // Quote
                    default:
                        // 1. Bid: Quote 
                        // 2. Close: Add 60 days 
                        // 3. Delivery: Add 30 days
                        this.project.bidDate = new Date(this.projectDate);
                        this.project.estimatedClose = new Date(this.project.bidDate);
                        this.project.estimatedClose.setDate(this.project.estimatedClose.getDate() + 60);
                        this.project.estimatedDelivery = new Date(this.project.estimatedClose);
                        this.project.estimatedDelivery.setDate(this.project.estimatedDelivery.getDate() + 30);
                        break;
                }
            }
        }
    };
    ProjectEditComponent.prototype.cancel = function () {
        if (this.action == "projectCreate") {
            this.router.navigateByUrl("/project");
        }
        else if (this.action == "projectEdit") {
            this.router.navigateByUrl("/project/" + this.project.projectId);
        }
    };
    ProjectEditComponent.prototype.submit = function () {
        var _this = this;
        this.suggestedAddress = null;
        ///this.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.projectSvc.postProjectAndVerifyAddress(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                ///this.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                _this.project.projectId = resp.model.projectId;
                if (_this.action == "projectCreate") {
                    _this.router.navigateByUrl("/quoteCreate/" + _this.project.projectId);
                }
                else if (_this.action == "projectEdit") {
                    _this.router.navigateByUrl("/project/" + _this.project.projectId);
                }
            }
            else {
                ///this.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                _this.toastrSvc.displayResponseMessagesFadeOut(resp);
                if (_this.project.shipToAddress.addressLine1 != null) {
                    if (resp.model.error) {
                        jQuery("#shipToAddressLink").click();
                        //if (resp.model.isAddressValid == false) {// Address is not verified
                        //    jQuery("#shippingAddressDialog").modal({ backdrop: 'static', keyboard: false });
                        //} else if (resp.model.addresses.length > 0) {// Address does not match suggested address
                        //    this.suggestedAddress = resp.model.addresses[0];
                        //    jQuery("#shippingAddressDialog").modal({ backdrop: 'static', keyboard: false });
                        //}
                        if (resp.model.addresses != null && resp.model.addresses.length > 0) {
                            _this.suggestedAddress = resp.model.addresses[0];
                            jQuery("#shippingAddressDialog").modal({ backdrop: 'static', keyboard: false });
                        }
                        else {
                            jQuery("#shippingAddressDialog").modal({ backdrop: 'static', keyboard: false });
                        }
                    }
                    else {
                        //Allow cusomter to continue
                        jQuery("#shippingAddressDialog").modal({ backdrop: 'static', keyboard: false });
                    }
                }
            }
        }, function (err) {
            ////this.loadingIconSvc.Stop(jQuery("#content"));
            _this.blockUI.stop();
            console.log("Error: ", err);
            //Allow cusomter to continue
            jQuery("#shippingAddressDialog").modal({ backdrop: 'static', keyboard: false });
        });
    };
    ProjectEditComponent.prototype.check = function () {
        debugger;
    };
    //public onTabSelect(e: any) {
    //    console.log(e);
    //}
    //get diagnostic() { return JSON.stringify(this.project); }
    ProjectEditComponent.prototype.reEnterAddress = function () {
    };
    ProjectEditComponent.prototype.continue = function () {
        if (this.useSuggestedAddress) {
            this.project.shipToAddress.addressLine1 = this.suggestedAddress.line1;
            this.project.shipToAddress.addressLine2 = this.suggestedAddress.line2;
            this.project.shipToAddress.location = this.suggestedAddress.city;
            this.project.shipToAddress.stateName = this.suggestedAddress.stateProvince;
            this.project.shipToAddress.postalCode = this.suggestedAddress.zipCode;
            var self = this;
            this.commonSvc.getStateIdByStateCode(this.suggestedAddress.stateProvince)
                .subscribe(function (resp) {
                if (resp.isok) {
                    self.project.shipToAddress.stateId = resp.model;
                    self.postProject();
                }
                else {
                    self.toastrSvc.displayResponseMessages(resp);
                }
            }, function (err) { return console.log("Error: ", err); });
        }
        else {
            this.postProject();
        }
    };
    ProjectEditComponent.prototype.postProject = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.projectSvc.postProject(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                _this.project.projectId = resp.model.projectId;
                if (_this.action == "projectCreate") {
                    _this.router.navigateByUrl("/quoteCreate/" + _this.project.projectId);
                }
                else if (_this.action == "projectEdit") {
                    _this.router.navigateByUrl("/project/" + _this.project.projectId);
                }
            }
            else {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) {
            //this.loadingIconSvc.Stop(jQuery("#content"));
            _this.blockUI.stop();
            console.log("Error: ", err);
        });
    };
    __decorate([
        core_1.ViewChild('projectEditForm'),
        __metadata("design:type", forms_1.NgForm)
    ], ProjectEditComponent.prototype, "projectEditForm", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProjectEditComponent.prototype, "blockUI", void 0);
    ProjectEditComponent = __decorate([
        core_1.Component({
            selector: 'project-edit',
            template: __webpack_require__("./src/app/project/components/project-edit.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, common_service_1.CommonService,
            toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums, http_1.Http,
            project_service_1.ProjectService, address_service_1.AddressService])
    ], ProjectEditComponent);
    return ProjectEditComponent;
}());
exports.ProjectEditComponent = ProjectEditComponent;
;


/***/ }),

/***/ "./src/app/project/components/project-grid.component.html":
/***/ (function(module, exports) {

module.exports = "<link rel=\"stylesheet\" href=\"/v3/src/assets/css/kendo/kendo.common.min.css\" />\r\n<link rel=\"stylesheet\" href=\"/v3/src/assets/css/kendo/kendo.default.min.css\" />\r\n<link rel=\"stylesheet\" href=\"/v3/src/assets/css/kendo/kendo.default.mobile.min.css\" />\r\n<link rel=\"stylesheet\" href=\"/v3/src/assets/css/kendoGridJQuery.css\" />\r\n\r\n<div id=\"projectGridButtonBar\" class=\"row\">\r\n    <div class=\"col col-xs-12 col-sm-4 col-md-4 col-lg-4\" style=\"margin-bottom:10px\">\r\n        <div class=\"row\">\r\n            <input type=\"text\" class=\"k-input k-textbox\"\r\n                   id=\"projectSearchBox\" name=\"projectSearchFilter\"\r\n                   placeholder=\" Search\" title=\"Search by project Id, project name, project owner name, business name.\" />\r\n            <button id=\"projectSearchBtn\"><span class=\"k-icon k-i-search\"></span></button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col col-xs-12 col-sm-8 col-md-8 col-lg-8\">\r\n        <button class=\"btn btn-default pull-right\"\r\n                (click)=\"openExportProjectsWindow()\"\r\n                style=\"margin-left:10px\">\r\n            <span class=\"k-icon k-i-excel\"></span> <span class=\"hidden-xs\">Export To Excel</span>\r\n        </button>\r\n        <button class=\"btn btn-default pull-right\"\r\n                (click)=\"clearFilters()\"\r\n                style=\"margin-left:10px\">\r\n            <span class=\"k-icon k-i-funnel-clear\"></span> <span class=\"hidden-xs\">Clear Filters</span>\r\n        </button>\r\n        <!--<a id=\"newProjectBtn\" *ngIf=\"canEditProject\" href=\"/Projectdashboard/ProjectEdit\" class=\"btn btn-primary pull-right\" style=\"margin-left:10px\"><span class=\"k-icon k-i-plus\"></span> <span class=\"hidden-xs\">New Project</span></a>-->\r\n        <a id=\"newProjectBtn\" *ngIf=\"canEditProject\"\r\n           href=\"/v3/#/projectCreate\" class=\"btn btn-primary pull-right\"\r\n           style=\"margin-left:10px\">\r\n            <span class=\"k-icon k-i-plus\"></span>\r\n            <span class=\"hidden-xs\">New Project</span>\r\n        </a>\r\n        <button class=\"btn btn-default pull-right\"\r\n                *ngIf=\"deleteProjects.length>0\"\r\n                (click)=\"openDeleteProjectsWindow()\"\r\n                style=\"margin-left:10px\">\r\n            <span class=\"k-font-icon k-i-trash\"></span>\r\n            <span class=\"hidden-xs\">Delete Projects</span>\r\n        </button>\r\n        <span class=\"pull-right hidden-xs\"\r\n              *ngIf=\"canUnDeleteProject\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"showDeletedProjects\" style=\"margin-left:10px\" /> Show deleted projects\r\n        </span>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" style=\"margin-bottom:10px\">\r\n</div>\r\n\r\n<!--<div id=\"testdiv\">Hello</div>-->\r\n\r\n<div id=\"project-grid\" class=\"kendogrid row\"></div>\r\n\r\n<ul id=\"actionMenu\"></ul>\r\n\r\n<div id=\"transferProjectWindow\" style=\"display:none\">\r\n    <transfer-project-popup [selectedProjectId]=\"selectedProjectId\" (closeWindow)=\"CloseTransferProjectPopup()\"></transfer-project-popup>\r\n</div>\r\n<div id=\"deleteProjectsWindow\" style=\"display:none\">\r\n    <delete-projects-popup [deleteProjects]=\"deleteProjects\" (clearDeleteProjectsArray)=\"emptyDeleteProjectsArray()\"></delete-projects-popup>\r\n</div>\r\n\r\n<div id=\"exportProjectsWindow\" style=\"display:none\">\r\n    <export-projects-popup [showDeletedProjects]=\"showDeletedProjects\"></export-projects-popup>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/project/components/project-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var http_2 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var ProjectGridComponent = /** @class */ (function () {
    function ProjectGridComponent(toastrSvc, userSvc, http, enums, projectSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.http = http;
        this.enums = enums;
        this.projectSvc = projectSvc;
        this.isAuthenticated = false;
        this.canEditProject = false;
        this.canTransferProject = false;
        this.canUnDeleteProject = false;
        this.canViewPipelineData = false;
        this.canEditPipelineData = false;
        this.deleteProjects = [];
        this.gridColumns = [];
        this.showDeletedProjects = false;
    }
    ProjectGridComponent.prototype.ngOnInit = function () {
        this.setGridHeight();
        var currentDate = new Date();
        this.currentDateString = currentDate.toISOString();
        var currentYear = currentDate.getFullYear();
        var lastYear = currentYear - 1;
        var thisDateLastYear = new Date();
        thisDateLastYear.setFullYear(lastYear);
        //if (thisDateLastYear.getDate() == 29) { // not necessarry since Feb 29th will be converted to Mar 1st automatically if the year is not leap year
        //    if (!this.isLeapYear(lastYear)) {
        //        thisDateLastYear.setDate(28);
        //    }
        //}
        this.thisDateLastYearString = thisDateLastYear.toISOString();
        this.userSvc.getCurrentUser()
            .then(this.getCurrentUserCallback.bind(this));
        this.gridColumns = this.setupGridColumns();
        this.ProjectsDataSource = this.getDataSource();
        this.setupSearchBox();
    };
    ProjectGridComponent.prototype.ngAfterViewInit = function () {
        this.setupActionsMenu();
        this.setupAlertTooltip();
        //setTimeout(this.removeKIconText, 1000); /*fix jquery kendo grid*/
    };
    ProjectGridComponent.prototype.removeKIconText = function () {
        jQuery(".k-icon").text("");
        jQuery(".k-i-refresh").text("");
    };
    ProjectGridComponent.prototype.isLeapYear = function (year) {
        return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);
    };
    ProjectGridComponent.prototype.setGridHeight = function () {
        var daikinHeaderH = jQuery("#daikin-header").height();
        var projectTabsH = jQuery("#projectTabs").height();
        var tabHeaderTitleH = jQuery("div.tab-header").height() + 10 + 10; // margin top & bottom is 10px;
        var gridButtonBarH = jQuery("#projectGridButtonBar").height() + 10; //// margin bottom is 10px;
        var windowH = jQuery(window).height();
        this.gridHeight = windowH - daikinHeaderH - projectTabsH - tabHeaderTitleH - gridButtonBarH - 20;
        if (windowH < 750) {
            this.gridHeight = 550;
        }
    };
    ProjectGridComponent.prototype.getCurrentUserCallback = function (resp) {
        if (resp.isok) {
            this.isAuthenticated = true;
            this.currentUser = resp.model;
            this.canEditProject = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.EditProject);
            this.canTransferProject = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.TransferProject);
            this.canUnDeleteProject = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.UndeleteProject);
            this.canViewPipelineData = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ViewPipelineData);
            this.canEditPipelineData = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.EditPipelineData);
            //if (this.canUnDeleteProject && this.canEditProject) {
            //    var deletedProjectColumn = {
            //        field: "deleted",
            //        title: "Deleted",
            //        hidden: true,
            //        filterable: false
            //    };
            //    this.gridColumns.push(deletedProjectColumn);
            //}
            if (this.canEditProject) {
                var deletedProjectColumn = {
                    title: "Delete Project",
                    headerTemplate: "<span class='k-font-icon k-i-trash'></span>",
                    width: "40px",
                    //template: kendo.template("<input type='checkbox' onclick='this.onDeleteProjectCheck(#:projectIdStr#, #:name#)'>"),
                    template: kendo.template("#=this.displayDeleteProjectCheckBox(projectIdStr, name, deleted)#").bind(this),
                    filterable: false,
                    sortable: false,
                    hidden: true
                };
                this.gridColumns.splice(1, 0, deletedProjectColumn);
            }
            if (this.canViewPipelineData) {
                var pipelineStatusColumn = {
                    field: "projectLeadStatusId",
                    title: "Pipeline Status",
                    editor: this.projectPipelineStatusDropDownEditor.bind(this),
                    template: kendo.template("#=this.getprojectPipelineStatus(projectLeadStatusId, projectStatusId, isTransferred, deleted)#").bind(this),
                    filterable: {
                        extra: false,
                        operators: {
                            string: {
                                eq: "Is equal to",
                            }
                        },
                        ui: this.projectPipelineStatusFilter.bind(this)
                    },
                    hidden: true
                };
                this.gridColumns.push(pipelineStatusColumn);
            }
            if (this.currentUser.showPrices) {
                var totalListColumn = {
                    field: "totalList",
                    title: "Total List",
                    format: "{0:c}",
                    hidden: true,
                    width: "13%",
                };
                this.gridColumns.push(totalListColumn);
                var totalSellColumn = {
                    field: "totalSell",
                    title: "Total Sell",
                    format: "{0:c}",
                    hidden: true,
                    width: "13%",
                };
                this.gridColumns.push(totalSellColumn);
                var totalNetColumn = {
                    field: "totalNet",
                    title: "Total Net",
                    format: "{0:c}",
                    hidden: true,
                    width: "13%",
                };
                this.gridColumns.push(totalNetColumn);
                var darComStatusColumn = {
                    field: "darComStatus",
                    title: "Dar/Com Status",
                    hidden: true,
                    filterable: false
                };
                this.gridColumns.push(darComStatusColumn);
                var pricingStrategyColumn = {
                    field: "pricingStrategy",
                    title: "Pricing Strategy",
                    hidden: true,
                    filterable: {
                        extra: false,
                        operators: {
                            string: {
                                eq: "Is equal to",
                            }
                        },
                        ui: this.pricingStrategyFilter.bind(this)
                    }
                };
                this.gridColumns.push(pricingStrategyColumn);
            }
            this.setupGrid();
            //this.LoadGridSettings();
        }
        else {
            window.location.href = "/v3/#/account/login";
        }
    };
    ProjectGridComponent.prototype.getDataSource = function () {
        var self = this;
        var projectsDataSrc = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/api/Project/GetProjects",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json",
                    cache: true
                },
                update: {
                    url: "/api/Project/EditProjects",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json"
                },
                parameterMap: function (data, operation) {
                    if (operation !== "read" && data.models) {
                        self.ProjectsGridViewModel.items = data.models;
                        return kendo.stringify(self.ProjectsGridViewModel);
                    }
                    else if (operation == "read") {
                        var queryInfo = {
                            take: data.take,
                            skip: data.skip,
                            page: data.page,
                            pageSize: data.pageSize,
                            sort: data.sort,
                            filter: data.filter,
                            showDeletedProjects: self.showDeletedProjects
                        };
                        return JSON.stringify(queryInfo);
                    }
                }
            },
            sync: function (e) {
                self.reloadGrid();
            },
            change: function (e) {
                //hide grid tool bar when there is no unsaved changes
                if (self.dataSourceIsChanged(this)) {
                    jQuery("#project-grid .k-grid-toolbar").show();
                }
                else {
                    jQuery("#project-grid .k-grid-toolbar").hide();
                }
                self.resizeGrid();
            },
            //requestEnd: function (e:any) {
            //    //check the "response" argument to skip the local operations
            //    if (e.type === "update" && e.response) {
            //        console.log("Current request is 'update'.");
            //    }
            //},
            batch: true,
            sort: ({ field: "projectDate", dir: "desc" }),
            //get projects within last 12 months by default
            filter: {
                filters: [
                    { field: "projectStatusId", operator: "eq", value: "1" }
                    //,
                    //{
                    //    filters: [{ field: "projectDate", operator: "gte", value: self.thisDateLastYearString },
                    //        { field: "projectDate", operator: "lte", value: self.currentDateString }],
                    //    logic: "and"
                    //}
                    //,{ field: "alert", operator: "eq", value: "true" }
                ],
                logic: "and"
            },
            schema: {
                //errors: function (response: any) {
                //    if (response) {
                //        debugger;
                //        console.log(response);
                //        return response;
                //    }
                //    return false;
                //}, 
                data: function (response) {
                    self.displayProjectResponseMessages(response);
                    self.ProjectsGridViewModel = response.model;
                    return response.model.items;
                },
                model: {
                    id: 'projectId',
                    fields: {
                        projectId: { type: 'string', editable: false },
                        projectIdStr: { type: 'string', editable: false },
                        name: { type: 'string', editable: false },
                        alert: { type: 'boolean', editable: false },
                        businessName: { type: 'string', editable: false },
                        projectOwner: { type: 'string', editable: false },
                        customerName: { type: 'string', editable: false },
                        projectType: { type: 'string' },
                        projectStatus: { type: 'string' },
                        projectOpenStatus: { type: 'string' },
                        projectLeadStatus: { type: 'string', editable: false },
                        projectDate: { type: 'date', editable: false },
                        bidDate: { type: 'date' },
                        estimatedClose: { type: 'date' },
                        estimatedDelivery: { type: 'date' },
                        //Quote Info
                        activeQuoteTitle: { type: 'string', editable: false },
                        activeQuoteId: { type: 'string', editable: false },
                        totalList: { type: 'number', editable: false },
                        totalSell: { type: 'number', editable: false },
                        totalNet: { type: 'number', editable: false },
                        totalCountVRVOutDoor: { type: 'number', editable: false },
                        totalCountSplitOutDoor: { type: 'number', editable: false },
                        darComStatus: { type: 'string', editable: false },
                        isCommission: { type: 'boolean', editable: false },
                        pricingStrategy: { type: 'string', editable: false },
                        deleted: { type: 'boolean', editable: false },
                        isStrategicProject: { type: 'boolean', editable: false }
                    }
                },
                total: "model.totalRecords"
            },
            pageSize: 50,
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true,
        });
        projectsDataSrc = this.applyFiltersFromUrl(projectsDataSrc);
        return projectsDataSrc;
    }; // end of getDataSource
    ProjectGridComponent.prototype.applyFiltersFromUrl = function (dataSource) {
        var url = window.location.href;
        var urlQueryString = url.split("?")[1];
        if (urlQueryString != undefined) {
            var urlParams = new http_2.URLSearchParams(urlQueryString, new http_2.QueryEncoder());
            //debugger
            //var params = urlParams.paramsMap.entries();
            //for (var i = 0; i < params.length; i++){
            //    //dataSource._filter.filters.push({ field: params[i], operator: "eq", value: params[i].value });
            //}
            if (urlParams.has("alert")) {
                dataSource._filter.filters.push({ field: "alert", operator: "eq", value: urlParams.get("alert") });
            }
            if (urlParams.has("expirationDays")) {
                dataSource._filter.filters.push({ field: "expirationDays", operator: "eq", value: urlParams.get("expirationDays") });
            }
        }
        return dataSource;
    };
    ProjectGridComponent.prototype.dataSourceIsChanged = function (dataSrc) {
        var dirty = false;
        var self = this;
        self.hasUnsavedChanges = false;
        jQuery.each(dataSrc._data, function () {
            if (this.dirty == true) {
                dirty = true;
                self.hasUnsavedChanges = true;
            }
        });
        if (dataSrc._destroyed.length > 0) {
            dirty = true;
            self.hasUnsavedChanges = true;
        }
        return dirty;
    };
    ProjectGridComponent.prototype.setupGrid = function () {
        var self = this;
        this.projectsGrid = jQuery('#project-grid');
        this.projectsGrid.kendoGrid(self.CombinedGridSettings());
        var gridToolbar = jQuery(".k-grid-toolbar");
        if (!self.canEditProject) {
            gridToolbar.hide();
        }
        jQuery(window).resize(function () {
            self.resizeGrid();
        });
    }; // end of setupGrid()
    ProjectGridComponent.prototype.getBaseGridOptions = function () {
        var self = this;
        return {
            //autoBind: false,
            dataSource: this.ProjectsDataSource,
            height: self.gridHeight,
            columnMenu: true,
            scrollable: true,
            resizable: true,
            sortable: true,
            filterable: true,
            toolbar: ["save", "cancel"],
            editable: {
                confirmation: false
            },
            reorderable: true,
            pageable: {
                refresh: true,
                input: true,
                numeric: false
            },
            columns: this.gridColumns,
            columnReorder: function (e) {
                var gridoptions = this;
                setTimeout(function () {
                    //console.log(kendo.stringify(gridoptions.columns));
                    self.SaveGridSettings();
                }, 5);
            },
            columnResize: function (e) {
                self.SaveGridSettings();
            },
            columnShow: function (e) {
                self.SaveGridSettings();
            },
            columnHide: function (e) {
                self.SaveGridSettings();
            },
            //change: function (e: any) {
            //    alert("changed");
            //    if (e.values.name !== e.model.name) {
            //        console.log("name is modified");
            //    }
            //},
            //saveChanges: function (e: any) {
            //    if (!confirm("Are you sure you want to save all changes?")) {
            //        e.preventDefault();
            //    }
            //    //bootbox.confirm("<p>Are you sure you want to save all changes?</p>", function (result) {
            //    //    if (result == false) {
            //    //        e.preventDefault();
            //    //    }
            //    //});
            //},
            dataBound: function (e) {
                self.resizeGrid();
                //Highlight deleted projects
                var items = this._data;
                var tableRows = jQuery(this.table).find("tr");
                tableRows.each(function (index) {
                    var row = jQuery(this);
                    var Item = items[index];
                    if (Item.deleted == true) {
                        row.addClass("projectDeleted");
                    }
                });
                jQuery("#project-grid th[data-field=totalList]").html("Total List<br>" + kendo.toString(self.ProjectsGridViewModel.totalList, "c"));
                jQuery("#project-grid th[data-field=totalNet]").html("Total Net<br> " + kendo.toString(self.ProjectsGridViewModel.totalNet, "c"));
                jQuery("#project-grid th[data-field=totalSell]").html("Total Sell<br>" + kendo.toString(self.ProjectsGridViewModel.totalSell, "c"));
                jQuery("#project-grid th[data-field=totalCountVRVOutDoor]").html("VRV ODU<br>#" + self.ProjectsGridViewModel.totalVRVOutdoorCount);
                jQuery("#project-grid th[data-field=totalCountSplitOutDoor]").html("Split ODU<br>#" + self.ProjectsGridViewModel.totalSplitCount);
                self.setupDeleteProjectCheckBox();
            }
        };
    };
    ProjectGridComponent.prototype.resizeGrid = function () {
        //jQuery("#project-grid").data("kendoGrid").resize();
        var self = this;
        var daikinHeaderH = jQuery("#daikin-header").height();
        var projectTabsH = jQuery("#projectTabs").height();
        var tabHeaderTitleH = jQuery("div.tab-header").height() + 10 + 10; // margin top & bottom is 10px;
        var gridButtonBarH = jQuery("#projectGridButtonBar").height() + 10; //// margin bottom is 10px;
        var windowH = jQuery(window).height();
        var gridElement = jQuery("#project-grid");
        var dataArea = gridElement.find(".k-grid-content"); // kendo grid row data area 
        var gridHeight = gridElement.innerHeight();
        var otherElements = gridElement.children().not(".k-grid-content"); // other Elements inside kendo grid. (ex: toolbar, header, pager ...)
        var otherElementsHeight = 0;
        otherElements.each(function () {
            var elem = jQuery(this);
            if (elem.hasClass("k-grid-toolbar") && !self.hasUnsavedChanges) {
                //continue;
            }
            else {
                var elemH = jQuery(this).outerHeight();
                otherElementsHeight += elemH;
            }
        });
        var gridElementHeight = windowH - daikinHeaderH - projectTabsH - tabHeaderTitleH - gridButtonBarH - 15;
        if (windowH < 750) {
            gridElementHeight = 550;
        }
        var dataAreaHeight = gridElementHeight - otherElementsHeight;
        gridElement.height(gridElementHeight);
        dataArea.height(dataAreaHeight);
    };
    ProjectGridComponent.prototype.setupGridColumns = function () {
        var columns = [
            {
                title: "Action",
                width: "40px",
                headerTemplate: "",
                template: "<img src='/v3/src/assets/images/action-icon.png' class='actions actions-icon'  />",
                attributes: {
                    "class": "actions"
                }
            },
            //{
            //    title: "Delete Project",
            //    headerTemplate: "<span class='k-font-icon k-i-trash'></span>",
            //    width: "40px",
            //    //template: kendo.template("<input type='checkbox' onclick='this.onDeleteProjectCheck(#:projectIdStr#, #:name#)'>"),
            //    template: kendo.template("#=this.displayDeleteProjectCheckBox(projectIdStr, name, deleted)#").bind(this),
            //    //editable: false,
            //    filterable: false,
            //    sortable: false,
            //    hidden: true
            //},
            {
                field: "alert",
                title: "Alert",
                headerTemplate: "<span class='k-icon k-i-note'></span>",
                width: "60px",
                //template: "<span *ngIf='#:alert#' class='k-icon k-i-note'></span> <span>#=alertText#</span>",
                template: kendo.template("#=this.displayAlertIcon(alert, alertText, isTransferred)#").bind(this),
                filterable: true,
                sortable: false
            },
            {
                field: "name",
                title: "Project Name",
                //template: "<a href='/projectdashboard/Project/#=projectIdStr#'>#=name#</a>",
                template: "<a href='/v3/\\\\#/project/#=projectIdStr#'>#=name#</a>",
                width: "12%",
                filterable: false
            },
            {
                field: "projectIdStr",
                title: "Project Ref",
                hidden: true,
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is equal to",
                        }
                    }
                },
                sortable: false
            },
            {
                field: "activeQuoteTitle",
                title: "Active Quote",
                template: kendo.template("#=this.displayActiveQuote(activeQuoteTitle, activeQuoteId)#").bind(this),
                hidden: true,
                filterable: false
            },
            {
                field: "projectTypeId",
                title: "Project Type",
                editor: this.projectTypeDropDownEditor.bind(this),
                template: kendo.template("#=this.getProjectType(projectTypeId, projectStatusId, isTransferred, deleted)#").bind(this),
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is equal to",
                        }
                    },
                    ui: this.projectTypeFilter.bind(this)
                }
            },
            {
                field: "projectStatusId",
                title: "Project Status",
                editor: this.projectStatusDropDownEditor.bind(this),
                template: kendo.template("#=this.getProjectStatus(projectStatusId, isTransferred, deleted)#").bind(this),
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is equal to",
                        }
                    },
                    ui: this.projectStatusFilter.bind(this)
                }
            },
            {
                field: "projectOpenStatusId",
                title: "Project Open Status",
                editor: this.projectOpenStatusDropDownEditor.bind(this),
                template: kendo.template("#=this.getProjectOpenStatus(projectOpenStatusId, projectStatusId, isTransferred, deleted)#").bind(this),
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is equal to",
                        }
                    },
                    ui: this.projectOpenStatusFilter.bind(this)
                }
            },
            {
                field: "bidDate",
                title: "Bid Date",
                format: "{0:MM-dd-yyyy}",
                editor: this.datePickerEditor.bind(this),
                template: kendo.template("#=this.displayDate(bidDate, projectStatusId, isTransferred, deleted)#").bind(this),
                filterable: {
                    operators: {
                        date: {
                            eq: "Is equal to",
                            gte: "Is after or equal to",
                            lte: "Is before or equal to",
                        }
                    },
                }
            },
            {
                field: "estimatedClose",
                title: "Estimated Close",
                format: "{0:MM-dd-yyyy}",
                editor: this.datePickerEditor.bind(this),
                template: kendo.template("#=this.displayDate(estimatedClose, projectStatusId, isTransferred, deleted)#").bind(this),
                filterable: {
                    operators: {
                        date: {
                            eq: "Is equal to",
                            gte: "Is after or equal to",
                            lte: "Is before or equal to",
                        }
                    },
                }
            },
            {
                field: "estimatedDelivery",
                title: "Estimated Delivery",
                format: "{0:MM-dd-yyyy}",
                editor: this.datePickerEditor.bind(this),
                template: kendo.template("#=this.displayDate(estimatedDelivery, projectStatusId, isTransferred, deleted)#").bind(this),
                filterable: {
                    operators: {
                        date: {
                            eq: "Is equal to",
                            gte: "Is after or equal to",
                            lte: "Is before or equal to",
                        }
                    },
                }
            },
            {
                field: "projectOwner",
                title: "Project Owner",
                hidden: true,
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is equal to",
                        }
                    },
                    ui: this.projectOwnerFilter.bind(this)
                },
            },
            {
                field: "businessName",
                title: "Business Name",
                hidden: true,
                filterable: {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is equal to",
                        }
                    },
                    ui: this.businessNameFilter.bind(this)
                }
            },
            {
                field: "customerName",
                title: "Dealer/Contractor",
                hidden: true,
                filterable: false
            },
            {
                field: "projectDate",
                title: "Project Date",
                format: "{0:MM-dd-yyyy}",
                hidden: true,
                filterable: {
                    operators: {
                        date: {
                            eq: "Is equal to",
                            gte: "Is after or equal to",
                            lte: "Is before or equal to",
                        }
                    },
                }
            },
            {
                field: "totalCountVRVOutDoor",
                title: "VRV ODU #",
                hidden: true,
            },
            {
                field: "totalCountSplitOutDoor",
                title: "Split ODU #",
                hidden: true,
            },
            {
                field: "isStrategicProject",
                title: "Strategic Project",
                template: kendo.template("#=this.displayStrategicProject(isStrategicProject, selectedStrategicTypes, strategicTypes)#").bind(this),
                hidden: true,
            }
            //{
            //    command: ["edit","destroy"],
            //    title: "&nbsp;",
            //    width: "250px"
            //}
        ];
        return columns;
    };
    ProjectGridComponent.prototype.displayActiveQuote = function (activeQuoteTitle, activeQuoteId) {
        if (activeQuoteTitle != "No Active Quote") {
            //return "<a href='/Projectdashboard/QuoteItems?QuoteId=" + activeQuoteId + "'>" + activeQuoteTitle + "</a>";
            return "<a href='/v3/#/quote/" + activeQuoteId + "/existingRecord'>" + activeQuoteTitle + "</a>";
            //return "<a href='/v3/#/quoteItems/" + activeQuoteId + "/existingRecord'>" + activeQuoteTitle + "</a>";
        }
        else {
            return activeQuoteTitle;
        }
    };
    ProjectGridComponent.prototype.displayStrategicProject = function (isStrategicProject, selectedStrategicTypes, strategicTypes) {
        var strategicTypesText = "";
        if (isStrategicProject) {
            if (strategicTypes.items != null) {
                for (var i = 0; i < strategicTypes.items.length; i++) {
                    if (strategicTypes.items[i].selected) {
                        strategicTypesText += strategicTypes.items[i].text + "&#13;";
                    }
                }
            }
            return "<span title='" + strategicTypesText + "'>True</span>";
        }
        else {
            return "<span>False</span>";
        }
    };
    ProjectGridComponent.prototype.displayAlertIcon = function (alert, alertText, isTransferred) {
        if (isTransferred) {
            return "<span class='k-icon k-i-lock alert-icon'></span>";
        }
        else if (alert) {
            return "<span class='k-icon k-i-note alert-icon'></span>";
        }
        else {
            return "";
        }
    };
    ProjectGridComponent.prototype.setupAlertTooltip = function () {
        jQuery("#project-grid").kendoTooltip({
            //filter: "td:nth-child(2)", //this filter selects the second column's cells
            filter: "tbody tr td span.alert-icon",
            position: "right",
            content: function (e) {
                var dataItem = jQuery("#project-grid").data("kendoGrid").dataItem(e.target.closest("tr"));
                if (dataItem.isTransferred) {
                    return "Project has been transferred.";
                }
                else {
                    var content = dataItem.alertText;
                    return content;
                }
            }
        }).data("kendoTooltip");
    };
    ProjectGridComponent.prototype.setupActionsMenu = function () {
        var self = this;
        jQuery("#actionMenu").kendoContextMenu({
            open: this.onOpenActionMenu.bind(this),
            target: "#project-grid",
            filter: "tbody > tr > td.actions",
            showOn: "click",
            alignToAnchor: true,
            direction: "right",
            select: function (e) {
                self.onContextSelect(e);
            }
        });
    };
    ProjectGridComponent.prototype.onContextSelect = function (e) {
        var self = this;
        //var selectedRow = jQuery(e.target.closest("tr"));
        var selectedCommand = e.item.innerText.trim();
        var actionItem = jQuery(e.item);
        switch (selectedCommand) {
            case "Export Project":
                var actionItemSpan = actionItem.find("span.actionItem");
                this.selectedProjectId = actionItemSpan.attr("projectid");
                this.ProjectsGridViewModel.projectId = this.selectedProjectId;
                var data = {
                    "projectId": this.selectedProjectId,
                };
                this.projectSvc.exportProject(data);
                break;
            case "Edit Project":
                break;
            case "Transfer Project":
                var actionItemSpan = actionItem.find("span.actionItem");
                this.selectedProjectId = actionItemSpan.attr("projectid");
                jQuery("#transferProjectWindow").kendoWindow({
                    width: "500px",
                    title: "Transfer Project",
                    visible: false,
                    modal: true,
                    actions: [
                        "Close"
                    ],
                    position: {
                        top: 100,
                        left: "35%"
                    }
                }).data("kendoWindow").open();
                break;
            case "Delete Project":
                var actionItemSpan = actionItem.find("span.actionItem");
                this.selectedProjectId = actionItemSpan.attr("projectid");
                bootbox.confirm("<p>Are you sure you want to delete this project?</p>", function (result) {
                    if (result) {
                        self.projectSvc.deleteProject(self.selectedProjectId).then(function (resp) {
                            self.displayResponseMessages(resp);
                            var grid = jQuery("#project-grid").data("kendoGrid");
                            self.reloadGrid();
                            //remove deleted project from grid
                            //grid.removeRow(selectedRow);
                            //grid.cancelChanges();
                            //self.hasUnsavedChanges = false;
                        });
                    }
                });
                break;
        }
    };
    ProjectGridComponent.prototype.onOpenActionMenu = function (e) {
        //var self = this;
        var row = jQuery(e.target.parentElement);
        //var grid = this.target.data("kendoGrid");
        var grid = jQuery("#project-grid").data("kendoGrid");
        //var grid = e.target.data("kendoGrid");
        var item = grid.dataItem(row);
        var actionMenuItems = [{
                text: "<span class='actionItem' projectId ='" + item.projectIdStr + "' >Export Project</span>",
                encoded: false
            }
        ];
        if (this.canEditProject && !item.isTransferred && !item.deleted) {
            var editProjectOption = {
                text: "Edit Project",
                encoded: false,
                url: "/v3/#/projectEdit/" + item.projectIdStr
            };
            actionMenuItems.push(editProjectOption);
        }
        if (this.canTransferProject && !item.isTransferred && !item.deleted) {
            var transferProjectOption = {
                text: "<span class='actionItem' projectId ='" + item.projectIdStr + "' >Transfer Project</span>",
                encoded: false
            };
            actionMenuItems.push(transferProjectOption);
        }
        if (this.canEditProject && !item.isTransferred && !item.deleted) {
            var deleteProjectOption = {
                text: "<span class='actionItem' projectId ='" + item.projectIdStr + "' >Delete Project</span>",
                encoded: false
            };
            actionMenuItems.push(deleteProjectOption);
        }
        e.sender.setOptions({
            dataSource: actionMenuItems
        });
    };
    ProjectGridComponent.prototype.setupDeleteProjectCheckBox = function () {
        var self = this;
        jQuery("input.deletePrjChkBox").click(function (event) {
            event.stopImmediatePropagation();
            var chkbox = jQuery(event.target);
            var projectId = chkbox.attr("projectid");
            var projectName = chkbox.attr("projectname");
            var project = {
                "projectId": projectId,
                "projectName": projectName
            };
            if (jQuery(this).is(':checked')) {
                self.deleteProjects.push(project);
            }
            else {
                self.removeFromDeleteProjects(projectId);
            }
        });
    };
    ProjectGridComponent.prototype.removeFromDeleteProjects = function (projectId) {
        var self = this;
        var index = self.findDeleteProjectIndex(projectId);
        self.deleteProjects.splice(index, 1);
    };
    ProjectGridComponent.prototype.findDeleteProjectIndex = function (projectId) {
        var self = this;
        var index = 0;
        for (var i = 0; i < self.deleteProjects.length; i++) {
            var item = self.deleteProjects[i];
            if (item.projectId == projectId) {
                return i;
            }
        }
        return null;
    };
    ProjectGridComponent.prototype.openDeleteProjectsWindow = function () {
        var deleteProjectsWindow = jQuery("#deleteProjectsWindow");
        deleteProjectsWindow.kendoWindow({
            width: "500px",
            title: "Delete Projects",
            visible: false,
            modal: true,
            actions: [
                "Close"
            ],
        }).data("kendoWindow").center().open();
    };
    ProjectGridComponent.prototype.emptyDeleteProjectsArray = function () {
        this.deleteProjects = [];
    };
    ProjectGridComponent.prototype.displayDeleteProjectCheckBox = function (projectIdStr, name, deleted) {
        if (deleted == false) {
            return "<input type='checkbox' class='deletePrjChkBox' projectid='" + projectIdStr + "' projectname='" + name + "'>";
        }
        else {
            return "";
        }
    };
    ProjectGridComponent.prototype.openExportProjectsWindow = function () {
        var exportProjectsWindow = jQuery("#exportProjectsWindow");
        exportProjectsWindow.kendoWindow({
            width: "400px",
            title: "Export Projects",
            visible: false,
            modal: true,
            actions: [
                "Close"
            ],
        }).data("kendoWindow").center().open();
    };
    ProjectGridComponent.prototype.setupSearchBox = function () {
        jQuery("#projectSearchBox").keyup(function (event) {
            if (event.keyCode == 13) {
                jQuery("#projectSearchBtn").click();
            }
        });
        jQuery("#projectSearchBtn").click(function () {
            var value = jQuery("#projectSearchBox")[0].value;
            if (value) {
                //clear all filters
                var filter = jQuery("#project-grid").data("kendoGrid").dataSource.filter();
                if (filter != undefined) {
                    jQuery("#project-grid").data("kendoGrid").dataSource.filter().filters = [];
                }
                //apply new filters
                jQuery("#project-grid").data("kendoGrid").dataSource.filter([{
                        "name": "search",
                        "logic": "or",
                        "filters": [
                            {
                                "field": "projectId",
                                "operator": "contains",
                                "value": value
                            },
                            {
                                "field": "name",
                                "operator": "contains",
                                "value": value
                            },
                            {
                                "field": "projectOwner",
                                "operator": "contains",
                                "value": value
                            },
                            {
                                "field": "businessName",
                                "operator": "contains",
                                "value": value
                            }
                        ]
                    }]);
            }
        });
    };
    ProjectGridComponent.prototype.clearFilters = function () {
        //jQuery("form.k-filter-menu button[type='reset']").trigger("click");
        var filter = jQuery("#project-grid").data("kendoGrid").dataSource.filter();
        if (filter != undefined) {
            jQuery("#project-grid").data("kendoGrid").dataSource.filter().filters = [];
            this.reloadGrid();
        }
    };
    ProjectGridComponent.prototype.reloadGrid = function () {
        var projectEditAllGridDtaSrc = jQuery('#project-grid').data('kendoGrid').dataSource;
        projectEditAllGridDtaSrc.read();
    };
    ProjectGridComponent.prototype.CloseTransferProjectPopup = function () {
        var transferProjectWindow = jQuery("#transferProjectWindow").data("kendoWindow");
        transferProjectWindow.close();
    };
    //Project Type
    //If Project Status is "Open" then show a dropdown list when user click on the editable cell
    ProjectGridComponent.prototype.projectTypeDropDownEditor = function (container, options) {
        if (options.model.projectStatusId == 1 && this.canEditProject && !options.model.isTransferred && !options.model.deleted) {
            jQuery('<input data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDropDownList({
                //autoBind: false,
                dataSource: this.ProjectsGridViewModel.projectTypes.items,
                dataTextField: "text",
                dataValueField: "value"
            });
        }
        else {
            var text = jQuery('<span>' + options.model.projectType + '</span>');
            text.appendTo(container);
        }
    };
    //If Project Status is "Open" then show Project Type as editable field
    ProjectGridComponent.prototype.getProjectType = function (projectTypeId, projectStatusId, isTransferred, deleted) {
        if (this.ProjectsGridViewModel != undefined) {
            var projectTypes = this.ProjectsGridViewModel.projectTypes.items;
            for (var _i = 0, projectTypes_1 = projectTypes; _i < projectTypes_1.length; _i++) {
                var projectType = projectTypes_1[_i];
                if (projectTypeId == projectType.value) {
                    if (projectStatusId == 1 && this.canEditProject && !isTransferred && !deleted) {
                        return "<span class='k-edit-cell k-dropdown-wrap k-state-default' style='overflow: hidden; text-overflow:ellipsis;' >" + projectType.text + "<span>";
                    }
                    else {
                        return projectType.text;
                    }
                }
            }
        }
        return "";
    };
    //Project Status
    //If Project Status is "Open" then show a dropdown list when user click on the editable cell
    ProjectGridComponent.prototype.projectStatusDropDownEditor = function (container, options) {
        if (options.model.projectStatusId == 1 && this.canEditProject && !options.model.isTransferred && !options.model.deleted) {
            jQuery('<input data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDropDownList({
                dataSource: this.ProjectsGridViewModel.projectStatusTypes.items,
                dataTextField: "text",
                dataValueField: "value"
            });
        }
        if ((options.model.projectStatusId == 3 || options.model.projectStatusId == 4) && this.canEditProject && !options.model.isTransferred && !options.model.deleted) {
            jQuery('<input data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDropDownList({
                dataSource: [{ text: "Open", value: 1 }],
                dataTextField: "text",
                dataValueField: "value"
            });
        }
        else {
            var text = jQuery('<span>' + options.model.projectStatus + '</span>');
            text.appendTo(container);
        }
    };
    //If Project Status is "Open" then show Project Status as editable field
    ProjectGridComponent.prototype.getProjectStatus = function (projectStatusId, isTransferred, deleted) {
        if (this.ProjectsGridViewModel != undefined) {
            var statusList = this.ProjectsGridViewModel.projectStatusTypes.items;
            for (var _i = 0, statusList_1 = statusList; _i < statusList_1.length; _i++) {
                var status_1 = statusList_1[_i];
                if (projectStatusId == status_1.value) {
                    if ((projectStatusId == 1 || projectStatusId == 3 || projectStatusId == 4) && this.canEditProject && !isTransferred && !deleted) {
                        return "<span class='k-edit-cell k-dropdown-wrap k-state-default' style='overflow: hidden; text-overflow:ellipsis;' >" + status_1.text + "<span>";
                    }
                    else {
                        return status_1.text;
                    }
                    //return status.text;
                }
            }
        }
        return "";
    };
    //Project Open Status
    //If Project Status is "Open" then show a dropdown list when user click on the editable cell
    ProjectGridComponent.prototype.projectOpenStatusDropDownEditor = function (container, options) {
        if (options.model.projectStatusId == 1 && this.canEditProject && !options.model.isTransferred && !options.model.deleted) {
            jQuery('<input data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDropDownList({
                //autoBind: false,
                dataSource: this.ProjectsGridViewModel.projectOpenStatusTypes.items,
                dataTextField: "text",
                dataValueField: "value"
            });
        }
        else {
            var text = jQuery('<span>' + options.model.projectOpenStatus + '</span>');
            text.appendTo(container);
        }
    };
    //If Project Status is "Open" then show Project Open Status as editable field
    ProjectGridComponent.prototype.getProjectOpenStatus = function (projectOpenStatusId, projectStatusId, isTransferred, deleted) {
        if (this.ProjectsGridViewModel != undefined) {
            var openStatusList = this.ProjectsGridViewModel.projectOpenStatusTypes.items;
            for (var _i = 0, openStatusList_1 = openStatusList; _i < openStatusList_1.length; _i++) {
                var status_2 = openStatusList_1[_i];
                if (projectOpenStatusId == status_2.value) {
                    if (projectStatusId == 1 && this.canEditProject && !isTransferred && !deleted) {
                        return "<span class='k-edit-cell k-dropdown-wrap k-state-default' style='overflow: hidden; text-overflow:ellipsis;' >" + status_2.text + "<span>";
                    }
                    else {
                        return status_2.text;
                    }
                }
            }
        }
        return "";
    };
    //projectPipelineStatusDropDownEditor
    ProjectGridComponent.prototype.projectPipelineStatusDropDownEditor = function (container, options) {
        if (options.model.projectStatusId == 1 && this.canEditProject && this.canEditPipelineData && !options.model.isTransferred && !options.model.deleted) {
            jQuery('<input data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDropDownList({
                dataSource: [{ text: "Lead", value: 1 },
                    { text: "Opportunity", value: 2 },
                    { text: "Disqualified", value: 5 }],
                dataTextField: "text",
                dataValueField: "value"
            });
        }
        else {
            var text = jQuery('<span>' + options.model.projectLeadStatus + '</span>');
            text.appendTo(container);
        }
    };
    ProjectGridComponent.prototype.getprojectPipelineStatus = function (projectLeadStatusId, projectStatusId, isTransferred, deleted) {
        if (this.ProjectsGridViewModel != undefined) {
            var pipelineStatusList = this.ProjectsGridViewModel.projectLeadStatusTypes.items;
            for (var _i = 0, pipelineStatusList_1 = pipelineStatusList; _i < pipelineStatusList_1.length; _i++) {
                var status_3 = pipelineStatusList_1[_i];
                if (projectLeadStatusId == status_3.value) {
                    if (projectStatusId == 1 && this.canEditProject && this.canEditPipelineData && !isTransferred && !deleted) {
                        return "<span class='k-edit-cell k-dropdown-wrap k-state-default' style='overflow: hidden; text-overflow:ellipsis;' >" + status_3.text + "<span>";
                    }
                    else {
                        return status_3.text;
                    }
                }
            }
        }
        return "";
    };
    //Date Picker
    //If Project Status is "Open" then show a date picker when user click on the editable cell
    ProjectGridComponent.prototype.datePickerEditor = function (container, options) {
        if (options.model.projectStatusId == 1 && this.canEditProject && !options.model.isTransferred && !options.model.deleted) {
            jQuery('<input data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDatePicker();
        }
        else {
            var text = jQuery('<span>' + options.model[options.field].toLocaleDateString('en-US') + '</span>');
            text.appendTo(container);
        }
    };
    //If Project Status is "Open" then show date as editable field
    ProjectGridComponent.prototype.displayDate = function (date, projectStatusId, isTransferred, deleted) {
        if (projectStatusId == 1 && this.canEditProject && !isTransferred && !deleted) {
            //return "<span class='k-picker-wrap k-state-default k-widget'  >" + date.toLocaleDateString('en-US') + " <span unselectable='on' class='k-icon k-i-calendar'>select</span> </span>  ";
            return "<span class='k-edit-cell k-picker-wrap k-state-default'  >" + date.toLocaleDateString('en-US') + " </span> ";
        }
        else {
            return date.toLocaleDateString('en-US');
        }
    };
    //Filters
    ProjectGridComponent.prototype.projectTypeFilter = function (element) {
        element.kendoDropDownList({
            dataSource: this.ProjectsGridViewModel.projectTypes.items,
            dataTextField: "text",
            dataValueField: "value"
        });
    };
    ProjectGridComponent.prototype.projectStatusFilter = function (element) {
        element.kendoDropDownList({
            dataSource: this.ProjectsGridViewModel.projectStatusTypes.items,
            dataTextField: "text",
            dataValueField: "value"
        });
    };
    ProjectGridComponent.prototype.projectOpenStatusFilter = function (element) {
        element.kendoDropDownList({
            dataSource: this.ProjectsGridViewModel.projectOpenStatusTypes.items,
            dataTextField: "text",
            dataValueField: "value"
        });
    };
    ProjectGridComponent.prototype.projectPipelineStatusFilter = function (element) {
        element.kendoDropDownList({
            dataSource: this.ProjectsGridViewModel.projectLeadStatusTypes.items,
            dataTextField: "text",
            dataValueField: "value"
        });
    };
    ProjectGridComponent.prototype.businessNameFilter = function (element) {
        element.kendoDropDownList({
            dataSource: this.ProjectsGridViewModel.businessesInGroup.items,
            dataTextField: "text",
            dataValueField: "text"
        });
    };
    //projectOwnerFilter
    ProjectGridComponent.prototype.projectOwnerFilter = function (element) {
        element.kendoDropDownList({
            dataSource: this.ProjectsGridViewModel.usersInGroup.items,
            dataTextField: "text",
            dataValueField: "text"
        });
    };
    ProjectGridComponent.prototype.pricingStrategyFilter = function (element) {
        element.kendoDropDownList({
            dataSource: [{ text: "Commission", value: "Commission" },
                { text: "Buy/Sell", value: "Buy/Sell" }],
            dataTextField: "text",
            dataValueField: "value"
        });
    };
    //showDeletedProjectsFilter
    ProjectGridComponent.prototype.showDeletedProjectsFilter = function (element) {
        var self = this;
        element.kendoDropDownList({
            dataSource: [{ text: "Yes", value: true },
                { text: "No", value: false }],
            dataTextField: "text",
            dataValueField: "value",
            select: function (e) {
                var item = e.item;
                var text = item.text();
                if (text == "Yes") {
                    self.showDeletedProjects = true;
                }
                else if (text == "No") {
                    self.showDeletedProjects = false;
                }
            }
        });
    };
    //Export To Excel
    ProjectGridComponent.prototype.exportToExcel = function () {
        alert("export to excel");
    };
    ProjectGridComponent.prototype.displayProjectResponseMessages = function (response) {
        for (var _i = 0, _a = response.model.items; _i < _a.length; _i++) {
            var project = _a[_i];
            if (project.messages != null) {
                for (var _b = 0, _c = project.messages.items; _b < _c.length; _b++) {
                    var message = _c[_b];
                    if (message.type == 40) {
                        this.toastrSvc.Success(message.text);
                    }
                    else if (message.type == 10) {
                        this.toastrSvc.Error(message.text);
                    }
                }
            }
        }
        if (!response.isok) {
            for (var _d = 0, _e = response.messages.items; _d < _e.length; _d++) {
                var message = _e[_d];
                this.toastrSvc.Error(message.text);
            }
        }
    };
    ProjectGridComponent.prototype.displayResponseMessages = function (response) {
        for (var _i = 0, _a = response.messages.items; _i < _a.length; _i++) {
            var message = _a[_i];
            if (message.type == 40) {
                this.toastrSvc.Success(message.text);
            }
            else if (message.type == 10) {
                this.toastrSvc.Error(message.text);
            }
        }
    };
    ProjectGridComponent.prototype.SaveGridSettings = function () {
        var grid = jQuery("#project-grid").data("kendoGrid");
        var gridsettings = kendo.stringify(grid.getOptions());
        localStorage["dk-projects-grid-settings.09.06.2018"] = gridsettings;
    };
    ProjectGridComponent.prototype.LoadGridSettings = function () {
        var grid = jQuery("#project-grid").data("kendoGrid");
        var baseSettings = this.getBaseGridOptions();
        var savedSettings = JSON.parse(localStorage["dk-projects-grid-settings.09.06.2018"]);
        //var gridSettings = jQuery.extend(true, baseSettings, savedSettings);
        var gridSettings = this.MergeGridSettings(baseSettings, savedSettings);
        grid.setOptions(gridSettings);
    };
    ProjectGridComponent.prototype.MergeGridSettings = function (baseSettings, savedSettings) {
        var columns = [];
        for (var i = 0; i < savedSettings.columns.length; i++) {
            for (var j = 0; j < baseSettings.columns.length; j++) {
                if (savedSettings.columns[i].title == baseSettings.columns[j].title) {
                    //if column title match then merge savedSetting column into baseSetting column
                    var col = jQuery.extend(true, baseSettings.columns[j], savedSettings.columns[i]);
                    columns.push(col);
                }
            }
        }
        var newGridSettings = baseSettings;
        newGridSettings.columns = columns;
        return newGridSettings;
    };
    ProjectGridComponent.prototype.CombinedGridSettings = function () {
        var baseSettings = this.getBaseGridOptions();
        //return baseSettings;
        if (localStorage.getItem("dk-projects-grid-settings.09.06.2018") === null) {
            return baseSettings;
        }
        else {
            var savedSettings = JSON.parse(localStorage["dk-projects-grid-settings.09.06.2018"]);
            var gridSettings = this.MergeGridSettings(baseSettings, savedSettings);
            return gridSettings;
        }
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProjectGridComponent.prototype, "blockUI", void 0);
    ProjectGridComponent = __decorate([
        core_1.Component({
            selector: 'project-grid',
            template: __webpack_require__("./src/app/project/components/project-grid.component.html")
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, user_service_1.UserService,
            http_1.Http, enums_1.Enums, project_service_1.ProjectService])
    ], ProjectGridComponent);
    return ProjectGridComponent;
}());
exports.ProjectGridComponent = ProjectGridComponent;
;


/***/ }),

/***/ "./src/app/project/components/project-internal.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-3 col-xs-12\">\r\n        <label class=\"control-label required\">Pipeline Status</label>\r\n        <select class=\"form-control\" [attr.disabled]=\"canEditPipelineData? null : 'disabled'\" [(ngModel)]=\"project.projectLeadStatusTypeId\">\r\n            <option [value]=\"null\" selected disabled>Select ...</option>\r\n            <option *ngFor=\"let item of project.projectLeadStatusTypes.items\" [attr.disabled]=\"item.disabled == true? 'disabled': null\" [value]=\"item.value\">{{item.text}}</option>\r\n        </select>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-3 col-xs-12\">\r\n        <label class=\"control-label\">Order Number</label>\r\n        <input type=\"text\" [disabled]=\"true\" class=\"form-control\" #eRPFirstOrderNumber=\"ngModel\" name=\"eRPFirstOrderNumber\" [(ngModel)]=\"project.eRPFirstOrderNumber\">\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-3 col-xs-12\">\r\n        <label class=\"control-label\">Order Date</label>\r\n        <input type=\"text\" [disabled]=\"true\" class=\"form-control\" #eRPFirstOrderDate=\"ngModel\" name=\"eRPFirstOrderDate\" [(ngModel)]=\"project.eRPFirstOrderDate\">\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-3 col-xs-12\">\r\n        <label class=\"control-label\">Order PO Number</label>\r\n        <input type=\"text\" [disabled]=\"true\" class=\"form-control\" #eRPFirstPONumber=\"ngModel\" name=\"eRPFirstPONumber\" [(ngModel)]=\"project.eRPFirstPONumber\">\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n    <div class=\"form-group col-md-6 col-xs-12\">\r\n        <label class=\"control-label\">Order Comments</label>\r\n        <textarea [disabled]=\"true\" class=\"form-control\" #eRPFirstOrderComment=\"ngModel\" name=\"eRPFirstOrderComment\" [(ngModel)]=\"project.eRPFirstOrderComment\"></textarea>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/project/components/project-internal.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var ProjectInternalComponent = /** @class */ (function () {
    function ProjectInternalComponent(router, route, toastrSvc, userSvc, enums, http, projectSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.canViewPipelineData = false;
        this.canEditPipelineData = false;
        this.defaultItem = { text: "Select ...", value: null };
    }
    ProjectInternalComponent.prototype.ngOnInit = function () {
        this.canViewPipelineData = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewPipelineData);
        this.canEditPipelineData = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.EditPipelineData);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectInternalComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectInternalComponent.prototype, "project", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectInternalComponent.prototype, "projectEditForm", void 0);
    ProjectInternalComponent = __decorate([
        core_1.Component({
            selector: 'project-internal',
            template: __webpack_require__("./src/app/project/components/project-internal.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums, http_1.Http, project_service_1.ProjectService])
    ], ProjectInternalComponent);
    return ProjectInternalComponent;
}());
exports.ProjectInternalComponent = ProjectInternalComponent;
;


/***/ }),

/***/ "./src/app/project/components/project-pipeline-notes-update.component.html":
/***/ (function(module, exports) {

module.exports = "<div id=\"estimateDeliveryDialog\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Please update the estimated delivery date</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form>\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-3 col-xs-12\" for=\"bidDate\">Bid Date:</label>\r\n                        <kendo-datepicker class=\"col-md-4 col-xs-12\" [value]=\"project.bidDate\" [disabled]=\"true\">\r\n\r\n                        </kendo-datepicker>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-3 col-xs-12\" for=\"closeDate\">Est. Close Date</label>\r\n                        <kendo-datepicker class=\"col-md-4 col-xs-12\" [value]=\"project.estimatedClose\" [disabled]=\"true\">\r\n\r\n                        </kendo-datepicker>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <label class=\"col-md-3 col-xs-12\" for=\"deliveryDate\">Est. Delivery Date</label>\r\n                        <kendo-datepicker class=\"col-md-4 col-xs-12\" [(value)]=\"project.estimatedDelivery\">\r\n\r\n                        </kendo-datepicker>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"updateDeliveryDate()\">Save</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<form *ngIf=\"canEditPipelineData && !project.deleted && newProjectPipelineNote && projectPipelineNoteOptions\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"form-group col-md-3 col-xs-10\">\r\n            <select class=\"form-control\" [(ngModel)]=\"newProjectPipelineNote.projectPipelineNoteId\" name=\"projectPipelineNote\" (ngModelChange)=\"pipelineNoteChange($event)\">\r\n                <option [value]=\"null\" selected>Select ...</option>\r\n                <option *ngFor=\"let item of projectPipelineNoteOptions.items\"\r\n                        [value]=\"item.projectPipelineNoteTypeId\">\r\n                    {{item.name}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group col-md-1 col-xs-2\">\r\n            <button class=\"btn btn-default\" (click)=\"addPipelineNote()\">Add</button>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"form-group col-md-5 col-xs-12\">\r\n            <textarea class=\"form-control\" name=\"note\" [(ngModel)]=\"newProjectPipelineNote.note\"></textarea>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div *ngIf=\"projectPipelineNotes && (canViewPipelineData || canEditPipelineData)\" class=\"row no-gutters\">\r\n    <div class=\"col-md-5 col-xs-12\">\r\n        <div *ngIf=\"projectPipelineNotes.length > 0\">\r\n            <div *ngFor=\"let item of projectPipelineNotes\">\r\n                <hr />\r\n                <p>{{item.projectPipelineNoteType.name}} at {{ item.timestamp | date: 'short' }} by {{ item.ownerName }}</p>\r\n                <p>{{item.note}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"projectPipelineNotes.length == 0\">\r\n            No Records to display\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/project/components/project-pipeline-notes-update.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var ProjectPipelineNotesUpdateComponent = /** @class */ (function () {
    function ProjectPipelineNotesUpdateComponent(router, route, toastrSvc, userSvc, http, projectSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.http = http;
        this.projectSvc = projectSvc;
        this.projectPipelineNotes = [];
        this.defaultItem = { name: "Select ...", value: null };
    }
    ProjectPipelineNotesUpdateComponent.prototype.ngOnChanges = function () {
        this.project.bidDate = new Date(Date.parse(this.project.bidDate));
        this.project.estimatedClose = new Date(Date.parse(this.project.estimatedClose));
        this.project.estimatedDelivery = new Date(Date.parse(this.project.estimatedDelivery));
        this.currentEstDeliveryDate = new Date(Date.parse(this.project.estimatedDelivery));
    };
    ProjectPipelineNotesUpdateComponent.prototype.ngOnInit = function () {
        this.getNewProjectPipelineNote();
        this.getPipelineNoteOptions();
        this.getProjectPipelineNotes();
        //this.project.bidDate = new Date(Date.parse(this.project.bidDate));
        //this.project.estimatedClose = new Date(Date.parse(this.project.estimatedClose));
        //this.project.estimatedDelivery = new Date(Date.parse(this.project.estimatedDelivery));
        //this.currentEstDeliveryDate = new Date(Date.parse(this.project.estimatedDelivery));
    };
    ProjectPipelineNotesUpdateComponent.prototype.getNewProjectPipelineNote = function () {
        var self = this;
        this.projectSvc.getNewProjectPipelineNote(this.project.projectId)
            .subscribe(function (resp) {
            if (resp.isok) {
                self.newProjectPipelineNote = resp.model;
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    ProjectPipelineNotesUpdateComponent.prototype.getPipelineNoteOptions = function () {
        var self = this;
        this.projectSvc.getProjectPipelineNoteOptions()
            .subscribe(function (resp) {
            if (resp.isok) {
                self.projectPipelineNoteOptions = resp.model;
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    ProjectPipelineNotesUpdateComponent.prototype.getProjectPipelineNotes = function () {
        var _this = this;
        var self = this;
        this.projectSvc.getProjectPipelineNotes(this.project.projectId)
            .subscribe(function (resp) {
            if (resp.isok) {
                //self.projectPipelineNotes = resp.model;
                _this.pipelineNotesReverse(resp.model);
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    ProjectPipelineNotesUpdateComponent.prototype.pipelineNotesReverse = function (notes) {
        for (var i = 0; i < notes.items.length; i++) {
            this.projectPipelineNotes.unshift(notes.items[i]);
        }
    };
    ProjectPipelineNotesUpdateComponent.prototype.pipelineNoteChange = function (value) {
        for (var i = 0; i < this.projectPipelineNoteOptions.items.length; i++) {
            if (this.projectPipelineNoteOptions.items[i].projectPipelineNoteTypeId == value) {
                this.newProjectPipelineNote.projectPipelineNoteType = this.projectPipelineNoteOptions.items[i];
            }
        }
    };
    ProjectPipelineNotesUpdateComponent.prototype.addPipelineNote = function () {
        var _this = this;
        //TODO: Estimate Delivery date push forward/back
        if (this.newProjectPipelineNote.projectPipelineNoteId == 4 || this.newProjectPipelineNote.projectPipelineNoteId == 5) {
            jQuery("#estimateDeliveryDialog").modal({ backdrop: 'static', keyboard: false });
        }
        else if (this.newProjectPipelineNote.projectPipelineNoteId == 1) {
            this.project.projectLeadStatusTypeId = 2; // Opportunity
            this.projectSvc.postProject(this.project)
                .subscribe(function (resp) {
                if (resp.isok) {
                    _this.project.projectLeadStatusTypeDescription = "Opportunity";
                    _this.postPipelineNote();
                }
                else {
                    _this.toastrSvc.displayResponseMessages(resp);
                }
            }, function (err) { return console.log("Error: ", err); });
        }
        else {
            this.postPipelineNote();
        }
    };
    ProjectPipelineNotesUpdateComponent.prototype.updateDeliveryDate = function () {
        var _this = this;
        this.projectSvc.postProject(this.project)
            .subscribe(function (resp) {
            if (resp.isok) {
                _this.postPipelineNote();
                _this.currentEstDeliveryDate = _this.project.estimatedDelivery;
            }
            else {
                _this.toastrSvc.displayResponseMessages(resp);
                _this.project.estimatedDelivery = _this.currentEstDeliveryDate;
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    ProjectPipelineNotesUpdateComponent.prototype.postPipelineNote = function () {
        var self = this;
        this.projectSvc.postProjectPipelineNote(this.newProjectPipelineNote)
            .subscribe(function (resp) {
            if (resp.isok) {
                self.newProjectPipelineNote = resp.model;
                self.getProjectPipelineNotes();
                self.getNewProjectPipelineNote();
                self.toastrSvc.displayResponseMessages(resp);
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectPipelineNotesUpdateComponent.prototype, "project", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectPipelineNotesUpdateComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectPipelineNotesUpdateComponent.prototype, "canViewPipelineData", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectPipelineNotesUpdateComponent.prototype, "canEditPipelineData", void 0);
    ProjectPipelineNotesUpdateComponent = __decorate([
        core_1.Component({
            selector: 'project-pipeline-notes-update',
            template: __webpack_require__("./src/app/project/components/project-pipeline-notes-update.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            http_1.Http, project_service_1.ProjectService])
    ], ProjectPipelineNotesUpdateComponent);
    return ProjectPipelineNotesUpdateComponent;
}());
exports.ProjectPipelineNotesUpdateComponent = ProjectPipelineNotesUpdateComponent;
;


/***/ }),

/***/ "./src/app/project/components/project.component.html":
/***/ (function(module, exports) {

module.exports = "<project-tabs [user]=\"user\"></project-tabs>\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n        <ul class=\"breadcrumbs\">\r\n            <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n            <li>{{project.name}}</li>\r\n        </ul>\r\n        <h4>{{project.name}}</h4>\r\n        <div class=\"row\">\r\n            <div class=\"pull-right\">\r\n                <a href=\"/Projectdashboard/ProjectExport?projectId={{project.projectId}}\" class=\"btn btn-default\"><img src=\"/v3/src/assets/images/package-quote-icon.png\" /> EXPORT</a>\r\n                <a *ngIf=\"canEditProject && !project.deleted && !project.isTransferred\" (click)=\"deleteProject()\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-trash\"></span> DELETE PROJECT</a>\r\n                <a *ngIf=\"canEditProject && project.deleted && !project.isTransferred\" (click)=\"undeleteProject()\" class=\"btn btn-default\">UNDELETE PROJECT</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ul class=\"nav nav-tabs\">\r\n        <li id=\"projectOverviewTabHeader\" class=\"active tabs-header\"><a id=\"projectOverviewTabLink\" data-toggle=\"tab\" href=\"#projectOverview\">OVERVIEW</a></li>\r\n        <li id=\"projectQuotesTabHeader\" class=\"tabs-header\"><a id=\"projectQuotesTabLink\" data-toggle=\"tab\" href=\"#projectQuotes\">QUOTES</a></li>\r\n    </ul>\r\n\r\n    <div class=\"tab-content\" style=\"margin:10px;\">\r\n        <div id=\"projectOverview\" class=\"tab-pane fade in active\">\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"row no-gutters sub-heading\">\r\n                    <h4 class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                    <!--<div class=\"col pull-right\"><a href=\"/ProjectDashboard/QuoteEdit/{{quote.projectId}}\" class=\"btn btn-primary pull-right\" ><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>-->\r\n                    <div *ngIf=\"canEditProject && !project.deleted && !project.isTransferred\" class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{project.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n                </div>\r\n                <active-quote-info [user]=\"user\" [quote]=\"project.activeQuoteSummary\" (showQuoteOverViewEvent)=\"showQuoteOverview()\"></active-quote-info>\r\n            </div>\r\n            <div class=\"row no-gutters sub-heading\">\r\n                <h4 class=\"pull-left\">PROJECT DETAILS</h4>\r\n                <div *ngIf=\"canEditProject && !project.deleted && !project.isTransferred\" class=\"pull-right\">\r\n                    <div class=\"pull-right\">\r\n                        <a href=\"/v3/#/projectEdit/{{project.projectId}}\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-pencil\"></span> EDIT PROJECT DETAILS</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row no-gutters\">\r\n                <div *ngIf=\"project.isStrategicProject\" class=\"visible-xs col-xs-12\">\r\n                    <p><span class=\"glyphicon glyphicon-ok\"></span> Strategic Project</p>\r\n                </div>\r\n                <div class=\"hidden-xs col-md-2\"></div>\r\n                <div class=\"col-md-4 col-xs-12\">\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Project Name: </div> <div class=\"col-md-6 col-xs-6\">{{project.name}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Project Reference: </div> <div class=\"col-md-6 col-xs-6\">{{project.projectId}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Registration Date: </div> <div class=\"col-md-6 col-xs-6\">{{project.projectDate  | date: 'shortDate'}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Bid Date: </div> <div class=\"col-md-6 col-xs-6\">{{project.bidDate | date: 'shortDate'}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Estimated Close: </div> <div class=\"col-md-6 col-xs-6\">{{project.estimatedClose | date: 'shortDate'}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Estimated Delivery: </div> <div class=\"col-md-6 col-xs-6\">{{project.estimatedDelivery | date: 'shortDate'}}</div>\r\n                </div>\r\n                <div class=\"col-md-4 col-xs-12\">\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Construction Type: </div> <div class=\"col-md-6 col-xs-6\">{{project.constructionTypeDescription}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Project Status: </div> <div class=\"col-md-6 col-xs-6\">{{project.projectStatusDescription}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Project Type: </div> <div class=\"col-md-6 col-xs-6\">{{project.projectTypeDescription}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Project Open Status: </div> <div class=\"col-md-6 col-xs-6\">{{project.projectOpenStatusDescription}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Vertical Market: </div> <div class=\"col-md-6 col-xs-6\">{{project.verticalMarketDescription}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Project Status Notes: </div> <div class=\"col-md-6 col-xs-6\">{{project.description}}</div>\r\n                </div>\r\n                <div class=\"hidden-xs col-md-2\">\r\n                    <!--<input *ngIf=\"project.isStrategicProject\" type=\"checkbox\" disabled [(ngModel)]=\"project.isStrategicProject\" name=\"isStrategicProject\" /> <label> Strategic Project </label><br />-->\r\n                    <p *ngIf=\"project.isStrategicProject\"><span class=\"glyphicon glyphicon-ok\"></span> Strategic Project</p>\r\n                    <div *ngIf=\"project.isStrategicProject\">\r\n                        <ul *ngFor=\"let item of project.strategicTypes.items\">\r\n                            <li *ngIf=\"item.selected\">\r\n                                {{item.text}}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <h4>PROJECT ADDRESSES</h4>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-md-3 col-xs-12\">\r\n                    <div class=\"col-md-12 as-lnk\">Engineering Details:</div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>{{project.engineerName}}</div>\r\n                        <div>{{project.engineerBusinessName}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>\r\n                            {{project.engineerAddress.addressLine1}} &nbsp; {{project.engineerAddress.addressLine2}}\r\n                        </div>\r\n                        <div *ngIf=\"project.engineerAddress.location\">\r\n                            {{project.engineerAddress.location}}, {{project.engineerAddress.stateName}} {{project.engineerAddress.postalCode}}, {{project.engineerAddress.countryCode}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-xs-12\">\r\n                    <div class=\"col-md-12 as-lnk\">Dealer/Contractor Details:</div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>{{project.dealerContractorName}}</div>\r\n                        <div>{{project.customerName}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>\r\n                            {{project.customerAddress.addressLine1}} &nbsp; {{project.customerAddress.addressLine2}}\r\n                        </div>\r\n                        <div *ngIf=\"project.customerAddress.location\">\r\n                            {{project.customerAddress.location}}, {{project.customerAddress.stateName}} {{project.customerAddress.postalCode}}, {{project.customerAddress.countryCode}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-xs-12\">\r\n                    <div class=\"col-md-12 as-lnk\">Seller Address:</div>\r\n                    <div class=\"col-md-12\">\r\n\r\n                        <div>{{project.sellerName}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>\r\n                            {{project.sellerAddress.addressLine1}} &nbsp; {{project.sellerAddress.addressLine2}}\r\n                        </div>\r\n                        <div *ngIf=\"project.sellerAddress.location\">\r\n                            {{project.sellerAddress.location}}, {{project.sellerAddress.stateName}} {{project.sellerAddress.postalCode}}, {{project.sellerAddress.countryCode}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-xs-12\">\r\n                    <div class=\"col-md-12 as-lnk\">Shipping Address/Project Location:</div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>{{project.shipToName}}</div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div>\r\n                            {{project.shipToAddress.addressLine1}} &nbsp; {{project.shipToAddress.addressLine2}}\r\n                        </div>\r\n                        <div *ngIf=\"project.shipToAddress.location\">\r\n                            {{project.shipToAddress.location}}, {{project.shipToAddress.stateName}} {{project.shipToAddress.postalCode}}, {{project.shipToAddress.countryCode}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <h4>ORDER DETAILS</h4>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"hidden-xs col-md-2\"></div>\r\n                <div class=\"col-md-4 col-xs-12\">\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Pipeline Status: </div> <div class=\"col-md-6 col-xs-6\">{{project.projectLeadStatusTypeDescription}}</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Order Number: </div> <div class=\"col-md-6 col-xs-6\">{{project?.eRPFirstOrderNumber}}&nbsp;</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Order Date: </div> <div class=\"col-md-6 col-xs-6\">{{project?.eRPFirstOrderDate}}&nbsp;</div>\r\n                </div>\r\n                <div class=\"col-md-4 col-xs-12\">\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Order PO Number: </div> <div class=\"col-md-6 col-xs-6\">{{project?.eRPFirstPONumber}}&nbsp;</div>\r\n                    <div class=\"col-md-6 col-xs-6 as-lnk\">Order Comments: </div> <div class=\"col-md-6 col-xs-6\">{{project?.eRPFirstOrderComment}}&nbsp;</div>\r\n                </div>\r\n                <div class=\"hidden-xs col-md-2\"></div>\r\n            </div>\r\n            <div *ngIf=\"canViewPipelineData || canEditPipelineData\">\r\n                <h4>PROJECT UPDATE NOTES</h4>\r\n                <project-pipeline-notes-update [user]=\"user\" [project]=\"project\" [canViewPipelineData]=\"canViewPipelineData\" [canEditPipelineData]=\"canEditPipelineData\"></project-pipeline-notes-update>\r\n            </div>\r\n\r\n        </div>\r\n        <div id=\"projectQuotes\" class=\"tab-pane fade\">\r\n\r\n            <div class=\"row no-gutters sub-heading\">\r\n                <h4 class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                <div *ngIf=\"canEditProject && !project.deleted && !project.isTransferred\" class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{project.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n            </div>\r\n\r\n            <active-quote-info [user]=\"user\" [quote]=\"project.activeQuoteSummary\" (showQuoteOverViewEvent)=\"showQuoteOverview()\"></active-quote-info>\r\n\r\n            <div class=\"row no-gutters sub-heading\">\r\n                <project-quotes [user]=\"user\" [project]=\"project\" [projectQuotes]=\"projectQuotes\" (reloadDataEvent)=\"reloadData()\"></project-quotes>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/project/components/project.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import 'rxjs/Rx';
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var ProjectComponent = /** @class */ (function () {
    function ProjectComponent(router, route, toastrSvc, userSvc, enums, http, projectSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.http = http;
        this.projectSvc = projectSvc;
        this.canViewPipelineData = false;
        this.canEditPipelineData = false;
        this.canEditProject = false;
        //public newProjectPipelineNote: any;
        //public projectPipelineNoteOptions: any;
        //public selectedPipelineNoteTypeId: any;// temp
        //public projectPipelineNotes: any;
        this.defaultItem = { text: "Select ...", value: null };
        this.activeTab = this.route.snapshot.url[0].path;
        if (this.route.snapshot.data['currentUser'] == null) {
            this.router.navigateByUrl("/account/login");
        }
        else {
            this.user = this.route.snapshot.data['currentUser'].model;
        }
        this.project = this.route.snapshot.data['projectModel'].model;
        this.projectQuotes = this.route.snapshot.data['projectQuotesModel'].model;
    }
    ProjectComponent.prototype.ngOnInit = function () {
        if (this.activeTab == "projectQuotes") {
            jQuery("#projectQuotesTabLink").click();
            //jQuery("#projectQuotesTabHeader").addClass("active");
            //jQuery("#projectOverviewTabHeader").removeClass("active");
        }
        this.canViewPipelineData = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewPipelineData);
        this.canEditPipelineData = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.EditPipelineData);
        this.canEditProject = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.EditProject);
    };
    ProjectComponent.prototype.onTabSelect = function (event) {
    };
    ProjectComponent.prototype.reloadData = function () {
        this.reloadProject();
        this.reloadProjectQuotes();
    };
    ProjectComponent.prototype.reloadProject = function () {
        var self = this;
        this.projectSvc.getProject(this.project.projectId)
            .subscribe(function (resp) {
            if (resp.isok) {
                self.project = resp.model;
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    ProjectComponent.prototype.reloadProjectQuotes = function () {
        var self = this;
        this.projectSvc.getProjectQuotes(this.project.projectId)
            .subscribe(function (resp) {
            if (resp.isok) {
                self.projectQuotes = resp.model;
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) { return console.log("Error: ", err); });
    };
    ProjectComponent.prototype.showQuoteOverview = function () {
        this.router.navigateByUrl("/quote/" + this.project.activeQuoteSummary.quoteId + "/existingRecord");
    };
    ProjectComponent.prototype.deleteProject = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.projectSvc.deleteProject(this.project.projectId)
            .then(function (resp) {
            if (resp.isok) {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.toastrSvc.displayResponseMessages(resp);
                _this.project.deleted = true;
            }
            else {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    ProjectComponent.prototype.undeleteProject = function () {
        var _this = this;
        //this.loadingIconSvc.Start(jQuery("#content"));
        this.projectSvc.undeleteProject(this.project)
            .then(function (resp) {
            if (resp.isok) {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.toastrSvc.displayResponseMessages(resp);
                _this.project.deleted = false;
            }
            else {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProjectComponent.prototype, "blockUI", void 0);
    ProjectComponent = __decorate([
        core_1.Component({
            selector: 'project',
            template: __webpack_require__("./src/app/project/components/project.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService,
            user_service_1.UserService, enums_1.Enums,
            http_1.Http, project_service_1.ProjectService])
    ], ProjectComponent);
    return ProjectComponent;
}());
exports.ProjectComponent = ProjectComponent;
;


/***/ }),

/***/ "./src/app/project/components/projectQuotes.component.html":
/***/ (function(module, exports) {

module.exports = "<h4 class=\"col\">PROJECT QUOTES</h4>\r\n\r\n<kendo-grid [data]=\"projectQuotes.items\">\r\n    <!--Mobile-->\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Products\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-xs-5\" style=\"font-weight:700;\">Actions</div>\r\n                <div class=\"7\">\r\n                    <kendo-dropdownbutton [data]=\"actionOptions\" [imageUrl]=\"'/v3/src/assets/images/action-icon.png'\">\r\n                        <ng-template kendoDropDownButtonItemTemplate>\r\n                            <ul class=\"nav nav-stacked\">\r\n                                <li *ngIf=\"user.showPrices\">\r\n                                    <a href=\"/ProjectDashboard/QuotePrintExcel?projectId={{project.projectId}}&quoteId={{dataItem.quoteId}}&withCostPrices=true\">\r\n                                        Export Quote\r\n                                    </a>\r\n                                </li>\r\n                                <li *ngIf=\"!user.showPrices\">\r\n                                    <a href=\"/ProjectDashboard/QuotePrintExcel?projectId={{project.projectId}}&quoteId={{dataItem.quoteId}}&withCostPrices=false\">\r\n                                        Export Quote\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"/v3/#/quoteEdit/{{project.projectId}}/{{dataItem.quoteId}}\">Edit Quote</a>\r\n                                </li>\r\n                                <li>\r\n                                    <!--<a href=\"/Projectdashboard/QuoteDuplicate?projectId={{project.projectId}}&quoteId={{dataItem.quoteId}}\">Duplicate Quote</a>-->\r\n                                    <a (click)=\"duplicateQuote(project.projectId, dataItem.quoteId)\">Duplicate Quote</a>\r\n                                </li>\r\n                            </ul>\r\n                        </ng-template>\r\n                    </kendo-dropdownbutton>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-xs-5\" style=\"font-weight:700;\">Quote:</div>\r\n                <!--<div class=\"7\">{{ dataItem.title }}</div>-->\r\n                <div class=\"7\"><a href=\"/v3/#/quote/{{dataItem.quoteId}}/existingRecord\" style=\"color:#337ab7\">{{ dataItem.title}}</a></div>\r\n\r\n                <div class=\"col-xs-5\" style=\"font-weight:700;\">Alert:</div>\r\n                <div class=\"7\">{{ dataItem.alert }}</div>\r\n                <div class=\"col-xs-5\" style=\"font-weight:700;\">Revision:</div>\r\n                <div class=\"7\">{{ dataItem.revision }}</div>\r\n                <div class=\"col-xs-5\" style=\"font-weight:700;\">Date:</div>\r\n                <div class=\"7\">{{ dataItem.timestamp | date: 'shortDate' }}</div>\r\n                <div class=\"col-xs-5\" *ngIf=\"user.showPrices\" style=\"font-weight:700;\">Total List:</div>\r\n                <div class=\"7\" *ngIf=\"user.showPrices\">{{ dataItem.totalList | currency:'USD':true:'1.2-2' }}</div>\r\n                <div class=\"col-xs-5\" *ngIf=\"user.showPrices\" style=\"font-weight:700;\">Total Net:</div>\r\n                <div class=\"7\" *ngIf=\"user.showPrices\">{{ dataItem.totalNet | currency:'USD':true:'1.2-2' }}</div>\r\n                <div class=\"col-xs-5\" *ngIf=\"user.showPrices\" style=\"font-weight:700;\">Total Sell:</div>\r\n                <div class=\"7\" *ngIf=\"user.showPrices\">{{ dataItem.totalSell | currency:'USD':true:'1.2-2' }}</div>\r\n                \r\n            </div>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-xs-5\" style=\"font-weight:700;\">Actvie</div>\r\n                <div class=\"7\">\r\n                    <kendo-switch [(ngModel)]=\"dataItem.active\" (ngModelChange)=\"setQuoteActive(dataItem)\"></kendo-switch>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <!--Desktop-->\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"\" width=\"60\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n\r\n            <kendo-dropdownbutton [data]=\"actionOptions\" [imageUrl]=\"'/v3/src/assets/images/action-icon.png'\">\r\n                <ng-template kendoDropDownButtonItemTemplate>\r\n                    <ul class=\"nav nav-stacked\">\r\n                        <li *ngIf=\"user.showPrices\">\r\n                            <a href=\"/ProjectDashboard/QuotePrintExcel?projectId={{project.projectId}}&quoteId={{dataItem.quoteId}}&withCostPrices=true\">Export Quote</a>\r\n                        </li>\r\n                        <li *ngIf=\"!user.showPrices\">\r\n                            <a href=\"/ProjectDashboard/QuotePrintExcel?projectId={{project.projectId}}&quoteId={{dataItem.quoteId}}&withCostPrices=false\">Export Quote</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/v3/#/quoteEdit/{{project.projectId}}/{{dataItem.quoteId}}\">Edit Quote</a>\r\n                        </li>\r\n                        <li>\r\n                            <!--<a href=\"/Projectdashboard/QuoteDuplicate?projectId={{project.projectId}}&quoteId={{dataItem.quoteId}}\">Duplicate Quote</a>-->\r\n                            <a (click)=\"duplicateQuote(project.projectId, dataItem.quoteId)\">Duplicate Quote</a>\r\n                        </li>\r\n                    </ul>\r\n                </ng-template>\r\n\r\n            </kendo-dropdownbutton>\r\n\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Quote\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <a href=\"/v3/#/quote/{{dataItem.quoteId}}/existingRecord\" style=\"color:#337ab7\">{{ dataItem.title}}</a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <!--<kendo-grid-column media=\"(min-width: 450px)\" field=\"alert\" title=\"Alert\">\r\n    </kendo-grid-column>-->\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"revision\" title=\"Revision\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"itemCount\" title=\"Items\">\r\n    </kendo-grid-column>\r\n   \r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Date\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            {{ dataItem.timestamp | date: 'shortDate'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.showPrices\" title=\"Total List\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            {{ dataItem.totalList | currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.showPrices\" title=\"Total Net\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            {{ dataItem.totalNet | currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.showPrices\" title=\"Total Sell\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            {{ dataItem.totalSell | currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Active\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <kendo-switch [(ngModel)]=\"dataItem.active\" (ngModelChange)=\"setQuoteActive(dataItem)\"></kendo-switch>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/project/components/projectQuotes.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import 'rxjs/Rx';
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../shared/services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var ProjectQuotesComponent = /** @class */ (function () {
    function ProjectQuotesComponent(router, route, toastrSvc, userSvc, http, quoteSvc, projectSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.http = http;
        this.quoteSvc = quoteSvc;
        this.projectSvc = projectSvc;
        this.reloadDataEvent = new core_1.EventEmitter();
        //private showActionWindow: boolean = false;
        this.actionOptions = [{}];
        this.defaultItem = { text: "Select ...", value: null };
    }
    ProjectQuotesComponent.prototype.ngOnInit = function () {
        //this.actionOptions = [{
        //    text: 'Export Quote',
        //    url: "/ProjectDashboard/QuotePrintExcel?projectId=" + this.project.projectId + "&quoteId=" + this.project.quoteId + "&withCostPrices=true"
        //}, {
        //    text: 'Edit Quote',
        //    url: "/v3/#/quoteEdit/" + this.project.projectId + "/" + this.project.quoteId
        //}, {
        //    text: 'Duplicate Quote',
        //    url: "/ProjectDashboard/QuoteDuplicate?projectId=" + this.project.projectId + "&quoteId=" + this.project.quoteId
        //}];
    };
    //public cancel() {
    //}
    //public submit() {
    //}
    //public actionWindowToggle(): void {
    //    this.showActionWindow = !this.showActionWindow;
    //}
    ProjectQuotesComponent.prototype.setQuoteActive = function (quote) {
        var _this = this;
        var self = this;
        var data = {
            "ProjectId ": this.project.projectId,
            "QuoteId": quote.quoteId
        };
        //self.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.quoteSvc.setQuoteActive(data).then(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                self.reloadData();
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            //self.loadingIconSvc.Stop(jQuery("#content"));
            _this.blockUI.stop();
            console.log(error);
        });
    };
    ProjectQuotesComponent.prototype.reloadData = function () {
        this.reloadDataEvent.emit();
    };
    ProjectQuotesComponent.prototype.duplicateQuote = function (projectId, quoteId) {
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#main-container"));
        self.blockUI.start('Loading...');
        this.quoteSvc.duplicateQuote(projectId, quoteId)
            .subscribe(function (resp) {
            if (resp.isok) {
                self.reloadData();
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                self.blockUI.stop();
            }
            else {
                //return null;
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                self.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            //self.loadingIconSvc.Stop(jQuery("#main-container"));
            self.blockUI.stop();
            console.log("Error: ", error);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ProjectQuotesComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectQuotesComponent.prototype, "project", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectQuotesComponent.prototype, "projectQuotes", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectQuotesComponent.prototype, "user", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ProjectQuotesComponent.prototype, "reloadDataEvent", void 0);
    ProjectQuotesComponent = __decorate([
        core_1.Component({
            selector: 'project-quotes',
            styles: ['/deep/ .k-grid-content .k-button {margin: 0px} /deep/ .k-list .k-item:hover{background-color: white}'],
            template: __webpack_require__("./src/app/project/components/projectQuotes.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService,
            user_service_1.UserService, http_1.Http,
            quote_service_1.QuoteService, project_service_1.ProjectService])
    ], ProjectQuotesComponent);
    return ProjectQuotesComponent;
}());
exports.ProjectQuotesComponent = ProjectQuotesComponent;
;


/***/ }),

/***/ "./src/app/project/components/projects.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n\r\n        <div class=\"tab-header\">\r\n            <h4>PROJECTS</h4>\r\n        </div>\r\n\r\n        <div *ngIf=\"canViewProject ; else elseBlock\" id=\"projectsGridContainer\">\r\n            <project-grid></project-grid>\r\n        </div>\r\n        <ng-template #elseBlock>No permission to view projects</ng-template>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/project/components/projects.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var ProjectsComponent = /** @class */ (function () {
    function ProjectsComponent(elementRef, router, route, toastrService, userSvc, enums) {
        this.router = router;
        this.route = route;
        this.userSvc = userSvc;
        this.enums = enums;
        this.canViewProject = false;
        this.elementRef = elementRef;
        this.toastrSvc = toastrService;
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    ProjectsComponent.prototype.ngOnInit = function () {
        this.userSvc.isAuthenticated().then(function (resp) {
            if (!resp.isok || resp.model != true) {
                window.location.href = "/v3/#/account/login";
            }
        });
        this.canViewProject = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewProject);
    };
    ProjectsComponent = __decorate([
        core_1.Component({
            selector: 'projects',
            template: __webpack_require__("./src/app/project/components/projects.component.html"),
            //directives: [ProjectsGridComponent, ProjectsEditAllGridComponent, ProjectsGridFilterComponent],
            providers: [toastr_service_1.ToastrService]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService, enums_1.Enums])
    ], ProjectsComponent);
    return ProjectsComponent;
}());
exports.ProjectsComponent = ProjectsComponent;


/***/ }),

/***/ "./src/app/project/components/transfer-project-popup.component.html":
/***/ (function(module, exports) {

module.exports = "<form role=\"form\">\r\n    <div class=\"form-group\">\r\n        <label>Email:</label>\r\n        <input [(ngModel)]=\"transferToEmail\" name=\"transferToEmail\" />\r\n        <div>You will not be able to edit the project once it is transferred to its new owner. Are you sure you want to transfer this project ?</div>\r\n    </div>\r\n    <div class=\"row action text-center\">\r\n        <button class=\"btn btn-primary\" (click)=\"transferProject()\">Ok</button>\r\n        <button class=\"btn btn-default\" (click)=\"closePopup()\">Cancel</button>\r\n    </div>\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/project/components/transfer-project-popup.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var TransferProjectPopupComponent = /** @class */ (function () {
    function TransferProjectPopupComponent(toastrSvc, http, projectSvc) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.projectSvc = projectSvc;
        this.closeWindow = new core_1.EventEmitter();
        this.transferToEmail = "";
    }
    TransferProjectPopupComponent.prototype.ngOnInit = function () {
        //this.projectSvc
    };
    TransferProjectPopupComponent.prototype.closePopup = function () {
        this.closeWindow.emit();
    };
    TransferProjectPopupComponent.prototype.transferProject = function () {
        var data = {
            "projectId": this.selectedProjectId,
            "email": this.transferToEmail
        };
        this.projectSvc.transferProject(data)
            .then(this.transferProjectCallback.bind(this));
        //reset email
        this.transferToEmail = "";
    };
    TransferProjectPopupComponent.prototype.transferProjectCallback = function (resp) {
        if (resp.IsOK) {
            for (var _i = 0, _a = resp.Messages.Items; _i < _a.length; _i++) {
                var message = _a[_i];
                if (message.Type == 40) {
                    this.toastrSvc.Success(message.Text);
                }
            }
            //reload projects grid
            var projectEditAllGridDtaSrc = jQuery('#project-grid').data('kendoGrid').dataSource;
            projectEditAllGridDtaSrc.read();
        }
        else {
            for (var _b = 0, _c = resp.Messages.Items; _b < _c.length; _b++) {
                var message = _c[_b];
                if (message.Type == 10) {
                    this.toastrSvc.Error(message.Text);
                }
            }
        }
        this.closePopup();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TransferProjectPopupComponent.prototype, "selectedProjectId", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TransferProjectPopupComponent.prototype, "closeWindow", void 0);
    TransferProjectPopupComponent = __decorate([
        core_1.Component({
            selector: 'transfer-project-popup',
            template: __webpack_require__("./src/app/project/components/transfer-project-popup.component.html")
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService,
            http_1.Http, project_service_1.ProjectService])
    ], TransferProjectPopupComponent);
    return TransferProjectPopupComponent;
}());
exports.TransferProjectPopupComponent = TransferProjectPopupComponent;
;


/***/ }),

/***/ "./src/app/project/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/project/services/project.service.ts"));
__export(__webpack_require__("./src/app/project/services/project-resolver.service.ts"));
__export(__webpack_require__("./src/app/project/services/project-resolver.service.ts"));
__export(__webpack_require__("./src/app/project/components/project-edit.component.ts"));
__export(__webpack_require__("./src/app/project/components/project-internal.component.ts"));
__export(__webpack_require__("./src/app/project/components/projects.component.ts"));
__export(__webpack_require__("./src/app/project/components/project-grid.component.ts"));
__export(__webpack_require__("./src/app/project/components/transfer-project-popup.component.ts"));
__export(__webpack_require__("./src/app/project/components/delete-projects-popup.component.ts"));
__export(__webpack_require__("./src/app/project/components/export-projects-popup.component.ts"));
__export(__webpack_require__("./src/app/project/components/project.component.ts"));
__export(__webpack_require__("./src/app/project/components/project-pipeline-notes-update.component.ts"));
__export(__webpack_require__("./src/app/project/components/projectQuotes.component.ts"));


/***/ }),

/***/ "./src/app/project/services/project-resolver.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var ProjectResolver = /** @class */ (function () {
    function ProjectResolver(projectSvc) {
        this.projectSvc = projectSvc;
    }
    ProjectResolver.prototype.resolve = function (route, state) {
        var projectId = route.params['id'];
        return this.projectSvc.getProject(projectId)
            .map(function (resp) {
            if (resp) {
                return resp;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    ProjectResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [project_service_1.ProjectService])
    ], ProjectResolver);
    return ProjectResolver;
}());
exports.ProjectResolver = ProjectResolver;
var ProjectQuotesResolver = /** @class */ (function () {
    function ProjectQuotesResolver(projectSvc) {
        this.projectSvc = projectSvc;
    }
    ProjectQuotesResolver.prototype.resolve = function (route, state) {
        var projectId = route.params['id'];
        return this.projectSvc.getProjectQuotes(projectId)
            .map(function (resp) {
            if (resp) {
                return resp;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    ProjectQuotesResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [project_service_1.ProjectService])
    ], ProjectQuotesResolver);
    return ProjectQuotesResolver;
}());
exports.ProjectQuotesResolver = ProjectQuotesResolver;


/***/ }),

/***/ "./src/app/project/services/project.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var ProjectService = /** @class */ (function () {
    function ProjectService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    ProjectService.prototype.getProject = function (projectId) {
        return this.http.get("/api/Project/GetProject?projectId=" + projectId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.postProject = function (project) {
        return this.http.post("/api/Project/PostProject", project, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.postProjectAndVerifyAddress = function (project) {
        return this.http.post("/api/Project/PostProjectAndVerifyAddress", project, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.getProjectQuotes = function (projectId) {
        return this.http.get("/api/Project/GetProjectQuotes?projectId=" + projectId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.exportProject = function (data) {
        var headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        this.getAttachment("/ProjectDashBoard/ExportProject", data);
    };
    ProjectService.prototype.getAttachment = function (url, params) {
        var form = jQuery('<form method="POST" id="ExportSingleProject" action="' + url + '">');
        jQuery.each(params, function (k, v) {
            form.append(jQuery('<input type="hidden" name="' + k +
                '" value="' + v + '">'));
        });
        var body = jQuery('body');
        body.append(form);
        form.submit();
        body.remove('#ExportSingleProject');
    };
    ProjectService.prototype.transferProject = function (data) {
        var headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        return this.http.post("/ProjectDashBoard/TransferProject", data, { headers: headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    ProjectService.prototype.deleteProject = function (projectId) {
        var headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        return this.http.delete("/api/Project/DeleteProject?projectId=" + projectId, { headers: headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    ProjectService.prototype.undeleteProject = function (project) {
        var headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        return this.http.post("/api/Project/UndeleteProject", project, { headers: headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    ProjectService.prototype.deleteProjects = function (data) {
        var headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        return this.http.post("/api/Project/DeleteProjects", data, { headers: headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    ProjectService.prototype.getNewProjectPipelineNote = function (projectId) {
        return this.http.get("/api/Project/GetNewProjectPipelineNote?projectId=" + projectId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.getProjectPipelineNotes = function (projectId) {
        return this.http.get("/api/Project/GetProjectPipelineNotes?projectId=" + projectId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.getProjectPipelineNoteOptions = function () {
        return this.http.get("/api/Project/GetProjectPipelineNoteTypes", { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.postProjectPipelineNote = function (data) {
        return this.http.post("/api/Project/PostProjectPipelineNote", data, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    ProjectService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    //public extractFile(res: Response) {
    //    var blob = new Blob([res._body], { type: "application/vnd.ms-excel" });
    //    var objectUrl = URL.createObjectURL(blob);
    //    window.open(objectUrl);
    //}
    ProjectService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    ProjectService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], ProjectService);
    return ProjectService;
}());
exports.ProjectService = ProjectService;


/***/ }),

/***/ "./src/app/quote/components/active-quote-info.component.html":
/***/ (function(module, exports) {

module.exports = "<!--TODO: Add code for permissions -->\r\n<div *ngIf=\"quote.quoteId != 0\" id=\"active-quote-info\" class=\"row no-gutters align-items-center active-quote-bar\">\r\n    <div class=\"col col-md-3\"> <a (click)=\"showQuoteOverview()\"> <span class=\"glyphicon glyphicon-list-alt\"></span> {{quote.title}} </a></div>\r\n    <!--<div class=\"col col-md-2\">\r\n         <div class=\"row\">\r\n             <div *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"col col-md-12\">\r\n                 <div class=\"col col-xs-6 col-md-12\">Pricing has changed</div>\r\n                 <div class=\"col col-xs-6 col-md-12\"><button class=\"btn btn-default\">RECALCULATE</button></div>\r\n             </div>\r\n         </div>\r\n    </div>-->\r\n\r\n    <div class=\"col col-md-9\">\r\n        <div class=\"row \">\r\n\r\n            <div class=\"col col-md-2 no-padding\">\r\n                <div *ngIf=\"quote.recalculationRequired\" class=\"col col-xs-6 col-md-12 no-padding as-lnk\"><span class=\"k-icon k-i-warning\"></span> Pricing has changed</div>\r\n                <div *ngIf=\"quote.recalculationRequired\" class=\"col col-xs-6 col-md-12 no-padding\"><button class=\"btn btn-default\" (click)=\"quoteRecalculate()\">RECALCULATE</button></div>\r\n            </div>\r\n\r\n            <div *ngIf=\"quote.isCommission && user.showPrices ; else elseBlock\">\r\n                <div class=\"col col-md-1\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Revision</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.revision}}</div>\r\n                </div>\r\n                <div class=\"col col-md-1\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Date</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.timestamp | date:'shortDate'}}</div>\r\n                </div>\r\n\r\n                <div *ngIf=\"user.showPrices\" class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">List Price</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div *ngIf=\"user.showPrices\" class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Net Price</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.totalNetCommission | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-8 col-md-12 no-padding\">Commission Amount</div>\r\n                    <div class=\"col col-xs-4 col-md-12 no-padding\">{{quote.commissionAmount | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n                <div class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-8 col-md-12 no-padding\">Net Material Value</div>\r\n                    <div class=\"col col-xs-4 col-md-12 no-padding\">{{quote.commissionNetMultiplierValue | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n            </div>\r\n            <ng-template #elseBlock>\r\n                <div class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Revision</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.revision}}</div>\r\n                </div>\r\n                <div class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Date</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.timestamp | date:'shortDate'}}</div>\r\n                </div>\r\n\r\n                <div *ngIf=\"user.showPrices\" class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Net Price</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.totalNet | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n\r\n                <div *ngIf=\"user.showPrices\" class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">List Price</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n                <div *ngIf=\"user.showPrices\" class=\"col col-md-2\">\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">Total Price</div>\r\n                    <div class=\"col col-xs-6 col-md-12 no-padding\">{{quote.totalSell | currency:'USD':true:'1.2-2'}}</div>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"quote.quoteId == 0\" id=\"active-quote-info\" class=\"row no-gutters align-items-center active-quote-bar\">\r\n    <div> <span class=\"glyphicon glyphicon-list-alt\"></span> No Active Quote</div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/quote/components/active-quote-info.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var ActiveQuoteInfoComponent = /** @class */ (function () {
    function ActiveQuoteInfoComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        //this.accountSvc.getUserLoginModel().then(this.getUserLoginModelCallback.bind(this));
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
        this.showQuoteOverViewEvent = new core_1.EventEmitter();
        this.reloadDataEvent = new core_1.EventEmitter();
        //this.accountSvc.getUserLoginModel()
        //    .subscribe(
        //    data => {
        //        this.user = data.model
        //    },
        //    err => console.log("Error: ", err)
        //    );
        //this.quote = this.route.snapshot.data['quoteModel'].model;
        //this.user = this.route.snapshot.data['currentUser'].model;
    }
    ActiveQuoteInfoComponent.prototype.ngOnInit = function () { };
    ActiveQuoteInfoComponent.prototype.showQuoteOverview = function () {
        this.showQuoteOverViewEvent.emit();
    };
    ActiveQuoteInfoComponent.prototype.quoteRecalculate = function () {
        var _this = this;
        var self = this;
        var data = {
            "ProjectId": this.quote.projectId,
            "QuoteId": this.quote.quoteId,
            "RecalculationRequired": this.quote.recalculationRequired,
        };
        //self.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.quoteSvc.quoteRecalculate(data)
            .then(function (resp) {
            if (resp.isok) {
                //reload page
                self.toastrSvc.displayResponseMessages(resp);
                self.quote.recalculationRequired = resp.model.recalculationRequired;
                //self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                self.reloadDataEvent.emit();
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
            }
        }).catch(function (error) {
            //self.loadingIconSvc.Stop(jQuery("#content"));
            //console.log('Retrieval error: ${error}');
            _this.blockUI.stop();
            console.log(error);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ActiveQuoteInfoComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ActiveQuoteInfoComponent.prototype, "user", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ActiveQuoteInfoComponent.prototype, "showQuoteOverViewEvent", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ActiveQuoteInfoComponent.prototype, "reloadDataEvent", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], ActiveQuoteInfoComponent.prototype, "blockUI", void 0);
    ActiveQuoteInfoComponent = __decorate([
        core_1.Component({
            selector: "active-quote-info",
            template: __webpack_require__("./src/app/quote/components/active-quote-info.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], ActiveQuoteInfoComponent);
    return ActiveQuoteInfoComponent;
}());
exports.ActiveQuoteInfoComponent = ActiveQuoteInfoComponent;
;


/***/ }),

/***/ "./src/app/quote/components/add-import-products-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-dialog *ngIf=\"dialogOpen && recordState=='newRecord'\" title=\"Add or Import Products\" (close)=\"closeDialog()\">\r\n    <p>Quote has been created. You can now add or import products to the quote, or close the window to view the new quote.</p>\r\n    <kendo-dialog-actions>\r\n        <button kendoButton (click)=\"browseProductsWithQuoteId()\">Add Products</button>\r\n        <button kendoButton (click)=\"closeDialog()\" primary=\"true\" data-toggle=\"modal\" data-target=\"#importProductsPopup\">Import Products</button>\r\n        <button kendoButton (click)=\"closeDialog()\" primary=\"true\" data-toggle=\"modal\" data-target=\"#selectProductsPopup\">Select Products</button>\r\n    </kendo-dialog-actions>\r\n</kendo-dialog>\r\n"

/***/ }),

/***/ "./src/app/quote/components/add-import-products-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var AddImportProductsDialogComponent = /** @class */ (function () {
    function AddImportProductsDialogComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, productSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.productSvc = productSvc;
        this.enums = enums;
        this.dialogOpen = true;
    }
    AddImportProductsDialogComponent.prototype.ngOnInit = function () { };
    AddImportProductsDialogComponent.prototype.closeDialog = function () {
        this.dialogOpen = false;
    };
    AddImportProductsDialogComponent.prototype.browseProductsWithQuoteId = function () {
        this.productSvc.browseProductsWithQuoteId(this.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                //self.quoteItems = resp.model;
                window.location.href = "/v3/#/product";
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddImportProductsDialogComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddImportProductsDialogComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AddImportProductsDialogComponent.prototype, "recordState", void 0);
    AddImportProductsDialogComponent = __decorate([
        core_1.Component({
            selector: "add-import-products-dialog",
            template: __webpack_require__("./src/app/quote/components/add-import-products-dialog.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            product_service_1.ProductService,
            enums_1.Enums])
    ], AddImportProductsDialogComponent);
    return AddImportProductsDialogComponent;
}());
exports.AddImportProductsDialogComponent = AddImportProductsDialogComponent;


/***/ }),

/***/ "./src/app/quote/components/import-products-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<!--desktop-->\r\n<button id=\"importProductsBtn\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary hidden-xs\" data-toggle=\"modal\" data-target=\"#importProductsPopup\"><span class=\"k-icon k-i-file-add\"></span> IMPORT PRODUCTS</button>\r\n<!--phone-->\r\n<button style=\"width:90%; margin-top:5px;\" id=\"importProductsBtn\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary btn-block visible-xs\" data-toggle=\"modal\" data-target=\"#importProductsPopup\"><span class=\"k-icon k-i-file-add\"></span> IMPORT PRODUCTS</button>\r\n\r\n<div id=\"importProductsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">IMPORT ITEMS:</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Import product lists generated in any of our suites of software.</p>\r\n                <p>Select Product List:</p>\r\n                <p style=\"font-style:italic; color:gray;\">(only .csv or .xml file are allowed)</p>\r\n                <kendo-upload \r\n                              [autoUpload]=\"false\"\r\n                              [saveUrl]=\"importUrl\"\r\n                              [multiple]=\"false\"\r\n                              [(ngModel)]=\"importFiles\"\r\n                              (select)=\"selectEventHandler($event)\"\r\n                              (upload)=\"uploadEventHandler($event)\"\r\n                              [withCredentials]=\"true\"\r\n                              (success)=\"successEventHandler($event)\"\r\n                              (error)=\"errorEventHandler($event)\" >\r\n                </kendo-upload>\r\n               \r\n            </div>\r\n            <!--<div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"cancel()\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"import()\">Import</button>\r\n            </div>-->\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/quote/components/import-products-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var ImportProductsDialogComponent = /** @class */ (function () {
    function ImportProductsDialogComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
        this.reloadDataEvent = new core_1.EventEmitter();
        //public importUrl: string = "/ProjectDashboard/QuoteImport";
        this.importUrl = "/api/Quote/QuoteImport";
    }
    ImportProductsDialogComponent.prototype.ngOnInit = function () { };
    ImportProductsDialogComponent.prototype.cancel = function () { };
    ImportProductsDialogComponent.prototype.import = function () {
    };
    ImportProductsDialogComponent.prototype.selectEventHandler = function (e) {
        console.log("File selected");
    };
    ImportProductsDialogComponent.prototype.uploadEventHandler = function (e) {
        console.log("File Upload");
        e.data = {
            QuoteId: this.quote.quoteId,
            ProjectId: this.quote.projectId
        };
    };
    ImportProductsDialogComponent.prototype.successEventHandler = function (e) {
        var self = this;
        if (e.response.ok == true) {
            console.log("The " + e.operation + " was successful!");
            this.toastrSvc.Success("Quote '" + this.quote.title + "' has been updated.");
            this.reloadDataEvent.emit();
            jQuery('button.close[data-dismiss=modal]').click();
        }
    };
    ImportProductsDialogComponent.prototype.errorEventHandler = function (e) {
        console.log("Error: " + e.response.statusText);
        this.toastrSvc.ErrorFadeOut(e.response.statusText);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ImportProductsDialogComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ImportProductsDialogComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ImportProductsDialogComponent.prototype, "quoteItems", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ImportProductsDialogComponent.prototype, "reloadDataEvent", void 0);
    ImportProductsDialogComponent = __decorate([
        core_1.Component({
            selector: "import-products-dialog",
            template: __webpack_require__("./src/app/quote/components/import-products-dialog.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], ImportProductsDialogComponent);
    return ImportProductsDialogComponent;
}());
exports.ImportProductsDialogComponent = ImportProductsDialogComponent;


/***/ }),

/***/ "./src/app/quote/components/option-items.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid *ngIf=\"optionItems\" [data]=\"optionItems\">\r\n\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Components\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt>Product Option</dt>\r\n                <dd>{{ dataItem.optionProductNumber }}</dd>\r\n                <dt>Description</dt>\r\n                <dd>{{ dataItem.optionProductName }}</dd>\r\n                <dt>Quantity</dt>\r\n                <dd>{{ dataItem.requiredQuantity*unitQuantity }}</dd>\r\n                <dt>List Price</dt>\r\n                <dd>{{ dataItem.listPrice | currency:'USD':'$':'1.2-2' }}</dd>\r\n                <dt>Type</dt>\r\n                <dd>{{ dataItem.lineItemOptionTypeDescription }}</dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"optionProductNumber\" title=\"Product Option\" width=\"200\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"optionProductName\" title=\"Description\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Quantity\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.requiredQuantity*unitQuantity}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"listPrice\" title=\"List Price Each\" format=\"{0:c}\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"lineItemOptionTypeDescription\" title=\"Type\">\r\n    </kendo-grid-column>\r\n    \r\n</kendo-grid>\r\n"

/***/ }),

/***/ "./src/app/quote/components/option-items.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var OptionItemsComponent = /** @class */ (function () {
    function OptionItemsComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
    }
    OptionItemsComponent.prototype.ngOnInit = function () {
        this.loadOptionItems();
    };
    OptionItemsComponent.prototype.loadOptionItems = function () {
        var self = this;
        this.quoteSvc.getOptionItems(this.configuredItem.quoteItemId).then(function (resp) {
            if (resp.isok) {
                self.optionItems = resp.model;
            }
            else {
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], OptionItemsComponent.prototype, "configuredItem", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], OptionItemsComponent.prototype, "unitQuantity", void 0);
    OptionItemsComponent = __decorate([
        core_1.Component({
            selector: "option-items",
            template: __webpack_require__("./src/app/quote/components/option-items.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], OptionItemsComponent);
    return OptionItemsComponent;
}());
exports.OptionItemsComponent = OptionItemsComponent;


/***/ }),

/***/ "./src/app/quote/components/quote-button-bar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row no-gutters btn-bar\">\r\n    <div class=\"col pull-right hidden-xs\">\r\n        <span *ngIf=\"!quoteItems\" class=\"k-icon k-i-loading\"></span>\r\n        <!--<a href=\"/v3/#/orderForm/{{quote.projectId}}/{{quote.quoteId}}/new\" *ngIf=\"quote.orderOptions.canSubmitOrder\" class=\"btn btn-primary\">SUBMIT ORDER</a>-->\r\n        <!--<a (click)=\"openOrderForm()\" *ngIf=\"quote.orderOptions.canSubmitOrder\" class=\"btn btn-primary\">SUBMIT ORDER</a>-->\r\n        <a (click)=\"openOrderForm()\" \r\n           *ngIf=\"quote.orderOptions.canSubmitOrder\" \r\n           [attr.disabled]=\"!quoteItems? 'disabled': null\" \r\n           class=\"btn btn-primary\">SUBMIT ORDER\r\n        </a>\r\n        <button *ngIf=\"quote.quoteOptions.canSetActive\" \r\n                class=\"btn btn-primary\" \r\n                (click)=\"setQuoteActive()\">SET AS ACTIVE QUOTE\r\n        </button>\r\n      \r\n        <a href=\"/v3/#/quoteEdit/{{quote.projectId}}/{{quote.quoteId}}\" \r\n           *ngIf=\"quote.quoteOptions.canEditQuote\" \r\n           class=\"btn btn-default\">\r\n           <span class=\"glyphicon glyphicon-pencil\"></span> EDIT QUOTE\r\n        </a>\r\n        <button *ngIf=\"quote.quoteOptions.canDeleteQuote\" \r\n                class=\"btn btn-default\" (click)=\"deleteQuote()\">\r\n                <span class=\"glyphicon glyphicon-trash\"></span> DELETE QUOTE\r\n        </button>\r\n        <button *ngIf=\"quote.quoteOptions.canUnDeleteQuote\" \r\n                class=\"btn btn-default\" \r\n                (click)=\"undeleteQuote()\">\r\n            <span class=\"glyphicon glyphicon-trash\"></span> UNDELETE QUOTE\r\n        </button>\r\n        <a (click)=\"requestDiscount()\" \r\n           *ngIf=\"quote.quoteOptions.canRequestDiscount\" \r\n           [attr.disabled]=\"!quoteItems? 'disabled': null\" \r\n           class=\"btn btn-default\">\r\n           <img src=\"/v3/src/assets/images/request.png\" width=\"17\" height=\"17\" /> REQUEST DISCOUNT\r\n        </a>\r\n        <a (click)=\"requestCommission()\" \r\n           *ngIf=\"quote.quoteOptions.canRequestCommission\" \r\n           [attr.disabled]=\"!quoteItems? 'disabled': null\" \r\n           class=\"btn btn-default\">\r\n           <img src=\"/v3/src/assets/images/request.png\" width=\"17\" height=\"17\" /> REQUEST COMMISSION\r\n        </a>\r\n\r\n        <button *ngIf=\"user.showPrices\" \r\n                class=\"btn btn-default\" \r\n                data-toggle=\"modal\" \r\n                data-target=\"#quotePrintModal\">\r\n                <span class=\"glyphicon glyphicon-print\"></span> PRINT QUOTE\r\n        </button>\r\n        <button *ngIf=\"user.showPrices\" \r\n                class=\"btn btn-default\" \r\n                data-toggle=\"modal\" \r\n                data-target=\"#quoteDownloadModal\">\r\n                <span class=\"glyphicon glyphicon-download-alt\"></span> DOWNLOAD QUOTE\r\n        </button>\r\n        <button *ngIf=\"!user.showPrices\" \r\n                class=\"btn btn-default\" \r\n                (click)=\"quotePrintNoPrices()\">\r\n                <span class=\"glyphicon glyphicon-print\"></span> PRINT QUOTE\r\n        </button>\r\n        <button *ngIf=\"!user.showPrices\" \r\n                class=\"btn btn-default\" \r\n                (click)=\"quoteDownloadNoPrices()\">\r\n                <span class=\"glyphicon glyphicon-download-alt\"></span> DOWNLOAD QUOTE\r\n        </button>\r\n         \r\n        <a *ngIf=\"!quote.isDeleted\"  href=\"/v3/#/submittalPackage/{{quote.projectId}}/{{quote.quoteId}}\" \r\n           class=\"btn btn-default\">\r\n            <img src=\"/v3/src/assets/images/package-quote-icon.png\" /> SUBMITTAL PACKAGE\r\n        </a>\r\n         \r\n        <button *ngIf=\"quote.quoteOptions.canDuplicate\" \r\n                class=\"btn btn-default\" \r\n                (click)=\"duplicateQuote()\">\r\n                <span class=\"glyphicon glyphicon-duplicate\"></span> DUPLICATE QUOTE\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"col visible-xs\">\r\n         \r\n        <a style=\"width:90%\" \r\n           (click)=\"openOrderForm()\" \r\n           *ngIf=\"quote.orderOptions.canSubmitOrder\" \r\n           class=\"btn btn-primary btn-block\">SUBMIT ORDER\r\n        </a>\r\n        <button style=\"width:90%\" \r\n                *ngIf=\"quote.quoteOptions.canSetActive\" \r\n                class=\"btn btn-primary btn-block\" \r\n                (click)=\"setQuoteActive()\">SET AS ACTIVE QUOTE\r\n        </button>\r\n        \r\n        <a style=\"width:90%\" href=\"/v3/#/quoteEdit/{{quote.projectId}}/{{quote.quoteId}}\" \r\n           *ngIf=\"quote.quoteOptions.canEditQuote\" \r\n           class=\"btn btn-default btn-block\">\r\n            <span class=\"glyphicon glyphicon-pencil\"></span> EDIT QUOTE\r\n        </a>\r\n        <button style=\"width:90%\" *ngIf=\"quote.quoteOptions.canDeleteQuote\" \r\n                class=\"btn btn-default btn-block\" \r\n                (click)=\"deleteQuote()\">\r\n                <span class=\"glyphicon glyphicon-trash\"></span> DELETE QUOTE\r\n        </button>\r\n        <button style=\"width:90%\" *ngIf=\"quote.quoteOptions.canUnDeleteQuote\" \r\n                class=\"btn btn-default btn-block\" (click)=\"undeleteQuote()\">\r\n                <span class=\"glyphicon glyphicon-trash\"></span> UNDELETE QUOTE\r\n        </button>\r\n        \r\n        <a style=\"width:90%\" (click)=\"requestDiscount()\" \r\n           *ngIf=\"quote.quoteOptions.canRequestDiscount\" \r\n           class=\"btn btn-default btn-block\">\r\n            <img src=\"/v3/src/assets/images/request.png\" width=\"17\" height=\"17\" /> REQUEST DISCOUNT\r\n        </a>        \r\n        <a style=\"width:90%\" (click)=\"requestCommission()\" \r\n           *ngIf=\"quote.quoteOptions.canRequestCommission\" \r\n           class=\"btn btn-default btn-block\">\r\n            <img src=\"/v3/src/assets/images/request.png\" width=\"17\" height=\"17\" /> REQUEST COMMISSION\r\n        </a>\r\n        <button style=\"width:90%\" *ngIf=\"user.showPrices\" \r\n                class=\"btn btn-default btn-block\" \r\n                data-toggle=\"modal\" \r\n                data-target=\"#quotePrintModal\">\r\n                <span class=\"glyphicon glyphicon-print\"></span> PRINT QUOTE\r\n        </button>\r\n        <button style=\"width:90%\" *ngIf=\"user.showPrices\" \r\n                class=\"btn btn-default btn-block\" \r\n                data-toggle=\"modal\" \r\n                data-target=\"#quoteDownloadModal\">\r\n                <span class=\"glyphicon glyphicon-download-alt\"></span> DOWNLOAD QUOTE\r\n        </button>\r\n        <button style=\"width:90%\" *ngIf=\"!user.showPrices\" \r\n                class=\"btn btn-default btn-block\" \r\n                (click)=\"quotePrintNoPrices()\">\r\n                <span class=\"glyphicon glyphicon-print\"></span> PRINT QUOTE\r\n        </button>\r\n        <button style=\"width:90%\" *ngIf=\"!user.showPrices\" \r\n                class=\"btn btn-default btn-block\" \r\n                (click)=\"quoteDownloadNoPrices()\">\r\n                <span class=\"glyphicon glyphicon-download-alt\"></span> DOWNLOAD QUOTE\r\n        </button>\r\n        <a style=\"width:90%\" href=\"/v3/#/submittalPackage/{{quote.projectId}}/{{quote.quoteId}}\" \r\n           class=\"btn btn-default btn-block\">\r\n           <img src=\"/v3/src/assets/images/package-quote-icon.png\" /> SUBMITTAL PACKAGE\r\n        </a>\r\n        <a style=\"width:90%\" href=\"/Projectdashboard/QuoteDuplicate?projectId={{quote.projectId}}&quoteId={{quote.quoteId}}\" \r\n           *ngIf=\"quote.quoteOptions.canDuplicate\" \r\n           class=\"btn btn-default btn-block\">\r\n            <span class=\"glyphicon glyphicon-duplicate\"></span> DUPLICATE QUOTE\r\n        </a>\r\n    </div>\r\n</div>\r\n \r\n<div id=\"quotePrintModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHOW COST PRICING</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Should cost pricing be included in this print report?</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"quotePrintNoPrices()\">NO</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"quotePrintWithPrices()\">YES</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div id=\"quoteDownloadModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHOW COST PRICING</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>Should cost pricing be included in this download?</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"quoteDownloadNoPrices()\">NO</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"quoteDownloadWithPrices()\">YES</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"quoteItems\" id=\"inventoryCheckModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Inventory Check</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{message}}</p>\r\n                <p *ngIf=\"!quoteItems.hasObsoleteAndUnavailableProduct\" style=\"font-size:smaller; font-style:italic\"><span style=\"color:red;\">*</span> Product(s) may not be available while placing the order</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                \r\n                <button *ngIf=\"quoteItems.hasObsoleteAndUnavailableProduct\" type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Revise</button>\r\n\r\n                <button *ngIf=\"!quoteItems.hasObsoleteAndUnavailableProduct\" type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Revise</button>\r\n                <a *ngIf=\"!quoteItems.hasObsoleteAndUnavailableProduct\"\r\n                   class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"redirect()\">Continue</a>\r\n                <!--<a  *ngIf=\"!quoteItems.hasObsoleteAndUnavailableProduct\" \r\n                    href=\"{{actionUrl}}\"\r\n                    class=\"btn btn-primary\" data-dismiss=\"modal\">Continue</a>-->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/quote/components/quote-button-bar.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var QuoteButtonBarComponent = /** @class */ (function () {
    function QuoteButtonBarComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
        this.reloadDataEvent = new core_1.EventEmitter();
    }
    QuoteButtonBarComponent.prototype.ngOnChanges = function (changes) {
        //console.log("ngOnChanges");
    };
    QuoteButtonBarComponent.prototype.ngOnInit = function () { };
    QuoteButtonBarComponent.prototype.openOrderForm = function () {
        //this.actionUrl = "/ProjectDashboard/OrderForm?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId;
        this.actionUrl = "/v3/#/orderForm/" + this.quote.projectId + "/" + this.quote.quoteId + "/new";
        //this.actionUrl = "/orderForm/" + this.quote.projectId + "/" + this.quote.quoteId + "/new";
        this.setupInventoryCheckModal();
    };
    QuoteButtonBarComponent.prototype.requestDiscountMVC = function () {
        this.actionUrl = "/ProjectDashboard/DiscountRequest?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId;
        this.setupInventoryCheckModal();
    };
    QuoteButtonBarComponent.prototype.requestDiscount = function () {
        this.actionUrl = "/v3/#/discountRequest/0/" + this.quote.projectId + "/" + this.quote.quoteId;
        this.setupInventoryCheckModal();
    };
    QuoteButtonBarComponent.prototype.requestCommissionMVC = function () {
        if (this.quote.commissionRequestId != null && this.quote.commissionRequestStatusTypeId != this.enums.CommissionRequestStatusTypeEnum.Deleted) {
            this.actionUrl = "/ProjectDashboard/CommissionRequest?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId + "&commissionRequestId=" + this.quote.commissionRequestId;
        }
        else {
            this.actionUrl = "/ProjectDashboard/CommissionRequest?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId;
        }
        this.setupInventoryCheckModal();
    };
    QuoteButtonBarComponent.prototype.requestCommission = function () {
        if (this.quote.commissionRequestId != null && this.quote.commissionRequestStatusTypeId != this.enums.CommissionRequestStatusTypeEnum.Deleted) {
            this.actionUrl = "/v3/#/commissionRequest/" + this.quote.commissionRequestId + "/" + this.quote.projectId + "/" + this.quote.quoteId;
        }
        else {
            this.actionUrl = "/v3/#/commissionRequest/0/" + this.quote.projectId + "/" + this.quote.quoteId;
        }
        this.setupInventoryCheckModal();
    };
    QuoteButtonBarComponent.prototype.setupInventoryCheckModal = function () {
        if (this.quoteItems.hasObsoleteAndUnavailableProduct) {
            this.message = "This quote contains product(s) which are Obsolete and Unavailable. Please review and revise product(s) list to continue processing the quote or contact your Daikin Sales Representative.";
            jQuery("#inventoryCheckModal").modal({ backdrop: 'static', keyboard: false });
        }
        else if (this.quoteItems.hasObsoleteProduct || this.quoteItems.hasUnavailableProduct) {
            this.message = "This quote contains obsolete or unavailable product(s). Please review and revise product(s) list or contact your Daikin Sales Representative.";
            jQuery("#inventoryCheckModal").modal({ backdrop: 'static', keyboard: false });
        }
        else {
            window.location.href = this.actionUrl;
            //this.router.navigateByUrl(this.actionUrl);
        }
    };
    QuoteButtonBarComponent.prototype.redirect = function () {
        window.location.href = this.actionUrl;
        //this.router.navigateByUrl(this.actionUrl);
    };
    QuoteButtonBarComponent.prototype.setQuoteActive = function () {
        var _this = this;
        var self = this;
        var data = {
            "ProjectId ": this.quote.projectId,
            "QuoteId": this.quote.quoteId
        };
        this.blockUI.start('Loading...');
        this.quoteSvc.setQuoteActive(data).then(function (resp) {
            if (resp.isok) {
                self.toastrSvc.displayResponseMessages(resp);
                _this.blockUI.stop();
                //window.location.href = "/ProjectDashboard/ProjectQuotes/" + this.quote.projectId;
                self.reloadDataEvent.emit();
            }
            else {
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            _this.blockUI.stop();
            console.log(error);
        });
    };
    QuoteButtonBarComponent.prototype.deleteQuote = function () {
        var _this = this;
        var self = this;
        var data = {
            "ProjectId ": this.quote.projectId,
            "QuoteId": this.quote.quoteId
        };
        this.blockUI.start('Loading...');
        this.quoteSvc.deleteQuote(data).then(function (resp) {
            if (resp.isok) {
                self.toastrSvc.displayResponseMessages(resp);
                _this.blockUI.stop();
                //window.location.href = "/ProjectDashboard/ProjectQuotes/" + this.quote.projectId;
                self.reloadDataEvent.emit();
            }
            else {
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            _this.blockUI.stop();
            console.log(error);
        });
    };
    QuoteButtonBarComponent.prototype.undeleteQuote = function () {
        var _this = this;
        var self = this;
        var data = {
            "ProjectId ": this.quote.projectId,
            "QuoteId": this.quote.quoteId
        };
        //self.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.quoteSvc.undeleteQuote(data).then(function (resp) {
            if (resp.isok) {
                self.toastrSvc.displayResponseMessages(resp);
                // self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                //window.location.href = "/ProjectDashboard/ProjectQuotes/" + this.quote.projectId;
                self.reloadDataEvent.emit();
            }
            else {
                // self.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            // self.loadingIconSvc.Stop(jQuery("#content"));
            _this.blockUI.stop();
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteButtonBarComponent.prototype.quotePrintNoPrices = function () {
        //var url = "/ProjectDashboard/QuotePrint?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId + "&withCostPrices=false";
        var url = "/Document/QuotePrint/" + this.quote.projectId + "?quoteId=" + this.quote.quoteId;
        window.open(url, '_blank');
    };
    QuoteButtonBarComponent.prototype.quotePrintWithPrices = function () {
        //var url = "/ProjectDashboard/QuotePrint?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId + "&withCostPrices=true";
        var url = "/Document/QuotePrintWithCostPrice/" + this.quote.projectId + "?quoteId=" + this.quote.quoteId;
        window.open(url, '_blank');
    };
    QuoteButtonBarComponent.prototype.quoteDownloadNoPrices = function () {
        var url = "/ProjectDashboard/QuotePrintExcel?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId + "&withCostPrices=false";
        window.open(url, '_blank');
    };
    QuoteButtonBarComponent.prototype.quoteDownloadWithPrices = function () {
        var url = "/ProjectDashboard/QuotePrintExcel?projectId=" + this.quote.projectId + "&quoteId=" + this.quote.quoteId + "&withCostPrices=true";
        window.open(url, '_blank');
    };
    QuoteButtonBarComponent.prototype.duplicateQuote = function () {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#main-container"));
        this.blockUI.start('Loading...');
        this.quoteSvc.duplicateQuote(this.quote.projectId, this.quote.quoteId)
            .subscribe(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                _this.blockUI.stop();
                //redirect
                _this.router.navigateByUrl("/projectQuotes/" + _this.quote.projectId);
            }
            else {
                //return null;
                //self.loadingIconSvc.Stop(jQuery("#main-container"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
            }
        }, function (error) {
            //self.loadingIconSvc.Stop(jQuery("#main-container"));
            _this.blockUI.stop();
            console.log("Error: ", error);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteButtonBarComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteButtonBarComponent.prototype, "quoteItems", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteButtonBarComponent.prototype, "user", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], QuoteButtonBarComponent.prototype, "reloadDataEvent", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], QuoteButtonBarComponent.prototype, "blockUI", void 0);
    QuoteButtonBarComponent = __decorate([
        core_1.Component({
            selector: "quote-button-bar",
            template: __webpack_require__("./src/app/quote/components/quote-button-bar.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], QuoteButtonBarComponent);
    return QuoteButtonBarComponent;
}());
exports.QuoteButtonBarComponent = QuoteButtonBarComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote-commission-requests.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid *ngIf=\"quoteItems\" #grid id=\"quoteCommissionRequestsGrid\" [data]=\"commissionRequests\">\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Commission Requests\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt>Reference</dt>\r\n                <dd>{{ dataItem.commissionRequestId }}</dd>\r\n                <dt>Request Date</dt>\r\n                <dd>{{ dataItem.requestedOn | date :'shortDate' }}</dd>\r\n                <dt>Request Status</dt>\r\n                <dd>{{ dataItem.commissionRequestStatusTypeDescription }}</dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"commissionRequestId\" title=\"Reference\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <!--<a href=\"/ProjectDashboard/CommissionRequest?CommissionRequestId={{dataItem.commissionRequestId}}\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.commissionRequestId}}</a>-->\r\n            <a href=\"/v3/#/commissionRequest/{{dataItem.commissionRequestId}}/{{dataItem.projectId}}/{{dataItem.quoteId}}\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.commissionRequestId}}</a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"requestedOn\" title=\"Request Date\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.requestedOn | date :'shortDate'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"commissionRequestStatusTypeDescription\" title=\"Request Status\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.commissionRequestStatusTypeId == enums.CommissionRequestStatusTypeEnum.Approved\" style=\"color:#5dad70\">{{dataItem.commissionRequestStatusTypeDescription}}</span>\r\n            <span *ngIf=\"dataItem.commissionRequestStatusTypeId != enums.CommissionRequestStatusTypeEnum.Approved\">{{dataItem.commissionRequestStatusTypeDescription}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/quote/components/quote-commission-requests.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var QuoteCommissionRequestsComponent = /** @class */ (function () {
    function QuoteCommissionRequestsComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
    }
    QuoteCommissionRequestsComponent.prototype.ngOnChanges = function () {
        var _this = this;
        this.commissionRequests = this.quoteItems.commissionRequests
            .filter(function (cr) { return cr.commissionRequestStatusTypeId != _this.enums.CommissionRequestStatusTypeEnum.NewRecord; });
    };
    QuoteCommissionRequestsComponent.prototype.ngOnInit = function () {
        //this.commissionRequests = this.quoteItems.commissionRequests.filter((cr:any) => cr.commissionRequestStatusTypeId != this.enums.CommissionRequestStatusTypeEnum.NewRecord);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteCommissionRequestsComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteCommissionRequestsComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteCommissionRequestsComponent.prototype, "quoteItems", void 0);
    QuoteCommissionRequestsComponent = __decorate([
        core_1.Component({
            selector: "quote-commission-requests",
            template: __webpack_require__("./src/app/quote/components/quote-commission-requests.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], QuoteCommissionRequestsComponent);
    return QuoteCommissionRequestsComponent;
}());
exports.QuoteCommissionRequestsComponent = QuoteCommissionRequestsComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote-details.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row quote-details\">\r\n    <div class=\"row no-gutters sub-heading\">\r\n        <h4 class=\"col pull-left\">DETAILS</h4>\r\n        <div class=\"col pull-right\">\r\n            <!--<a href=\"/Projectdashboard/QuoteEdit?projectId={{quote.projectId}}&quoteId={{quote.quoteId}}\" *ngIf=\"quote.quoteOptions.canEditQuote\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-pencil\"></span> EDIT QUOTE</a>-->\r\n            <a href=\"/v3/#/quoteEdit/{{quote.projectId}}/{{quote.quoteId}}\" *ngIf=\"quote.quoteOptions.canEditQuote\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-pencil\"></span> EDIT QUOTE</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col col-md-6 quote-details-info\">\r\n            <div class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Quote Name:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.title}}</div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Revision:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.revision}}</div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Date:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.timestamp | date :'medium'}}</div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Quote Description:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.description}}</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col col-md-6 quote-details-info\">\r\n            <div class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Pricing Method:</div>\r\n                <div class=\"col col-xs-6 col-md-6\" *ngIf=\"quote.isCommission; else elseBlock1\">Commission</div>\r\n                <ng-template #elseBlock1>\r\n                    <div class=\"col col-xs-6 col-md-6\" *ngIf=\"quote.isGrossMargin; else elseBlock2\">Gross Margin</div>\r\n                </ng-template>\r\n                <ng-template #elseBlock2>\r\n                    <div class=\"col col-xs-6 col-md-6\">Mark Up</div>\r\n                </ng-template>\r\n            </div>\r\n            <div *ngIf=\"user.showPrices && !quote.isCommission\" class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Discount Percentage:</div>\r\n                <!--<div class=\"col col-xs-6 col-md-6\">{{quote.approvedDiscountPercentage*100}} %</div>-->\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.approvedDiscountPercentage | percent:'1.2-3'}}</div>\r\n            </div>\r\n            <div *ngIf=\"user.showPrices && quote.isCommission\" class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Commission Percentage:</div>\r\n                <!--<div class=\"col col-xs-6 col-md-6\">{{quote.commissionPercentage}} %</div>-->\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.commissionPercentage | percent:'1.2-3'}}</div>\r\n            </div>\r\n            <div *ngIf=\"user.showPrices\" class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Freight Costs:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.totalFreight | currency:'USD':true:'1.2-2'}}</div>\r\n            </div>\r\n            <div *ngIf=\"user.showPrices\" class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Total List:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.totalList | currency:'USD':true:'1.2-2'}}</div>\r\n            </div>\r\n            <div *ngIf=\"user.showPrices\" class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Total Net:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.totalNet | currency:'USD':true:'1.2-2'}}</div>\r\n            </div>\r\n            <div *ngIf=\"user.showPrices\" class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Total Sell:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.totalSell | currency:'USD':true:'1.2-2'}}</div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col col-xs-6 col-md-6 as-lnk\">Notes:</div>\r\n                <div class=\"col col-xs-6 col-md-6\">{{quote.notes}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/quote/components/quote-details.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var QuoteDetailsComponent = /** @class */ (function () {
    function QuoteDetailsComponent(router, route, toastrSvc, userSvc, accountSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.enums = enums;
    }
    QuoteDetailsComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteDetailsComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteDetailsComponent.prototype, "user", void 0);
    QuoteDetailsComponent = __decorate([
        core_1.Component({
            selector: "quote-details",
            template: __webpack_require__("./src/app/quote/components/quote-details.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, toastr_service_1.ToastrService,
            user_service_1.UserService, account_service_1.AccountService,
            enums_1.Enums])
    ], QuoteDetailsComponent);
    return QuoteDetailsComponent;
}());
exports.QuoteDetailsComponent = QuoteDetailsComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote-discount-requests.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid *ngIf=\"quoteItems\" #grid id=\"quoteDicountRequestsGrid\" [data]=\"quoteItems.discountRequests\">\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Discount Requests\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt>Reference</dt>\r\n                <dd>{{ dataItem.discountRequestId }}</dd>\r\n                <dt>Request Date</dt>\r\n                <dd>{{ dataItem.requestedOn | date :'shortDate' }}</dd>\r\n                <dt>Request Status</dt>\r\n                <dd>{{ dataItem.discountRequestStatusTypeDescription }}</dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"discountRequestId\" title=\"Reference\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <!--<a href=\"/ProjectDashboard/DiscountRequest?DiscountRequestId={{dataItem.discountRequestId}}\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.discountRequestId}}</a>-->\r\n            <a href=\"/v3/#/discountRequest/{{dataItem.discountRequestId}}/{{dataItem.projectId}}/{{dataItem.quoteId}}\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.discountRequestId}}</a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"requestedOn\" title=\"Request Date\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.requestedOn | date :'shortDate'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"discountRequestStatusTypeDescription\" title=\"Request Status\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.discountRequestStatusTypeId == enums.DiscountRequestStatusTypeEnum.Approved\" style=\"color:#5dad70\">{{dataItem.discountRequestStatusTypeDescription}}</span>\r\n            <span *ngIf=\"dataItem.discountRequestStatusTypeId != enums.DiscountRequestStatusTypeEnum.Approved\">{{dataItem.discountRequestStatusTypeDescription}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/quote/components/quote-discount-requests.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var QuoteDiscountRequestsComponent = /** @class */ (function () {
    function QuoteDiscountRequestsComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
    }
    QuoteDiscountRequestsComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteDiscountRequestsComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteDiscountRequestsComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteDiscountRequestsComponent.prototype, "quoteItems", void 0);
    QuoteDiscountRequestsComponent = __decorate([
        core_1.Component({
            selector: "quote-discount-requests",
            template: __webpack_require__("./src/app/quote/components/quote-discount-requests.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], QuoteDiscountRequestsComponent);
    return QuoteDiscountRequestsComponent;
}());
exports.QuoteDiscountRequestsComponent = QuoteDiscountRequestsComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote-edit.component.html":
/***/ (function(module, exports) {

module.exports = "<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n\r\n    <ul class=\"breadcrumbs\">\r\n        <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n        <li><a href=\"/v3/#/project/{{quote.projectId}}\">{{quote.project.name}}</a></li>\r\n        <li *ngIf=\"action == 'quoteCreate'\">Add New Quote</li>\r\n        <li *ngIf=\"action == 'quoteEdit'\">Edit Quote</li>\r\n    </ul>\r\n\r\n    <h4 *ngIf=\"action == 'quoteCreate'\">Add New Quote</h4>\r\n    <h4 *ngIf=\"action == 'quoteEdit'\">Edit Quote</h4>\r\n    <form #quoteEditForm=\"ngForm\" novalidate>\r\n        <fieldset>\r\n            <legend>Quote Details</legend>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-md-6 col-xs-12\">\r\n                    <label class=\"control-label required\">Quote Title</label>\r\n                    <input type=\"text\" class=\"form-control\" #quoteTitle=\"ngModel\" required name=\"quoteTitle\" [(ngModel)]=\"quote.title\">\r\n                    <div *ngIf=\"quoteTitle.touched && quoteTitle.invalid\" class=\"alert alert-danger\">\r\n                        Quote title is required\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group col-md-3 col-xs-12\">\r\n                    <label class=\"control-label\">Freight Costs</label>\r\n                    <input type=\"number\" class=\"form-control\" #totalFreight=\"ngModel\" required name=\"totalFreight\" [(ngModel)]=\"quote.totalFreight\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n\r\n                <div class=\"form-group col-md-6 col-xs-12\">\r\n                    <label class=\"control-label\">Quote Description</label>\r\n                    <textarea class=\"form-control\" #description=\"ngModel\" name=\"description\" [(ngModel)]=\"quote.description\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-md-6 col-xs-12\">\r\n                    <label class=\"control-label\">Notes</label>\r\n                    <textarea class=\"form-control\" #notes=\"ngModel\" name=\"notes\" [(ngModel)]=\"quote.notes\"></textarea>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n            <legend>Pricing Details</legend>\r\n\r\n            <div class=\"row\">\r\n                <label class=\"control-label col-md-2 col-xs-12\">Pricing Type:</label>\r\n                <span class=\"col col-md-2 col-xs-6\">\r\n                    <input type=\"radio\" name=\"pricingType\" [(ngModel)]=\"quote.isCommission\" [value]=\"false\"> Buy/Sell<br>\r\n                </span>\r\n                <span *ngIf=\"canRequestCommission\" class=\"col col-md-2 col col-xs-6\">\r\n                    <input type=\"radio\" name=\"pricingType\" [(ngModel)]=\"quote.isCommission\" [value]=\"true\"> Commission Only<br>\r\n                </span>\r\n            </div>\r\n\r\n            <div *ngIf=\"!quote.isCommission\" class=\"row\">\r\n                <label class=\"control-label col-md-2 col-xs-12\">Pricing Method:</label>\r\n                <span class=\"col col-md-2 col-xs-6\">\r\n                    <input type=\"radio\" name=\"pricingMethod\" [(ngModel)]=\"quote.isGrossMargin\" [value]=\"true\"> Gross Margin<br>\r\n                </span>\r\n                <span class=\"col col-md-2 col-xs-6\">\r\n                    <input type=\"radio\" name=\"pricingMethod\" [(ngModel)]=\"quote.isGrossMargin\" [value]=\"false\"> Mark up<br>\r\n                </span>\r\n            </div>\r\n\r\n            <div *ngIf=\"!quote.isCommission\" class=\"row\">\r\n                <span class=\"col col-md-2 col-xs-12\">\r\n                    <label>Commission Percentage:</label>\r\n                </span>\r\n                <span class=\"col col-md-2 col-xs-12\">\r\n                    <!--<input type=\"number\" class=\"form-control\" #commissionPercentage=\"ngModel\" name=\"commissionPercentage\" [(ngModel)]=\"quote.commissionPercentage\">-->\r\n                    <!--<kendo-numerictextbox [(ngModel)]=\"quote.commissionPercentage\"\r\n                                          name=\"commissionPercentage\"\r\n                                          [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\">\r\n                    </kendo-numerictextbox>-->\r\n                    <kendo-numerictextbox [(ngModel)]=\"quote.grossMarginMarkUp\"\r\n                                          name=\"commissionPercentage\"\r\n                                          [min]=\"0\" [max]=\"1\" [step]=\"0.01\" [decimals]=\"2\" [format]=\"'p'\" [autoCorrect]=\"true\">\r\n                    </kendo-numerictextbox>\r\n                    <div class=\"grey-text-italic\">Enter value from 0.01 to 1.00</div>\r\n                </span>\r\n            </div>\r\n\r\n        </fieldset>\r\n\r\n        <div class=\"text-center\">\r\n            <div style=\"padding:10px;\">\r\n                <button class=\"btn btn-default\" style=\"width:70px;\" (click)=\"cancel()\">Cancel</button>\r\n                <button class=\"btn btn-primary\" style=\"width:70px;\" (click)=\"submit()\" type=\"submit\" [disabled]=\"quoteEditForm.invalid\" id=\"quoteEditSubmitBtn\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n\r\n<!--<p>quote.isCommission: {{quote.isCommission}}</p>\r\n<p>quote.isGrossMargin: {{quote.isGrossMargin}}</p>-->\r\n"

/***/ }),

/***/ "./src/app/quote/components/quote-edit.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var project_service_1 = __webpack_require__("./src/app/project/services/project.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var QuoteEditComponent = /** @class */ (function () {
    function QuoteEditComponent(router, route, toastrSvc, userSvc, http, projectSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.http = http;
        this.projectSvc = projectSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
        this.defaultItem = { text: "Select ...", value: null };
        this.action = this.route.snapshot.url[0].path;
        this.user = this.route.snapshot.data['currentUser'].model;
        this.quote = this.route.snapshot.data['quoteModel'].model;
    }
    QuoteEditComponent.prototype.ngOnInit = function () {
        this.canRequestCommission = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.RequestCommission);
    };
    QuoteEditComponent.prototype.cancel = function () {
        if (this.action == "quoteCreate") {
            this.router.navigateByUrl("/project/" + this.quote.projectId);
        }
        else if (this.action == "quoteEdit") {
            this.router.navigateByUrl("/quote/" + this.quote.quoteId + "/existingRecord");
        }
    };
    QuoteEditComponent.prototype.submit = function () {
        var _this = this;
        // this.loadingIconSvc.Start(jQuery("#content"));
        this.blockUI.start('Loading...');
        this.quoteSvc.postQuote(this.quote)
            .subscribe(function (resp) {
            //debugger
            if (resp.isok) {
                //this.loadingIconSvc.Stop(jQuery("#content"));
                _this.blockUI.stop();
                _this.quote = resp.model;
                if (_this.action == "quoteCreate") {
                    _this.router.navigateByUrl("/quote/" + _this.quote.quoteId + "/newRecord");
                }
                else {
                    _this.router.navigateByUrl("/quote/" + _this.quote.quoteId + "/existingRecord");
                }
            }
            else {
                _this.blockUI.stop();
                // this.loadingIconSvc.Stop(jQuery("#content"));
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }, function (err) {
            _this.blockUI.stop();
            //this.loadingIconSvc.Start(jQuery("#content"));
            console.log("Error: ", err);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], QuoteEditComponent.prototype, "blockUI", void 0);
    QuoteEditComponent = __decorate([
        core_1.Component({
            selector: 'quote-edit',
            template: __webpack_require__("./src/app/quote/components/quote-edit.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, toastr_service_1.ToastrService,
            user_service_1.UserService, http_1.Http, project_service_1.ProjectService,
            quote_service_1.QuoteService, enums_1.Enums])
    ], QuoteEditComponent);
    return QuoteEditComponent;
}());
exports.QuoteEditComponent = QuoteEditComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote-items-list.component.css":
/***/ (function(module, exports) {

module.exports = ".drag-drop-bg {\r\n    height: 15px;\r\n    background-image: url(\"/v3/src/assets/images/drag_dots_blue.png\");\r\n    background-size: 10px 15px;\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n.k-grid tr.dragging {\r\n    background-color: #99ccff;\r\n}\r\n"

/***/ }),

/***/ "./src/app/quote/components/quote-items-list.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n\r\n<div *ngIf=\"!quoteItems\">\r\n    <span class=\"k-icon k-i-loading\" style=\"width:100%; font-size:32px;\"></span>\r\n    <!--<block-ui></block-ui>-->\r\n</div>\r\n\r\n<kendo-grid *ngIf=\"quoteItems\" #grid id=\"quoteItemsGrid\" \r\n            [data]=\"gridData\"\r\n            [pageable]=\"true\"\r\n            [skip]=\"state.skip\"\r\n            [pageSize]=\"state.take\"\r\n            [rowClass]=\"rowCallback\"\r\n            (dataStateChange)=\"dataStateChange($event)\">\r\n\r\n    <ng-template kendoGridToolbarTemplate>\r\n        <button class='k-button' [disabled]=\"!gridIsModified\" (click)=\"saveChanges(grid);\">Save Changes</button>\r\n        <button class='k-button' [disabled]=\"!gridIsModified\" (click)=\"cancelChanges(grid);\">Cancel Changes</button>\r\n    </ng-template>\r\n\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Products\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt>Product</dt>\r\n                <dd>\r\n                    <!--{{ dataItem.productNumber }}-->\r\n                    <!--<div *ngIf=\"dataItem.inventoryStatusId == enums.ProductInventoryStatusTypeEnum.NotAvailable\" style=\"color:red; font-size:smaller; font-style: italic\">[{{dataItem.inventoryStatusDescription}}]</div>\r\n            <div *ngIf=\"dataItem.productStatusTypeId == enums.ProductStatusTypeEnum.Obsolete\" style=\"color:red; font-size:smaller; font-style: italic\">[{{dataItem.productStatusTypeDescription}}]</div>-->\r\n\r\n                    <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                        {{dataItem.codeString}}\r\n                    </span>\r\n                    <ng-template #elseBlock>\r\n                        {{dataItem.productNumber}}\r\n                    </ng-template>\r\n\r\n                    <div *ngIf=\"user.showPrices\">\r\n                        <div [ngSwitch]=\"dataItem.productStatusTypeId\">\r\n                            <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.New\" style=\"color:blue; font-size:smaller; \">New</span>\r\n                            <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Active\" style=\"color:#38c638; font-size:smaller;\">Active</span>\r\n                            <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenModuleUnit\" style=\"color:red; font-size:smaller;\">Hidden</span>\r\n                            <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Inactive\" style=\"color:red; font-size:smaller;\">Inactive</span>\r\n                            <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Obsolete\" style=\"color:red; font-size:smaller;\">Obsolete</span>\r\n                        </div>\r\n                        <div [ngSwitch]=\"dataItem.inventoryStatusId\">\r\n                            <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.Available\" style=\"color:black; background-color:#6df0af; padding:3px;\">Available</span>\r\n                            <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.NotAvailable\" style=\"color:black; background-color:#ffcce6; padding:3px;\">Not Available</span>\r\n                            <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.ContactCSR\" style=\"color:black; background-color:#f7d38c; padding:3px;\">\r\n                                <span *ngIf=\"dataItem.productStatusTypeId == enums.ProductStatusTypeEnum.Active && dataItem.invAvailableDate != null && (user.businessTypeId == enums.BusinessTypeEnum.Daikin || user.businessTypeId == enums.BusinessTypeEnum.ManufacturerRep); else contactCSRBlock\">\r\n                                    ETA: {{dataItem.invAvailableDate | date : 'shortDate'}}\r\n                                </span>\r\n                                <ng-template #contactCSRBlock>\r\n                                    <span>Contact CSR</span>\r\n                                </ng-template>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </dd>\r\n                <dt>Description</dt>\r\n                <dd>\r\n                    <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                        Configured Product\r\n                    </span>\r\n                    <ng-template #elseBlock>\r\n                        {{dataItem.description}}\r\n                    </ng-template>\r\n                </dd>\r\n                <dt>Quantity</dt>\r\n                <!--<dd>{{ dataItem.quantity }}</dd>-->\r\n                <dd>\r\n                    <input *ngIf=\"quote.quoteOptions.canEditQuote\" class=\"numericTextBox productQuantity\" type=\"number\" [(ngModel)]=\"dataItem.quantity\" (change)=\"validateQuantity($event)\" min=\"0\" step=\"1\" style=\"width:70px; line-height:30px; font-size:1.2em; text-align: center;\" />\r\n                    <span *ngIf=\"!quote.quoteOptions.canEditQuote\">{{dataItem.quantity}}</span>\r\n                </dd>\r\n                <dt *ngIf=\"user.userTypeId == enums.UserTypeEnum.DaikinSuperUser\">Model#</dt>\r\n                <dd *ngIf=\"user.userTypeId == enums.UserTypeEnum.DaikinSuperUser\">{{ dataItem.productClassCode }}</dd>\r\n                <dt *ngIf=\"user.userTypeId == enums.UserTypeEnum.DaikinSuperUser\">Commission Scheme</dt>\r\n                <dd *ngIf=\"user.userTypeId == enums.UserTypeEnum.DaikinSuperUser\">{{ dataItem.isCommissionable }}</dd>\r\n                <dt>List Price Each</dt>\r\n                <dd>{{ dataItem.priceList| currency:'USD':true:'1.2-2' }}</dd>\r\n                <dt>Net Price Each</dt>\r\n                <dd>{{ dataItem.priceNet| currency:'USD':true:'1.2-2' }}</dd>\r\n                <dt>Extended Price</dt>\r\n                <dd>{{ dataItem.priceNet * dataItem.quantity| currency:'USD':true:'1.2-2' }}</dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"\" width=\"40\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <div class=\"drag-drop-bg\"></div>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"productNumber\" title=\"Product\" width=\"200\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                {{dataItem.codeString}}\r\n            </span>\r\n            <!--<ng-template #elseBlock>{{dataItem.productNumber}}</ng-template>-->\r\n            <ng-template #elseBlock>\r\n                <a (click)=\"productDetails(dataItem)\" style=\"color: #337ab7\">{{dataItem.productNumber}}</a>\r\n                <div *ngIf=\"user.showPrices\" style=\"text-align:right\">\r\n                    <span [ngSwitch]=\"dataItem.productStatusTypeId\">\r\n                        <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.New\" style=\"color:blue; font-size:smaller;\">New</span>\r\n                        <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Active\" style=\"color:#38c638; font-size:smaller;\">Active</span>\r\n                        <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.HiddenModuleUnit\" style=\"color:red; font-size:smaller;\">Hidden</span>\r\n                        <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Inactive\" style=\"color:red; font-size:smaller;\">Inactive</span>\r\n                        <span *ngSwitchCase=\"enums.ProductStatusTypeEnum.Obsolete\" style=\"color:red; font-size:smaller;\">Obsolete</span>\r\n                    </span>\r\n                    <span [ngSwitch]=\"dataItem.inventoryStatusId\">\r\n                        <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.Available\" style=\"color:black; background-color:#6df0af; padding:3px; font-size:smaller;\">Available</span>\r\n                        <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.NotAvailable\" style=\"color:black; background-color:#ffcce6; padding:3px; font-size:smaller;\">Not Available</span>\r\n                        <span *ngSwitchCase=\"enums.ProductInventoryStatusTypeEnum.ContactCSR\" style=\"color:black; background-color:#f7d38c; padding:3px; font-size:smaller;\">\r\n                            <span *ngIf=\"dataItem.productStatusTypeId == enums.ProductStatusTypeEnum.Active && dataItem.invAvailableDate != null && (user.businessTypeId == enums.BusinessTypeEnum.Daikin || user.businessTypeId == enums.BusinessTypeEnum.ManufacturerRep); else contactCSRBlock\">\r\n                                ETA: {{dataItem.invAvailableDate | date : 'shortDate'}}\r\n                            </span>\r\n                            <ng-template #contactCSRBlock>\r\n                                <span>Contact CSR</span>\r\n                            </ng-template>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"description\" title=\"Product Description\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.lineItemTypeId == enums.LineItemTypeEnum.Configured; else elseBlock\">\r\n                Configured Product\r\n            </span>\r\n            <ng-template #elseBlock>{{dataItem.description}}</ng-template>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"\" title=\"Tags\" width=\"70\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <!--<tag-edit-popup [quote]=\"quote\" [quoteItem]=\"dataItem\"></tag-edit-popup>-->\r\n\r\n            <div *ngIf=\"quote.quoteOptions.canEditTags\">\r\n                <img *ngIf=\"dataItem.tags ; else emptyTagBlock\" \r\n                     src=\"/v3/src/assets/images/tags-icon-tick.png\" \r\n                     (click)=\"openTagEditor(dataItem)\" \r\n                     title=\"{{dataItem.tags}}\" />\r\n                <ng-template #emptyTagBlock>\r\n                    <img src=\"/v3/src/assets/images/tags-icon.png\" (click)=\"openTagEditor(dataItem)\" />\r\n                </ng-template>\r\n            </div>\r\n\r\n            <div *ngIf=\"!quote.quoteOptions.canEditTags\">\r\n                <img *ngIf=\"dataItem.tags ; else emptyTagBlock\" \r\n                     src=\"/v3/src/assets/images/tags-icon-tick-gray.png\" title=\"{{dataItem.tags}}\" />\r\n                <ng-template #emptyTagBlock>\r\n                    <img src=\"/v3/src/assets/images/tags-icon-gray.png\" />\r\n                </ng-template>\r\n            </div>\r\n\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Quantity\" width=\"100\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <input *ngIf=\"quote.quoteOptions.canEditQuote\" \r\n                   class=\"numericTextBox productQuantity\" type=\"number\" \r\n                   [(ngModel)]=\"dataItem.quantity\" \r\n                   (change)=\"validateQuantity($event)\" min=\"0\" step=\"1\" \r\n                   style=\"width:70px; line-height:30px; font-size:1.2em; text-align: center;\" />\r\n            <span *ngIf=\"!quote.quoteOptions.canEditQuote\">{{dataItem.quantity}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.userTypeId == enums.UserTypeEnum.DaikinSuperUser\" field=\"productClassCode\" title=\"Model #\" width=\"100\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.userTypeId == enums.UserTypeEnum.DaikinSuperUser\" field=\"isCommissionable\" title=\"Commission Scheme\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.showPrices\" field=\"priceList\" title=\"List Price Each\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.priceList| currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.showPrices\" field=\"priceNet\" title=\"Net Price Each\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.priceNet| currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" *ngIf=\"user.showPrices\" field=\"extendedNet\" title=\"Extended Price\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.priceNet * dataItem.quantity| currency:'USD':true:'1.2-2'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n\r\n    <div *kendoGridDetailTemplate=\"let dataItem; let rowIndex = rowIndex; showIf: hasOptionItems\">\r\n        <option-items attr.id=\"option-items-{{rowIndex}}\" [configuredItem]=\"dataItem\" [unitQuantity]=\"dataItem.quantity\"></option-items>\r\n    </div>\r\n\r\n    <!--<ng-template kendoGridDetailTemplate let-dataItem let-rowIndex=\"rowIndex\" [kendoGridDetailTemplateShowIf]=\"hasOptionItems\">\r\n        <option-items [configuredItem]=\"dataItem\"></option-items>\r\n    </ng-template>-->\r\n\r\n</kendo-grid>\r\n\r\n<div id=\"tagEditor\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">UPDATE QUOTE ITEM TAGS</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <textarea rows=\"4\" maxlength=\"500\" style=\"width:100%;\" *ngIf=\"quoteItem\" [(ngModel)]=\"quoteItem.tags\"></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"closeTagEditor()\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveTagUpdate()\">Update</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/quote/components/quote-items-list.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/esm5/forms.js");
var kendo_data_query_1 = __webpack_require__("./node_modules/@progress/kendo-data-query/dist/es/main.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var Subscription_1 = __webpack_require__("./node_modules/rxjs/_esm5/Subscription.js");
var take_1 = __webpack_require__("./node_modules/rxjs/_esm5/operators/take.js");
var tap_1 = __webpack_require__("./node_modules/rxjs/_esm5/operators/tap.js");
var fromEvent_1 = __webpack_require__("./node_modules/rxjs/_esm5/observable/fromEvent.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var option_items_component_1 = __webpack_require__("./src/app/quote/components/option-items.component.ts");
var kendo_angular_dialog_1 = __webpack_require__("./node_modules/@progress/kendo-angular-dialog/dist/es/index.js");
var tableRow = function (node) { return node.tagName.toLowerCase() === 'tr'; };
var closest = function (node, predicate) {
    while (node && !predicate(node)) {
        node = node.parentNode;
    }
    return node;
};
var QuoteItemsListComponent = /** @class */ (function () {
    function QuoteItemsListComponent(router, route, toastrSvc, quoteSvc, userSvc, accountSvc, dialogSvc, enums, formBuilder, renderer, zone) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.quoteSvc = quoteSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.dialogSvc = dialogSvc;
        this.enums = enums;
        this.formBuilder = formBuilder;
        this.renderer = renderer;
        this.zone = zone;
        this.reloadDataEvent = new core_1.EventEmitter();
        this.reloadQuoteEvent = new core_1.EventEmitter();
        this.gridIsModified = false;
        this.state = {
            skip: 0,
            take: 50
        };
    }
    QuoteItemsListComponent.prototype.ngOnChanges = function () {
        this.gridData = kendo_data_query_1.process(this.quoteItems.items, this.state);
    };
    QuoteItemsListComponent.prototype.ngOnInit = function () {
    };
    QuoteItemsListComponent.prototype.ngAfterViewInit = function () {
        this.currentSubscription = this.handleDragAndDrop();
    };
    QuoteItemsListComponent.prototype.ngAfterViewChecked = function () {
        if (!this.gridIsModified) {
            jQuery("#quoteItemsGrid .k-grid-toolbar").hide();
        }
    };
    QuoteItemsListComponent.prototype.ngOnDestroy = function () {
        this.currentSubscription.unsubscribe();
    };
    QuoteItemsListComponent.prototype.dataStateChange = function (state) {
        var _this = this;
        this.state = state;
        this.gridData = kendo_data_query_1.process(this.quoteItems.items, this.state);
        this.currentSubscription.unsubscribe();
        this.zone.onStable.pipe(take_1.take(1))
            .subscribe(function () { return _this.currentSubscription = _this.handleDragAndDrop(); });
    };
    QuoteItemsListComponent.prototype.rowCallback = function (context) {
        //console.log(context.dataItem.dragging);
        return {
            dragging: context.dataItem.dragging
        };
    };
    QuoteItemsListComponent.prototype.handleDragAndDrop = function () {
        var _this = this;
        var sub = new Subscription_1.Subscription(function () { });
        var draggedItemIndex;
        var tableRows = Array.from(document.querySelectorAll('.k-grid tr'));
        tableRows.forEach(function (item) {
            _this.renderer.setAttribute(item, 'draggable', 'true');
            var dragStart = fromEvent_1.fromEvent(item, 'dragstart');
            var dragOver = fromEvent_1.fromEvent(item, 'dragover');
            var dragEnd = fromEvent_1.fromEvent(item, 'dragend');
            sub.add(dragStart.pipe(tap_1.tap(function (_a) {
                var dataTransfer = _a.dataTransfer;
                try {
                    //console.log("dragStart");
                    var dragImgEl = document.createElement('span');
                    dragImgEl.setAttribute('style', 'position: absolute; display: block; top: 0; left: 0; width: 0; height: 0;');
                    document.body.appendChild(dragImgEl);
                    dataTransfer.setDragImage(dragImgEl, 0, 0);
                }
                catch (err) {
                    // IE doesn't support setDragImage
                }
                try {
                    // Firefox won't drag without setting data
                    dataTransfer.setData('application/json', JSON.stringify({}));
                }
                catch (err) {
                    // IE doesn't support MIME types in setData
                }
            })).subscribe(function (_a) {
                var target = _a.target;
                //console.log("dragStartSubscrible");
                var row = target;
                draggedItemIndex = row.rowIndex;
                var dataItem = _this.gridData.data[draggedItemIndex];
                dataItem.dragging = true;
            }));
            sub.add(dragOver.subscribe(function (e) {
                //console.log("dragOver");
                e.preventDefault();
                var dataItem = _this.gridData.data.splice(draggedItemIndex, 1)[0];
                var dropIndex = closest(e.target, tableRow).rowIndex;
                var dropItem = _this.gridData.data[dropIndex];
                draggedItemIndex = dropIndex;
                _this.zone.run(function () {
                    return _this.gridData.data.splice(dropIndex, 0, dataItem);
                });
            }));
            sub.add(dragEnd.subscribe(function (e) {
                //console.log("dragEnd");
                e.preventDefault();
                var dataItem = _this.gridData.data[draggedItemIndex];
                dataItem.dragging = false;
                _this.setRank();
                _this.gridIsChanged();
                //this.showRankInConsole();
            }));
        });
        return sub;
    };
    //this function is for debugging purpose only
    QuoteItemsListComponent.prototype.showRankInConsole = function () {
        for (var _i = 0, _a = this.gridData.data; _i < _a.length; _i++) {
            var item = _a[_i];
            console.log("Product number:" + item.productNumber + " Rank:" + item.rank);
        }
    };
    QuoteItemsListComponent.prototype.setRank = function () {
        for (var i = 0; i < this.gridData.data.length; i++) {
            this.gridData.data[i].rank = i;
        }
        this.quoteItems.items = this.gridData.data;
    };
    QuoteItemsListComponent.prototype.validateQuantity = function (event) {
        this.gridIsModified = true;
        jQuery("#quoteItemsGrid .k-grid-toolbar").show();
        //alert("this.quoteItems.items[0].quantity: " + this.quoteItems.items[0].quantity
        //    + "\n this.originalQuoteItems[0].quantity: " + this.originalQuoteItems[0].quantity)
        var value = parseFloat(event.target.value);
        if (value == null || isNaN(value)) {
            event.target.value = 0;
        }
        else if ((value < 0) || (Math.floor(value) != value)) {
            event.target.value = 0;
            this.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        }
    };
    QuoteItemsListComponent.prototype.saveChanges = function (grid) {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#quoteItemsGrid"));
        this.blockUI.start('Loading...');
        this.quoteSvc.adjustQuoteItems(this.quoteItems).then(function (resp) {
            if (resp.isok) {
                // self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
                self.reloadDataEvent.emit();
                self.toastrSvc.displayResponseMessages(resp);
                self.gridIsModified = false;
                jQuery("#quoteItemsGrid .k-grid-toolbar").hide();
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
            }
        });
    };
    QuoteItemsListComponent.prototype.cancelChanges = function (grid) {
        this.reloadQuoteItems();
        //this.quoteItems.items = Object.assign({}, this.originalQuoteItems);
        //this.quoteItems.items = this.originalQuoteItems;
    };
    QuoteItemsListComponent.prototype.reloadQuote = function () {
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#quoteItemsGrid"));
        self.quoteSvc.getQuote(self.quote.projectId, self.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                self.quote = resp.model;
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteItemsListComponent.prototype.reloadQuoteItems = function () {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#quoteItemsGrid"));
        this.blockUI.start('Loading...');
        self.quoteSvc.getQuoteItemsModel(self.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                // self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
                self.quoteItems = resp.model;
                _this.gridData = kendo_data_query_1.process(_this.quoteItems.items, _this.state);
                self.gridIsModified = false;
                jQuery("#quoteItemsGrid .k-grid-toolbar").hide();
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteItemsListComponent.prototype.productDetails = function (dataItem) {
        var _this = this;
        this.quoteSvc.setBasketQuoteId(this.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                _this.router.navigate(['/product', { outlets: { 'productDetails': [dataItem.productId] } }], { queryParams: { activeTab: "product-overview" } });
            }
            else {
                _this.toastrSvc.displayResponseMessages(resp);
            }
        }).catch(function (error) {
            console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteItemsListComponent.prototype.hasOptionItems = function (dataItem, index) {
        return dataItem.lineItemTypeId == 2;
    };
    //Tag Editor
    QuoteItemsListComponent.prototype.openTagEditor = function (dataItem) {
        this.quoteItem = dataItem;
        this.oldTagsValue = this.quoteItem.tags;
        jQuery("#tagEditor").modal();
    };
    QuoteItemsListComponent.prototype.closeTagEditor = function () {
        this.quoteItem.tags = this.oldTagsValue;
    };
    QuoteItemsListComponent.prototype.saveTagUpdate = function () {
        var _this = this;
        var self = this;
        var data = {
            'QuoteId': this.quoteItem.quoteId,
            'Items': [this.quoteItem]
        };
        //self.loadingIconSvc.Start(jQuery("#quoteItemsGrid"));
        this.blockUI.start('Loading...');
        this.quoteSvc.adjustQuoteItems(data).then(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                //self.oldTagsValue = self.quoteItem.tags;
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
                _this.blockUI.stop();
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
            }
        }).catch(function (error) {
            console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteItemsListComponent.prototype.gridIsChanged = function () {
        this.gridIsModified = true;
        jQuery("#quoteItemsGrid .k-grid-toolbar").show();
    };
    QuoteItemsListComponent.prototype.gridIsSaved = function () {
        this.gridIsModified = false;
        jQuery("#quoteItemsGrid .k-grid-toolbar").hide();
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], QuoteItemsListComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteItemsListComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteItemsListComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteItemsListComponent.prototype, "quoteItems", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], QuoteItemsListComponent.prototype, "reloadDataEvent", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], QuoteItemsListComponent.prototype, "reloadQuoteEvent", void 0);
    __decorate([
        core_1.ViewChildren(option_items_component_1.OptionItemsComponent),
        __metadata("design:type", core_1.QueryList)
    ], QuoteItemsListComponent.prototype, "OptionItemsComponents", void 0);
    QuoteItemsListComponent = __decorate([
        core_1.Component({
            selector: "quote-items-list",
            template: __webpack_require__("./src/app/quote/components/quote-items-list.component.html"),
            styles: [__webpack_require__("./src/app/quote/components/quote-items-list.component.css")],
            encapsulation: core_1.ViewEncapsulation.None
            //styles: [`
            //    .k-grid tr.dragging {
            //        background-color: #99ccff;
            //    };
            //`]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, quote_service_1.QuoteService,
            user_service_1.UserService, account_service_1.AccountService,
            kendo_angular_dialog_1.DialogService, enums_1.Enums,
            forms_1.FormBuilder,
            core_1.Renderer2, core_1.NgZone])
    ], QuoteItemsListComponent);
    return QuoteItemsListComponent;
}());
exports.QuoteItemsListComponent = QuoteItemsListComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote-orders.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid *ngIf=\"quoteItems\" #grid id=\"quoteOrdersGrid\" [data]=\"quoteItems.quoteOrders\">\r\n    <kendo-grid-column media=\"(max-width: 450px)\" title=\"Order submitted\">\r\n        <ng-template kendoGridCellTemplate let-dataItem>\r\n            <dl>\r\n                <dt></dt>\r\n                <!--<dd><a href=\"/Projectdashboard/OrderPrint?projectId={{dataItem.projectId}}&quoteId={{dataItem.quoteId}}&orderId={{dataItem.orderId}}\" class=\"btn btn-default\">Print Order</a></dd>-->\r\n                <dd><a href=\"/Document/OrderPrint/{{dataItem.orderId}}?projectId={{dataItem.projectId}}&quoteId={{dataItem.quoteId}}\" target='_blank' class=\"btn btn-default\">Print Order</a></dd>\r\n                <dt>Reference</dt>\r\n                <dd><a href=\"/Projectdashboard/SubmittedOrderForm?projectId={{dataItem.projectId}}&quoteId={{dataItem.quoteId}}\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.orderId}}</a></dd>\r\n                <dt>Order Date</dt>\r\n                <dd>{{ dataItem.submitDate | date :'shortDate' }}</dd>\r\n                <dt>Order Status</dt>\r\n                <dd>{{ dataItem.orderStatusTypeDescription }}</dd>\r\n                <dt>Purchase Order</dt>\r\n                <dd>{{ dataItem.poNumber }}</dd>\r\n                <dt>PO Attachment</dt>\r\n                <dd><a href='/ProjectDashboard/GetPOAttachment?quoteId={{dataItem.quoteId}}&poAttachmentFileName={{dataItem.poAttachmentFileName}}' target='_blank' style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.poAttachmentFileName}}</a></dd>\r\n            </dl>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" width=\"130\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <!--<a href=\"/Projectdashboard/OrderPrint?projectId={{dataItem.projectId}}&quoteId={{dataItem.quoteId}}&orderId={{dataItem.orderId}}\" class=\"btn btn-default\">Print Order</a>-->\r\n            <a href=\"/Document/OrderPrint/{{dataItem.orderId}}?projectId={{dataItem.projectId}}&quoteId={{dataItem.quoteId}}\" target='_blank' class=\"btn btn-default\">Print Order</a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Order Reference\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <!--<a href=\"/Projectdashboard/SubmittedOrderForm?projectId={{dataItem.projectId}}&quoteId={{dataItem.quoteId}}\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.orderId}}</a>-->\r\n            <a href=\"/v3/#/orderForm/{{dataItem.projectId}}/{{dataItem.quoteId}}/submitted\" style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.orderId}}</a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\"  title=\"Order Date\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.submitDate | date :'shortDate'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Est. Release Date\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.estimatedReleaseDate | date :'shortDate'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Order Release Date\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            {{dataItem.orderReleaseDate | date :'shortDate'}}\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" title=\"Order Status\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span *ngIf=\"dataItem.orderStatusTypeId == enums.OrderStatusTypeEnum.Accepted\" style=\"color:#5dad70\">{{dataItem.orderStatusTypeDescription}}</span>\r\n            <span *ngIf=\"dataItem.orderStatusTypeId != enums.OrderStatusTypeEnum.Accepted\">{{dataItem.orderStatusTypeDescription}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"poNumber\" title=\"Purchase Order\">\r\n      \r\n    </kendo-grid-column>\r\n    <kendo-grid-column media=\"(min-width: 450px)\" field=\"poAttachmentFileName\" title=\"PO Attachment\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <a href='/ProjectDashboard/GetPOAttachment?quoteId={{dataItem.quoteId}}&poAttachmentFileName={{dataItem.poAttachmentFileName}}' target='_blank' style=\"color:#00A1E4; text-decoration:underline;\">{{dataItem.poAttachmentFileName}}</a>\r\n        </ng-template>\r\n            \r\n</kendo-grid-column>\r\n\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/quote/components/quote-orders.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var QuoteOrdersComponent = /** @class */ (function () {
    function QuoteOrdersComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
    }
    QuoteOrdersComponent.prototype.ngOnInit = function () { };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteOrdersComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteOrdersComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuoteOrdersComponent.prototype, "quoteItems", void 0);
    QuoteOrdersComponent = __decorate([
        core_1.Component({
            selector: "quote-orders",
            template: __webpack_require__("./src/app/quote/components/quote-orders.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, toastr_service_1.ToastrService,
            user_service_1.UserService, account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], QuoteOrdersComponent);
    return QuoteOrdersComponent;
}());
exports.QuoteOrdersComponent = QuoteOrdersComponent;
;


/***/ }),

/***/ "./src/app/quote/components/quote.component.html":
/***/ (function(module, exports) {

module.exports = "<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"popup-window\">\r\n    <add-import-products-dialog [user]=\"user\" [quote]=\"quote\" [recordState]=\"recordState\" ></add-import-products-dialog>\r\n</div>\r\n\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n\r\n        <ul class=\"breadcrumbs\">\r\n            <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n            <li><a href=\"/v3/#/project/{{quote.projectId}}\">{{quote.project.name}}</a></li>\r\n            <li>{{quote.title}}</li>\r\n        </ul>\r\n        <div class=\"tab-header\">\r\n            <h4>{{quote.title}}</h4>\r\n        </div>               \r\n\r\n        <quote-button-bar [user]=\"user\" [quote]=\"quote\" [(quoteItems)]=\"quoteItems\" (reloadDataEvent)=\"reloadData()\"></quote-button-bar>\r\n\r\n        <!--<div kendoDialogContainer></div>-->\r\n\r\n        <kendo-tabstrip id=\"sub-tabs\">\r\n            <kendo-tabstrip-tab [title]=\"'OVERVIEW'\" [selected]=\"overViewActive\" >\r\n                <ng-template kendoTabContent>\r\n                    <!--Quote Active directive-->\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"row no-gutters sub-heading\">\r\n                            <!--<h4>@((Model.Active) ? ResourceUI.QuoteActive : \"Quote Summary\")</h4>-->\r\n                            <h4 *ngIf=\"quote.active\" class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                            <h4 *ngIf=\"!quote.active\" class=\"col pull-left\">QUOTE SUMMARY</h4>\r\n                            <!--<div class=\"col pull-right\"><a href=\"/ProjectDashboard/QuoteEdit/{{quote.projectId}}\" class=\"btn btn-primary pull-right\" ><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>-->\r\n                            <div class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n                        </div>\r\n\r\n                        <active-quote-info [user]=\"user\" [quote]=\"quote\" (showQuoteOverViewEvent)=\"showQuoteOverview()\" (reloadDataEvent)=\"reloadData()\"></active-quote-info>\r\n\r\n                    </div>\r\n                    <div class=\"row no-gutters sub-heading\">\r\n                        <h4 class=\"col pull-left\">PRODUCTS IN THIS QUOTE</h4>\r\n\r\n                        <div class=\"col pull-right hidden-xs\">\r\n\r\n                            <button class=\"btn btn-default\" (click)=\"showQuoteItems()\"><span class=\"glyphicon glyphicon-list-alt\"></span> VIEW ALL PRODUCTS</button>\r\n                            <!--<a href=\"/api/Product/Products?quoteId={{quote.quoteId}}\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\"><span class=\"k-icon k-i-file-add\"></span> ADD PRODUCTS</a>-->\r\n                            <button *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\" (click)=\"browseProductsWithQuoteId()\"><span class=\"k-icon k-i-file-add\"></span> ADD PRODUCTS</button>\r\n                            <!--<button *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#selectProductsPopup\"><span class=\"k-icon k-i-file-add\"></span> SELECT PRODUCTS</button>-->\r\n                            <select-products-dialog [user]=\"user\" [quote]=\"quote\"></select-products-dialog>\r\n                            <!--<button *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\"><span class=\"k-icon k-i-file-add\"></span> IMPORT PRODUCTS</button>-->\r\n                            <import-products-dialog [user]=\"user\" [(quote)]=\"quote\" [(quoteItems)]=\"quoteItems\" (reloadDataEvent)=\"reloadData()\"></import-products-dialog>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col visible-xs\">\r\n                            <button style=\"width:90%\" class=\"btn btn-default btn-block\" (click)=\"showQuoteItems()\"><span class=\"glyphicon glyphicon-list-alt\"></span> VIEW ALL PRODUCTS</button>\r\n                            <button style=\"width:90%; margin-top:5px;\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary btn-block\" (click)=\"browseProductsWithQuoteId()\"><span class=\"k-icon k-i-file-add\"></span> ADD PRODUCTS</button>\r\n                            <select-products-dialog [user]=\"user\" [quote]=\"quote\"></select-products-dialog>\r\n                            <import-products-dialog [user]=\"user\" [(quote)]=\"quote\" [(quoteItems)]=\"quoteItems\" (reloadDataEvent)=\"reloadData()\"></import-products-dialog>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row no-gutters active-quote-bar\">\r\n                        <div class=\"pull-left\">\r\n                            <img src=\"/v3/src/assets/images/added-items-list-icon.png\" style=\"top:2.5em;\" />\r\n                            <span> {{quote.itemCount}} product(s)</span>\r\n                            <a (click)=\"showQuoteItems()\">View added items list</a>\r\n                            <!--<a href=\"@Url.Action(\" QuoteItems\", new { ProjectId=Model.ProjectId, QuoteId=Model.QuoteId })\">View added items list</a>-->\r\n                        </div>\r\n                    </div>\r\n\r\n                    <quote-details [user]=\"user\" [quote]=\"quote\"></quote-details>\r\n\r\n                </ng-template>\r\n            </kendo-tabstrip-tab>\r\n            <kendo-tabstrip-tab [title]=\"'PRODUCTS'\" [selected]=\"quoteItemsActive\" >\r\n                <ng-template kendoTabContent>\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"row no-gutters sub-heading\">\r\n                            <h4 *ngIf=\"quote.active\" class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                            <h4 *ngIf=\"!quote.active\" class=\"col pull-left\">QUOTE SUMMARY</h4>\r\n                            <!--<div class=\"col pull-right\"><a href=\"/ProjectDashboard/QuoteEdit/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>-->\r\n                            <div class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n                        </div>\r\n                        <active-quote-info [user]=\"user\" [quote]=\"quote\" (showQuoteOverViewEvent)=\"showQuoteOverview()\" (reloadDataEvent)=\"reloadData()\"></active-quote-info>\r\n                        \r\n                    </div>                    \r\n\r\n                    <div class=\"row no-gutters sub-heading\">\r\n                        <h4 class=\"col pull-left\">PRODUCTS IN THIS QUOTE</h4>\r\n                        <div class=\"col pull-right hidden-xs\">\r\n                            <!--<button *ngIf=\"quote.quoteOptions.canCalculateCommission\" class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#calculateCommissionPopup\"><span class=\"k-icon k-i-calculator\"></span> CALCULATE COMMISSION</button>-->\r\n                            <calculate-commission-dialog [user]=\"user\" [quote]=\"quote\" [quoteItems]=\"quoteItems\" (reloadQuoteEvent)=\"reloadQuote()\"></calculate-commission-dialog>\r\n                            <!--<a href=\"/api/Product/Products?quoteId={{quote.quoteId}}\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\"><span class=\"k-icon k-i-file-add\"></span> ADD PRODUCTS</a>-->\r\n                            <button *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\" (click)=\"browseProductsWithQuoteId()\"><span class=\"k-icon k-i-file-add\"></span> ADD PRODUCTS</button>\r\n                            <!--<button *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\"><span class=\"k-icon k-i-file-add\"></span> SELECT PRODUCTS</button>-->\r\n                            <select-products-dialog [user]=\"user\" [quote]=\"quote\"></select-products-dialog>\r\n                            <!--<button *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary\"><span class=\"k-icon k-i-file-add\"></span> IMPORT PRODUCTS</button>-->\r\n                            <import-products-dialog [user]=\"user\" [(quote)]=\"quote\" [(quoteItems)]=\"quoteItems\" (reloadDataEvent)=\"reloadData()\"></import-products-dialog>\r\n                        </div>\r\n\r\n                        <div class=\"col visible-xs\">\r\n                            <button style=\"width:90%\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary btn-block\" (click)=\"browseProductsWithQuoteId()\"><span class=\"k-icon k-i-file-add\"></span> ADD PRODUCTS</button>\r\n                            <select-products-dialog [user]=\"user\" [quote]=\"quote\"></select-products-dialog>\r\n                            <import-products-dialog [user]=\"user\" [(quote)]=\"quote\" [(quoteItems)]=\"quoteItems\" (reloadDataEvent)=\"reloadData()\"></import-products-dialog>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <quote-items-list [user]=\"user\" [(quote)]=\"quote\" [(quoteItems)]=\"quoteItems\" (reloadQuoteEvent)=\"reloadQuote()\" (reloadDataEvent)=\"reloadData()\"></quote-items-list>\r\n                </ng-template>\r\n            </kendo-tabstrip-tab>\r\n\r\n            <kendo-tabstrip-tab *ngIf=\"quote.hasDAR\" [title]=\"'DISCOUNT REQUESTS'\" [selected]=\"quoteDiscountRequestsActive\">\r\n                <ng-template kendoTabContent>\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"row no-gutters sub-heading\">\r\n                            <h4 *ngIf=\"quote.active\" class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                            <h4 *ngIf=\"!quote.active\" class=\"col pull-left\">QUOTE SUMMARY</h4>\r\n                            <!--<div class=\"col pull-right\"><a href=\"/ProjectDashboard/QuoteEdit/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>-->\r\n                            <div class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n                        </div>\r\n                        <active-quote-info [user]=\"user\" [quote]=\"quote\" (showQuoteOverViewEvent)=\"showQuoteOverview()\" (reloadDataEvent)=\"reloadData()\"></active-quote-info>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row no-gutters sub-heading\">\r\n                        <h4 class=\"col pull-left\">REQUESTED DISCOUNTS FOR THIS QUOTE</h4>\r\n                    </div>\r\n                    <quote-discount-requests [user]=\"user\" [quote]=\"quote\" [quoteItems]=\"quoteItems\"></quote-discount-requests>\r\n                </ng-template>\r\n            </kendo-tabstrip-tab>\r\n\r\n            <kendo-tabstrip-tab *ngIf=\"quote.hasCOM\" [title]=\"'COMMISSION REQUESTS'\" [selected]=\"quoteCommissionRequestsActive\">\r\n                <ng-template kendoTabContent>\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"row no-gutters sub-heading\">\r\n                            <h4 *ngIf=\"quote.active\" class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                            <h4 *ngIf=\"!quote.active\" class=\"col pull-left\">QUOTE SUMMARY</h4>\r\n                            <!--<div class=\"col pull-right\"><a href=\"/ProjectDashboard/QuoteEdit/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>-->\r\n                            <div class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n                        </div>\r\n                        <active-quote-info [user]=\"user\" [quote]=\"quote\" (showQuoteOverViewEvent)=\"showQuoteOverview()\" (reloadDataEvent)=\"reloadData()\"></active-quote-info>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row no-gutters sub-heading\">\r\n                        <h4 class=\"col pull-left\">REQUESTED COMMISSIONS FOR THIS QUOTE</h4>\r\n                    </div>\r\n                    <quote-commission-requests [user]=\"user\" [quote]=\"quote\" [quoteItems]=\"quoteItems\"></quote-commission-requests>\r\n                </ng-template>\r\n            </kendo-tabstrip-tab>\r\n\r\n            <kendo-tabstrip-tab *ngIf=\"quote.hasOrder\" [title]=\"'ORDER'\" [selected]=\"quoteOrderActive\">\r\n                <ng-template kendoTabContent>\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"row no-gutters sub-heading\">\r\n                            <h4 *ngIf=\"quote.active\" class=\"col pull-left\">ACTIVE QUOTE</h4>\r\n                            <h4 *ngIf=\"!quote.active\" class=\"col pull-left\">QUOTE SUMMARY</h4>\r\n                            <!--<div class=\"col pull-right\"><a href=\"/ProjectDashboard/QuoteEdit/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>-->\r\n                            <div class=\"col pull-right\"><a href=\"/v3/#/quoteCreate/{{quote.projectId}}\" class=\"btn btn-primary pull-right\"><span class=\"k-icon k-i-file-add\"></span> CREATE REVISION</a></div>\r\n                        </div>\r\n                        <active-quote-info [user]=\"user\" [quote]=\"quote\" (showQuoteOverViewEvent)=\"showQuoteOverview()\" (reloadDataEvent)=\"reloadData()\"></active-quote-info>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row no-gutters sub-heading\">\r\n                        <h4 class=\"col pull-left\">ORDER SUBMITTED</h4>\r\n                    </div>\r\n                    <quote-orders [user]=\"user\" [quote]=\"quote\" [quoteItems]=\"quoteItems\"></quote-orders>\r\n                </ng-template>\r\n            </kendo-tabstrip-tab>\r\n\r\n        </kendo-tabstrip>\r\n\r\n\r\n        <!--<div id=\"projectsGridContainer\">\r\n            <project-grid></project-grid>\r\n        </div>-->\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!--<select-products-dialog [user]=\"user\" [quote]=\"quote\"></select-products-dialog>-->\r\n\r\n<!--Write a new component for this-->\r\n<!--<div id=\"selectProductsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">TOOLS:</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <textarea rows=\"4\" maxlength=\"500\" style=\"width:100%;\"></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"openTool()\">Open</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>-->"

/***/ }),

/***/ "./src/app/quote/components/quote.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var QuoteComponent = /** @class */ (function () {
    function QuoteComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, productSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.productSvc = productSvc;
        this.enums = enums;
        this.recordState = false;
        this.quote = this.route.snapshot.data['quoteModel'].model;
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    QuoteComponent.prototype.ngOnInit = function () {
        var path = this.route.snapshot.url[0].path;
        this.quoteId = this.route.snapshot.paramMap.get('id');
        this.recordState = this.route.snapshot.paramMap.get('recordState');
        this.setActiveTab(path);
    };
    QuoteComponent.prototype.setActiveTab = function (path) {
        if (path == 'quote') {
            this.overViewActive = true;
            this.quoteItemsActive = false;
            this.quoteDiscountRequestsActive = false;
            this.quoteCommissionRequestsActive = false;
            this.quoteOrderActive = false;
            this.getQuoteItems(this.quote.quoteId);
        }
        else if (path == 'quoteItems') {
            this.overViewActive = false;
            this.quoteItemsActive = true;
            this.quoteDiscountRequestsActive = false;
            this.quoteCommissionRequestsActive = false;
            this.quoteOrderActive = false;
            if (this.route.snapshot.data['quoteItems'] == undefined) {
                this.getQuoteItems(this.quote.quoteId);
            }
            else {
                this.quoteItems = this.route.snapshot.data['quoteItems'].model;
            }
        }
    };
    QuoteComponent.prototype.showQuoteOverview = function () {
        jQuery('#k-tabstrip-tab-0').click();
    };
    QuoteComponent.prototype.showQuoteItems = function () {
        jQuery('#k-tabstrip-tab-1').click();
    };
    QuoteComponent.prototype.getQuoteItems = function (quoteId) {
        var self = this;
        console.log("get QuoteItems");
        self.quoteSvc.getQuoteItemsModel(this.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                self.quoteItems = resp.model;
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    QuoteComponent.prototype.browseProductsWithQuoteId = function () {
        this.productSvc.browseProductsWithQuoteId(this.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                //self.quoteItems = resp.model;
                window.location.href = "/v3/#/product";
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
    QuoteComponent.prototype.reloadData = function () {
        this.reloadQuote();
        this.reloadQuoteItems();
    };
    QuoteComponent.prototype.reloadQuote = function () {
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#quoteItemsGrid"));
        self.quoteSvc.getQuote(self.quote.projectId, self.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                self.quote = resp.model;
                //self.gridIsModified = false;
                //jQuery("#quoteItemsGrid .k-grid-toolbar").hide();
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteComponent.prototype.reloadQuoteItems = function () {
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#content"));
        //this.blockUI.start('Loading...');
        self.quoteSvc.getQuoteItemsModel(self.quote.quoteId).then(function (resp) {
            if (resp.isok) {
                // self.loadingIconSvc.Stop(jQuery("#content"));
                //this.blockUI.stop();
                self.quoteItems = resp.model;
                //self.gridIsModified = false;
                jQuery("#quoteItemsGrid .k-grid-toolbar").hide();
            }
            else {
                //self.loadingIconSvc.Stop(jQuery("#content"));
                //this.blockUI.stop();
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], QuoteComponent.prototype, "blockUI", void 0);
    QuoteComponent = __decorate([
        core_1.Component({
            selector: "quote",
            template: __webpack_require__("./src/app/quote/components/quote.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            product_service_1.ProductService, enums_1.Enums])
    ], QuoteComponent);
    return QuoteComponent;
}());
exports.QuoteComponent = QuoteComponent;
;


/***/ }),

/***/ "./src/app/quote/components/select-products-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<!--desktop-->\r\n<button id=\"selectProductsBtn\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary hidden-xs\" data-toggle=\"modal\" data-target=\"#selectProductsPopup\"><span class=\"k-icon k-i-file-add\"></span> SELECT PRODUCTS</button>\r\n<!--phone-->\r\n<button style=\"width:90%; margin-top:5px;\" id=\"selectProductsBtn\" *ngIf=\"quote.quoteOptions.canAddProducts\" class=\"btn btn-primary btn-block visible-xs\" data-toggle=\"modal\" data-target=\"#selectProductsPopup\"><span class=\"k-icon k-i-file-add\"></span> SELECT PRODUCTS</button>\r\n\r\n<div id=\"selectProductsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">TOOLS:</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <kendo-dropdownlist \r\n                    [data]=\"toolList\" \r\n                    [textField]=\"'text'\" \r\n                    [valueField]=\"'value'\"\r\n                    [defaultItem]=\"defaultItem\"\r\n                    [(ngModel)]=\"selectedTool\" \r\n                    [popupSettings]=\"{ width: 250 }\">\r\n                </kendo-dropdownlist>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"openTool()\">Open</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/quote/components/select-products-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var SelectProductsDialogComponent = /** @class */ (function () {
    function SelectProductsDialogComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, webconfigSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.webconfigSvc = webconfigSvc;
        this.enums = enums;
        this.toolList = [];
        this.defaultItem = { text: "Select ...", value: null };
    }
    SelectProductsDialogComponent.prototype.ngOnInit = function () {
        //var tools = [];
        var self = this;
        this.webconfigSvc.getWebConfig().then(function (resp) {
            self.webconfig = resp;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
        this.webconfigSvc.getLCSTApiToken().then(function (resp) {
            self.lcstApiToken = resp.model;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
        setTimeout(function () {
            for (var i in self.user.toolAccesses) {
                if (self.user.toolAccesses[i].addToQuote == 1) {
                    if (self.user.toolAccesses[i].toolId == self.enums.ToolAccessEnum.LCSubmittalTool) {
                        if (self.webconfig.lcst.pilotRelease == "true") {
                            if (self.webconfig.lcst.availableToBusinesses.indexOf(self.user.businessId) > -1) {
                                self.toolList.push({ text: self.user.toolAccesses[i].name, value: self.user.toolAccesses[i].toolId });
                            }
                        }
                        else {
                            self.toolList.push({ text: self.user.toolAccesses[i].name, value: self.user.toolAccesses[i].toolId });
                        }
                    }
                    else {
                        self.toolList.push({ text: self.user.toolAccesses[i].name, value: self.user.toolAccesses[i].toolId });
                    }
                }
            }
        }, 500);
        if (this.toolList.length == 0) {
            jQuery("#selectProductsBtn").hide();
        }
    };
    SelectProductsDialogComponent.prototype.openTool = function () {
        var self = this;
        //alert("selected tool: " + this.selectedTool.text);
        if (this.selectedTool.value == this.enums.ToolAccessEnum.UnitaryMatchupTool) {
            //window.location.href = "/api/Tool/SystemConfigurator?quoteId=" + this.quote.quoteId;
            this.quoteSvc.setBasketQuoteId(this.quote.quoteId).then(function (resp) {
                if (resp.isok) {
                    window.location.href = "/v3/#/tools/unitaryMatchup";
                    self.toastrSvc.displayResponseMessages(resp);
                }
                else {
                    self.toastrSvc.displayResponseMessages(resp);
                }
            }).catch(function (error) {
                console.log('Retrieval error: ${error}');
                console.log(error);
            });
        }
        else if (this.selectedTool.value == this.enums.ToolAccessEnum.CommercialSplitMatchupTool) {
            //window.location.href = "/api/Tool/SplitSystemConfigurator?quoteId=" + this.quote.quoteId;
            this.quoteSvc.setBasketQuoteId(this.quote.quoteId).then(function (resp) {
                if (resp.isok) {
                    window.location.href = "/v3/#/tools/lcSplitMatchup";
                    self.toastrSvc.displayResponseMessages(resp);
                }
                else {
                    self.toastrSvc.displayResponseMessages(resp);
                }
            }).catch(function (error) {
                console.log('Retrieval error: ${error}');
                console.log(error);
            });
        }
        else if (this.selectedTool.value == this.enums.ToolAccessEnum.LCSubmittalTool) {
            window.location.href = this.webconfig.routeConfig.lcstURL + "&quoteId=" + this.quote.quoteId + "&projectId=" + this.quote.projectId + "&projectName=" + this.quote.project.name + "&userId=" + this.user.userId + "&firstName=" + this.user.firstName + "&lastName=" + this.user.lastName + "&token=" + this.lcstApiToken;
        }
        else if (this.selectedTool.value == this.enums.ToolAccessEnum.LCSTHighEff) {
            window.location.href = this.webconfig.routeConfig.lcstURLHighEff + "&reqType=Quote" + "&quoteId=" + this.quote.quoteId + "&projectId=" + this.quote.projectId + "&projectName=" + this.quote.project.name + "&userId=" + this.user.userId + "&firstName=" + this.user.firstName + "&lastName=" + this.user.lastName + "&token=" + this.lcstApiToken;
        }
        else if (this.selectedTool.value == this.enums.ToolAccessEnum.LCSTHighEffv2) {
            window.location.href = this.webconfig.routeConfig.lcstURLHighEffv2 + "&reqType=Quote" + "&quoteId=" + this.quote.quoteId + "&projectId=" + this.quote.projectId + "&projectName=" + this.quote.project.name + "&userId=" + this.user.userId + "&firstName=" + this.user.firstName + "&lastName=" + this.user.lastName + "&token=" + this.lcstApiToken;
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SelectProductsDialogComponent.prototype, "user", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SelectProductsDialogComponent.prototype, "quote", void 0);
    SelectProductsDialogComponent = __decorate([
        core_1.Component({
            selector: "select-products-dialog",
            template: __webpack_require__("./src/app/quote/components/select-products-dialog.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService,
            user_service_1.UserService, account_service_1.AccountService,
            quote_service_1.QuoteService, webconfig_service_1.WebConfigService,
            enums_1.Enums])
    ], SelectProductsDialogComponent);
    return SelectProductsDialogComponent;
}());
exports.SelectProductsDialogComponent = SelectProductsDialogComponent;


/***/ }),

/***/ "./src/app/quote/components/tag-edit-popup.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<!--    Deprecated!\r\n    Not working after upgrade kendo grid-->\r\n\r\n<div *ngIf=\"quote.quoteOptions.canEditTags\">\r\n    <!--<block-ui></block-ui>-->\r\n\r\n    <img *ngIf=\"quoteItem.tags ; else emptyTagBlock\" src=\"/v3/src/assets/images/tags-icon-tick.png\" \r\n         data-toggle=\"modal\" [attr.data-target]=\"modalTarget\" \r\n         title=\"{{quoteItem.tags}}\" />\r\n    <ng-template #emptyTagBlock>\r\n        <img src=\"/v3/src/assets/images/tags-icon-tick.png\" data-toggle=\"modal\" \r\n             [attr.data-target]=\"modalTarget\" />\r\n    </ng-template>\r\n\r\n    <!--Not working after upgrade kendo grid-->\r\n    <div [attr.id]=\"modalId\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">UPDATE QUOTE ITEM TAGS</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <textarea rows=\"4\" maxlength=\"500\" style=\"width:100%;\" [(ngModel)]=\"quoteItem.tags\"></textarea>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"closeTagEditor()\">Cancel</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveTagUpdate()\">Update</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf=\"!quote.quoteOptions.canEditTags\">\r\n    <img *ngIf=\"quoteItem.tags ; else emptyTagBlock\" \r\n         src=\"/v3/src/assets/images/tags-icon-tick-gray.png\" \r\n         title=\"{{quoteItem.tags}}\" />\r\n    <ng-template #emptyTagBlock>\r\n        <img src=\"/v3/src/assets/images/tags-icon-gray.png\" />\r\n    </ng-template>\r\n</div>\r\n\r\n\r\n<!--Delete after Dec 31, 2017-->\r\n<!--temp working-->\r\n<!--<p style=\"text-align: center;\">Please enter your tags for this item (max 500 characters)?</p>\r\n<textarea id=\"quoteItemTagText\" rows=\"4\" maxlength=\"500\" style=\"width:100%;\">{{quoteItem.tags}}</textarea>-->\r\n\r\n\r\n<!--<img *ngIf=\"quoteItem.tags ; else emptyTagBlock\" src=\"/Images/tags-icon-tick.png\" (click)=\"openTagEditor('some data')\" title=\"{{quoteItem.tags}}\" />\r\n<ng-template #emptyTagBlock>\r\n    <img src=\"/v3/src/assets/images/tags-icon.png\" (click)=\"openTagEditor()\" />\r\n</ng-template>\r\n\r\n<kendo-dialog title=\"UPDATE QUOTE ITEM TAGS\" *ngIf=\"tagEditorOpened\" (close)=\"closeTagEditor()\" style=\"margin:auto;\">\r\n    <p style=\"text-align: center;\">Please enter your tags for this item (max 500 characters)?</p>\r\n    <textarea id=\"quoteItemTagText\" rows=\"4\" maxlength=\"500\" style=\"width:100%;\">{{quoteItem.tags}}</textarea>\r\n    <kendo-dialog-actions>\r\n        <button kendoButton (click)=\"closeTagEditor()\">Cancel</button>\r\n        <button kendoButton (click)=\"saveTagUpdate()\" primary=\"true\">Update</button>\r\n    </kendo-dialog-actions>\r\n</kendo-dialog>-->\r\n\r\n\r\n\r\n<!--Bootstrap Modal-->\r\n\r\n\r\n\r\n<!--<button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" [attr.data-target] =\"modalTarget\">Open Modal</button>-->\r\n\r\n<!-- Modal -->\r\n<!--<div [attr.id]=\"modalId\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n                \r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Modal Header</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{quoteItem.tags}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/quote/components/tag-edit-popup.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
    Deprecated!
    Not working after upgrade kendo grid
*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var TagEditPopupComponent = /** @class */ (function () {
    function TagEditPopupComponent(router, route, toastrSvc, userSvc, accountSvc, quoteSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.quoteSvc = quoteSvc;
        this.enums = enums;
    }
    TagEditPopupComponent.prototype.ngOnInit = function () {
        this.modalId = this.quoteItem.quoteItemId;
        this.modalTarget = "#" + this.modalId;
        this.oldTagsValue = this.quoteItem.tags;
    };
    TagEditPopupComponent.prototype.closeTagEditor = function () {
        this.quoteItem.tags = this.oldTagsValue;
    };
    TagEditPopupComponent.prototype.saveTagUpdate = function () {
        var _this = this;
        var self = this;
        var data = {
            'QuoteId': this.quoteItem.quoteId,
            'Items': [this.quoteItem]
        };
        //self.loadingIconSvc.Start(jQuery("#quoteItemsGrid"));
        this.blockUI.start('Loading...');
        this.quoteSvc.adjustQuoteItems(data).then(function (resp) {
            if (resp.isok) {
                //self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
                self.toastrSvc.displayResponseMessages(resp);
                self.oldTagsValue = self.quoteItem.tags;
            }
            else {
                self.toastrSvc.displayResponseMessages(resp);
                // self.loadingIconSvc.Stop(jQuery("#quoteItemsGrid"));
                _this.blockUI.stop();
            }
        }).catch(function (error) {
            console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], TagEditPopupComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TagEditPopupComponent.prototype, "quote", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TagEditPopupComponent.prototype, "quoteItem", void 0);
    TagEditPopupComponent = __decorate([
        core_1.Component({
            selector: "tag-edit-popup",
            template: __webpack_require__("./src/app/quote/components/tag-edit-popup.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, quote_service_1.QuoteService,
            enums_1.Enums])
    ], TagEditPopupComponent);
    return TagEditPopupComponent;
}());
exports.TagEditPopupComponent = TagEditPopupComponent;


/***/ }),

/***/ "./src/app/quote/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/quote/components/active-quote-info.component.ts"));
__export(__webpack_require__("./src/app/quote/components/add-import-products-dialog.component.ts"));
__export(__webpack_require__("./src/app/quote/components/import-products-dialog.component.ts"));
__export(__webpack_require__("./src/app/quote/components/option-items.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-button-bar.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-commission-requests.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-details.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-discount-requests.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-edit.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-items-list.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote-orders.component.ts"));
__export(__webpack_require__("./src/app/quote/components/quote.component.ts"));
__export(__webpack_require__("./src/app/quote/components/select-products-dialog.component.ts"));
__export(__webpack_require__("./src/app/quote/components/tag-edit-popup.component.ts"));
__export(__webpack_require__("./src/app/quote/services/quote.service.ts"));
__export(__webpack_require__("./src/app/quote/services/quote-resolver.service.ts"));
__export(__webpack_require__("./src/app/quote/services/quote-resolver.service.ts"));
__export(__webpack_require__("./src/app/quote/services/quote-resolver.service.ts"));


/***/ }),

/***/ "./src/app/quote/services/quote-resolver.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
var quote_service_1 = __webpack_require__("./src/app/quote/services/quote.service.ts");
var QuoteResolver = /** @class */ (function () {
    function QuoteResolver(quoteSvc) {
        this.quoteSvc = quoteSvc;
    }
    QuoteResolver.prototype.resolve = function (route, state) {
        var quoteId = route.params['id'];
        return this.quoteSvc.getQuoteModel(null, quoteId)
            .map(function (quoteModel) {
            if (quoteModel) {
                return quoteModel;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    QuoteResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [quote_service_1.QuoteService])
    ], QuoteResolver);
    return QuoteResolver;
}());
exports.QuoteResolver = QuoteResolver;
var QuoteEditResolver = /** @class */ (function () {
    function QuoteEditResolver(quoteSvc) {
        this.quoteSvc = quoteSvc;
    }
    QuoteEditResolver.prototype.resolve = function (route, state) {
        var quoteId = route.params['quoteid'];
        var projectId = route.params['projectid'];
        return this.quoteSvc.getQuoteModel(projectId, quoteId)
            .map(function (quoteModel) {
            if (quoteModel) {
                return quoteModel;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            //console.log('Retrieval error: ${error}');
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    QuoteEditResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [quote_service_1.QuoteService])
    ], QuoteEditResolver);
    return QuoteEditResolver;
}());
exports.QuoteEditResolver = QuoteEditResolver;
var QuoteItemsResolver = /** @class */ (function () {
    function QuoteItemsResolver(quoteSvc) {
        this.quoteSvc = quoteSvc;
    }
    QuoteItemsResolver.prototype.resolve = function (route, state) {
        var quoteId = route.params['id'];
        return this.quoteSvc.getQuoteItemsModel(quoteId)
            .then(function (quoteItems) {
            if (quoteItems) {
                return quoteItems;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            console.log('Retrieval error: ${error}');
            console.log(error);
        });
    };
    QuoteItemsResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [quote_service_1.QuoteService])
    ], QuoteItemsResolver);
    return QuoteItemsResolver;
}());
exports.QuoteItemsResolver = QuoteItemsResolver;


/***/ }),

/***/ "./src/app/quote/services/quote.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var QuoteService = /** @class */ (function () {
    function QuoteService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    QuoteService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    QuoteService.prototype.extractHtml = function (res) {
        return res._body;
    };
    QuoteService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        //console.error(error); // log to console instead
        console.log(error);
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    QuoteService.prototype.setBasketQuoteId = function (quoteId) {
        return this.http.get("/api/Quote/SetBasketQuoteId?quoteId=" + quoteId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.getQuoteModel = function (projectId, quoteId) {
        return this.http.get("/api/Quote/GetQuoteModel?projectId=" + projectId + "&quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.postQuote = function (quote) {
        return this.http.post("/api/Quote/PostQuote", quote, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.getQuote = function (projectId, quoteId) {
        return this.http.get("/api/Quote/GetQuoteModel?projectId=" + projectId + "&quoteId=" + quoteId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    //Order Form
    QuoteService.prototype.getQuoteItems = function (quoteId) {
        return this.http.get("/api/Quote/GetQuoteItems?quoteId=" + quoteId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    //Quote Page
    QuoteService.prototype.getQuoteItemsModel = function (quoteId) {
        return this.http.get("/api/Quote/GetQuoteItemsModel?quoteId=" + quoteId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.getOptionItems = function (quoteItemId) {
        return this.http.get("/api/Quote/GetOptionItems?quoteItemId=" + quoteItemId, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.setQuoteActive = function (data) {
        return this.http.post("/api/Quote/QuoteSetActive", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.deleteQuote = function (data) {
        return this.http.post("/api/Quote/deleteQuote", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.undeleteQuote = function (data) {
        return this.http.post("/api/Quote/undeleteQuote", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    //TODO: figure out why this is not working
    //public getQuoteItems(quoteId: any): Observable<any> {
    //    debugger
    //    return this.http.get("/api/Quote/GetQuoteItemsModel?quoteId=" + quoteId, { headers: this.headers })
    //        .map(this.extractData)
    //        .catch(this.handleError);
    //}
    QuoteService.prototype.adjustQuoteItems = function (data) {
        return this.http.post("/api/Quote/AdjustQuoteItems", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.quoteRecalculate = function (data) {
        return this.http.post("/api/Quote/QuoteRecalculate", data, { headers: this.headers }).toPromise()
            .then(this.extractData)
            .catch(this.handleError);
    };
    QuoteService.prototype.duplicateQuote = function (projectId, quoteId) {
        return this.http.get("/api/Quote/DuplicateQuote?projectId=" + projectId + "&quoteId=" + quoteId, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    QuoteService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], QuoteService);
    return QuoteService;
}());
exports.QuoteService = QuoteService;


/***/ }),

/***/ "./src/app/shared/enums/enums.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var Enums = /** @class */ (function () {
    function Enums() {
        this.SystemAccessEnum = new SystemAccessEnums();
        this.UserTypeEnum = new UserTypeEnum();
        this.ExistingBusinessEnum = new ExistingBusinessEnum();
        this.BusinessTypeEnum = new BusinessTypeEnum();
        this.ProductFamilyEnum = new ProductFamilyEnum();
        this.ProductTypeEnum = new ProductTypeEnum();
        this.ProductModelTypeEnum = new ProductModelTypeEnum();
        this.UnitInstallationTypeEnum = new UnitInstallationTypeEnum();
        this.ProductClassPIMEnum = new ProductClassPIMEnum();
        this.ProductEnergySourceTypeEnum = new ProductEnergySourceTypeEnum();
        this.ProductStatusTypeEnum = new ProductStatusTypeEnum();
        this.ProductInventoryStatusTypeEnum = new ProductInventoryStatusTypeEnum();
        this.SubmittalSheetTypeEnum = new SubmittalSheetTypeEnum();
        this.DiscountRequestStatusTypeEnum = new DiscountRequestStatusTypeEnum();
        this.CommissionRequestStatusTypeEnum = new CommissionRequestStatusTypeEnum();
        this.LineItemTypeEnum = new LineItemTypeEnum();
        this.LineItemOptionTypeEnum = new LineItemOptionTypeEnum();
        this.OrderStatusTypeEnum = new OrderStatusTypeEnum();
        this.ToolAccessEnum = new ToolAccessEnum();
    }
    Enums = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [])
    ], Enums);
    return Enums;
}());
exports.Enums = Enums;
var SystemAccessEnums = /** @class */ (function () {
    function SystemAccessEnums() {
        this.None = 1;
        this.ManageGroups = 20;
        this.ApproveUsers = 30;
        this.ViewUsers = 32;
        this.EditUser = 34;
        this.AdminAccessRights = 38;
        this.UndeleteUser = 36;
        this.ViewBusiness = 40;
        this.EditBusiness = 42;
        this.UndeleteBusiness = 44;
        this.ViewProject = 50;
        this.EditProject = 52;
        this.UndeleteProject = 54;
        //ShareProject : any = 56;
        this.TransferProject = 58;
        this.ViewProjectsInGroup = 59;
        this.RequestDiscounts = 60;
        this.ApproveDiscounts = 62;
        this.ViewOrder = 67;
        this.SubmitOrder = 68;
        //CMS access permissions
        this.ContentManagementHomeScreen = 70;
        this.ContentManagementFunctionalBuildings = 71;
        this.ContentManagementApplicationBuildings = 72;
        this.ContentManagementApplicationProducts = 73;
        this.ContentManagementLibrary = 74;
        this.ContentManagementCommsCenter = 75;
        this.ContentManagementProductFamilies = 76;
        this.ContentManagementTools = 77;
        // Pipeline Access Permissions
        this.ViewPipelineData = 80;
        this.EditPipelineData = 82;
        //View Discount Request
        this.ViewDiscountRequest = 63;
        this.RequestCommission = 64;
        this.ApproveCommissionRequests = 65;
        this.ViewRequestedCommission = 66;
    }
    return SystemAccessEnums;
}());
exports.SystemAccessEnums = SystemAccessEnums;
var UserTypeEnum = /** @class */ (function () {
    function UserTypeEnum() {
        this.Systems = 255;
        this.DaikinSuperUser = 190;
        this.DaikinAdmin = 170;
        this.DaikinEmployee = 150;
        this.CustomerSuperUser = 90;
        this.CustomerAdmin = 70;
        this.CustomerUser = 50;
        this.NotSet = 0;
        this.OtherType = 10;
    }
    return UserTypeEnum;
}());
exports.UserTypeEnum = UserTypeEnum;
var ExistingBusinessEnum = /** @class */ (function () {
    function ExistingBusinessEnum() {
        this.New = 0;
        this.Existing = 1;
        this.Duplicate = 2;
    }
    return ExistingBusinessEnum;
}());
exports.ExistingBusinessEnum = ExistingBusinessEnum;
var BusinessTypeEnum = /** @class */ (function () {
    function BusinessTypeEnum() {
        this.Unknown = 1;
        this.Daikin = 100000;
        this.ManufacturerRep = 200003;
        this.Distributor = 200000;
        this.Dealer = 200001;
        this.EngineerArchitect = 200005;
        this.Other = 100000000;
    }
    return BusinessTypeEnum;
}());
exports.BusinessTypeEnum = BusinessTypeEnum;
var ProductFamilyEnum = /** @class */ (function () {
    function ProductFamilyEnum() {
        this.Other = 1;
        this.Accessories = 2;
        this.UnitarySplitSystem = 111521;
        this.UnitaryPackagedSystem = 111522;
        this.MiniSplit = 111523;
        this.MultiSplit = 111524;
        this.SkyAir = 111525;
        this.VRV = 111526;
        this.AlthermaSplit = 111527;
        this.AlthermaMonobloc = 111528;
        this.LightCommercialSplitSystem = 111529;
        this.LightCommercialPackagedSystem = 111530;
    }
    return ProductFamilyEnum;
}());
exports.ProductFamilyEnum = ProductFamilyEnum;
var ProductModelTypeEnum = /** @class */ (function () {
    function ProductModelTypeEnum() {
        this.Other = 1;
        this.All = 100000999;
        this.Indoor = 111531;
        this.Outdoor = 111532;
        this.System = 111533;
        this.Accessory = 112553;
    }
    return ProductModelTypeEnum;
}());
exports.ProductModelTypeEnum = ProductModelTypeEnum;
var ProductTypeEnum = /** @class */ (function () {
    function ProductTypeEnum() {
        this.Equipment = 111226;
        this.Accessory = 111227;
        this.Service = 111228;
    }
    return ProductTypeEnum;
}());
exports.ProductTypeEnum = ProductTypeEnum;
//TODO: to be renamed
var UnitInstallationTypeEnum = /** @class */ (function () {
    function UnitInstallationTypeEnum() {
        // TODO:  Delete after 10/01/2017
        //public None = 0;
        //public Other = 1;
        //public All = 100000999;
        //public AirHandler = 100000000;
        //public EvaporatorCoil = 100000001;
        //public PackageAC = 100000002;
        //public PackageHP = 100000003;
        //public PackageDF = 100000004;
        //public PackageGE = 100000005;
        //public WallMounted = 100000151;
        //public CeilingSuspended = 100000152;
        //public Ducted = 100000153;
        //public FloorStanding = 100000154;
        //public CeilingCassette = 100000155;
        //public GasFurnace = 100000156;
        //public CasedCoil = 100000157;
        //public CoilOnly = 100000158;
        //public CoolingOnly = 100000301;
        //public HeatPump = 100000302;
        //public HeatRecovery = 100000303;
        //public AirConditioner = 100000304;
        // TODO END:  Delete after 10/01/2017
        this.None = 0;
        this.Other = 1;
        this.All = 100000999;
        this.AirHandler = 100000000;
        this.EvaporatorCoil = 100000001;
        this.PackageAC = 100000002;
        this.PackageHP = 100000003;
        this.PackageDF = 100000004;
        this.PackageGE = 100000005;
        this.WallMounted = 111006;
        this.CeilingSuspended = 111008;
        this.Ducted = 111007;
        this.FloorStanding = 111010;
        this.CeilingCassette = 111009;
        this.GasFurnace = 100000156;
        this.CasedCoil = 100000157;
        this.CoilOnly = 100000158;
        this.CoolingOnly = 100000301;
        this.HeatPump = 100000302;
        this.HeatRecovery = 100000303;
        this.AirConditioner = 100000304;
        this.DualFloorCeilingSuspended = 111011;
        this.Rooftop = 111012;
    }
    return UnitInstallationTypeEnum;
}());
exports.UnitInstallationTypeEnum = UnitInstallationTypeEnum;
var ProductClassPIMEnum = /** @class */ (function () {
    function ProductClassPIMEnum() {
        this.None = 0;
        this.All = 100000999;
        this.NewProduct = 111173;
        this.SplitAC = 111174;
        this.SplitHP = 111175;
        this.Coil = 111176;
        this.AirHandler = 111177;
        this.GasFurnace = 111178;
        this.PackageAC = 111179;
        this.PackagedHP = 111180;
        this.PackagedGED = 111181;
        this.LightCommercialPackagedAC = 111182;
        this.LightCommercialPackagedHP = 111183;
        this.LightCommercialPackagedGE = 111184;
        this.MiniSplitAC = 111185;
        this.MiniSplitHP = 111186;
        this.MiniSplitFC = 111187;
        this.MiniSplitSystem = 111188;
        this.MultiSplitAC = 111189;
        this.MultiSplitHP = 111190;
        this.MultiSplitFC = 111191;
        this.SkyAirAC = 111192;
        this.SkyAirHP = 111193;
        this.SkyAirFC = 111194;
        this.SkyAirSystem = 111195;
        this.AlthermaMonoBlocHP = 111196;
        this.AlthermaMonoBlocHeatOnly = 111197;
        this.AlthermaSplitHP = 111198;
        this.AlthermaSplitHeatOnly = 111199;
        this.AlthermaFC = 111200;
        this.AlthermaWaterTank = 111201;
        this.VRVAirCooledHP = 111202;
        this.VRVAirCooledHR = 111203;
        this.VRVFanCoil = 111204;
        this.VRVWaterCooledHP = 111205;
        this.VRVWaterCooledHR = 111206;
        this.VRVVentilation = 111207;
        this.AdapterPCB = 111208;
        this.ElectricHeater = 111209;
        this.ExpansionValveKit = 111210;
        this.Filters = 111211;
        this.GeneralAccessories = 111212;
        this.InstallationBox = 111213;
        this.PipingKit = 111214;
        this.BranchSelector = 111215;
        this.CondensateDrainKit = 111216;
        this.Controllers = 1112117;
        this.DecorationPanel = 111218;
        this.SensorKit = 111219;
        this.VentilationKit = 111220;
        this.PackagedAC = 112261;
    }
    return ProductClassPIMEnum;
}());
exports.ProductClassPIMEnum = ProductClassPIMEnum;
var ProductEnergySourceTypeEnum = /** @class */ (function () {
    function ProductEnergySourceTypeEnum() {
        this.Electric = 110979;
        this.Gas = 110980;
        this.DualFuel = 110981;
    }
    return ProductEnergySourceTypeEnum;
}());
exports.ProductEnergySourceTypeEnum = ProductEnergySourceTypeEnum;
var ProductStatusTypeEnum = /** @class */ (function () {
    function ProductStatusTypeEnum() {
        this.New = 111266;
        this.Active = 111267;
        this.Obsolete = 111268;
        this.HiddenModuleUnit = 111269;
        this.Inactive = 143382;
        this.HiddenSellable = 179065;
        this.Other = 1;
    }
    return ProductStatusTypeEnum;
}());
exports.ProductStatusTypeEnum = ProductStatusTypeEnum;
var ProductInventoryStatusTypeEnum = /** @class */ (function () {
    function ProductInventoryStatusTypeEnum() {
        this.Available = 111700;
        this.ContactCSR = 111710;
        //public ContactEquipmentCSR: any = 111720;
        this.NotAvailable = 111730;
    }
    return ProductInventoryStatusTypeEnum;
}());
exports.ProductInventoryStatusTypeEnum = ProductInventoryStatusTypeEnum;
var SubmittalSheetTypeEnum = /** @class */ (function () {
    function SubmittalSheetTypeEnum() {
        this.Other = 1;
        this.CoilsAirHandlers = 111499;
        this.CommercialACAndHP = 111500;
        this.CommercialAH = 111501;
        this.GasFurnace = 111502;
        this.AlthermaIndoor = 111503;
        this.AlthermaOutdoor = 111504;
        this.AlthermaTank = 111505;
        this.MultiSplitIndoor = 111506;
        this.MultiSplitOutdoor = 111507;
        this.SystemCooling = 111508;
        this.SystemHP = 111509;
        this.VRVIIIAirCooled = 111510;
        this.VRVIIIWaterCooled = 111511;
        this.VRVIndoor = 111512;
        this.Controllers = 111513;
        this.Accessories = 111514;
        this.RTU = 111515;
        this.Packaged = 111516;
        this.ACAndHP = 111517;
        this.PackagedACAndHP = 111518;
        this.PackagedDF = 111519;
        this.PackagedGE = 111520;
    }
    return SubmittalSheetTypeEnum;
}());
exports.SubmittalSheetTypeEnum = SubmittalSheetTypeEnum;
var DiscountRequestStatusTypeEnum = /** @class */ (function () {
    function DiscountRequestStatusTypeEnum() {
        this.NewRecord = 0;
        this.Pending = 2;
        this.Rejected = 4;
        this.Approved = 6;
        this.Deleted = 8;
    }
    return DiscountRequestStatusTypeEnum;
}());
exports.DiscountRequestStatusTypeEnum = DiscountRequestStatusTypeEnum;
var CommissionRequestStatusTypeEnum = /** @class */ (function () {
    function CommissionRequestStatusTypeEnum() {
        this.NewRecord = 0;
        this.Pending = 2;
        this.Rejected = 4;
        this.Approved = 6;
        this.Deleted = 8;
    }
    return CommissionRequestStatusTypeEnum;
}());
exports.CommissionRequestStatusTypeEnum = CommissionRequestStatusTypeEnum;
var LineItemTypeEnum = /** @class */ (function () {
    function LineItemTypeEnum() {
        this.Standard = 1;
        this.Configured = 2;
    }
    return LineItemTypeEnum;
}());
exports.LineItemTypeEnum = LineItemTypeEnum;
var LineItemOptionTypeEnum = /** @class */ (function () {
    function LineItemOptionTypeEnum() {
        this.BaseModel = 1;
        this.FactoryInstalled = 2;
        this.FieldInstalled = 3;
    }
    return LineItemOptionTypeEnum;
}());
exports.LineItemOptionTypeEnum = LineItemOptionTypeEnum;
var OrderStatusTypeEnum = /** @class */ (function () {
    function OrderStatusTypeEnum() {
        this.NewRecord = 1;
        this.Submitted = 2;
        this.AwaitingCSR = 3;
        this.Accepted = 4;
        this.InProcess = 5;
        this.Picked = 6;
        this.Shipped = 7;
        this.Canceled = 8;
    }
    return OrderStatusTypeEnum;
}());
exports.OrderStatusTypeEnum = OrderStatusTypeEnum;
var ToolAccessEnum = /** @class */ (function () {
    function ToolAccessEnum() {
        this.WEBXpress = 20;
        this.UnitaryMatchupTool = 35;
        this.CommercialSplitMatchupTool = 36;
        this.LCSubmittalTool = 120;
        this.LCSTHighEff = 122;
        this.LCSTHighEffv2 = 123;
    }
    return ToolAccessEnum;
}());
exports.ToolAccessEnum = ToolAccessEnum;
//@Injectable()
//export class ProductFamilyEnum {
//    public Other: any = 1;
//    public MiniSplit: any = 100000000;
//    public Altherma: any = 100000001;
//    public MultiSplit: any = 100000002;
//    public SkyAir: any = 100000003;
//    public VRV: any = 100000004;
//    public RTU: any = 100000005;
//    public Packaged: any = 100000006;
//    public PTAC: any = 100000007;
//    public Ventilation: any = 100000008;
//    public IAQ_CleanComfort: any = 100000009;
//    public Accessories: any = 100000010;
//    public UnitarySplit: any = 100000012;
//    public UnitaryPackage: any = 100000013;
//    public CommercialSplit: any = 100000014;
//    constructor() {
//    }
//} 


/***/ }),

/***/ "./src/app/shared/header/header-buttons.component.css":
/***/ (function(module, exports) {

module.exports = "@media (min-width: 1200px) {\r\n}\r\n\r\n@media (max-width: 576px) {\r\n    nav#topHeader {\r\n        background-color: white;\r\n    }\r\n}\r\n\r\n#importantInfoIcon {\r\n    height: 25px;\r\n    width:25px;\r\n    margin-top:15px;\r\n    /*margin-left:15px;*/\r\n    margin-bottom:15px;\r\n    cursor: pointer;\r\n}\r\n\r\n.importantInfoLabel {\r\n    cursor: pointer;\r\n    padding-right: 20px;\r\n    vertical-align: middle;\r\n    color: indianred;\r\n}"

/***/ }),

/***/ "./src/app/shared/header/header-buttons.component.html":
/***/ (function(module, exports) {

module.exports = "<!--<a href=\"javascript:window.location.href='/'\" id=\"home_btn\">\r\n    <img src=\"src/assets/images/daikin-logo.png\" height=\"50\" alt=\"www.daikin.co.uk\" />\r\n</a>-->\r\n\r\n<nav id=\"topHeader\" class=\"navbar navbar-default\">\r\n\r\n    <div class=\"navbar-header\">\r\n        <a href=\"javascript:window.location.href='/'\" id=\"home_btn\">\r\n            <img src=\"src/assets/images/daikin-logo.png\" height=\"50\" alt=\"www.daikin.co.uk\" />\r\n        </a>\r\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#topMenuBar\">\r\n            <!--<span>Main Menu</span>-->\r\n            <span class=\"icon-bar\"></span>\r\n            <span class=\"icon-bar\"></span>\r\n            <span class=\"icon-bar\"></span>\r\n        </button>\r\n\r\n        <!--<a href=\"\" id=\"home_btn\">\r\n            <img src=\"src/assets/images/daikin-logo.png\" height=\"50\" alt=\"www.daikin.co.uk\" />\r\n        </a>-->\r\n    </div>\r\n\r\n    <!--<a href=\"javascript:window.location.href='/'\" id=\"home_btn\">\r\n        <img src=\"src/assets/images/daikin-logo.png\" height=\"50\" alt=\"www.daikin.co.uk\" />\r\n    </a>-->\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"topMenuBar\">\r\n        <ul id=\"headerButtons\" class=\"nav navbar-nav navbar-right\">\r\n            <li *ngIf=\"showMaintenanceIcon\">\r\n                <img src=\"/v3/src/assets/images/information-icon.png\" id=\"importantInfoIcon\" \r\n                     (click)=\"onImportantInfoIconClick()\"/>\r\n                    <span class=\"importantInfoLabel\" (click)=\"onImportantInfoIconClick()\"> Important Info</span>\r\n            </li>\r\n            <li>\r\n                <a href=\"{{libraryLink}}\">\r\n                    <img src=\"/v3/src/assets/images/library-icon-s.png\" /> Documents Library\r\n                </a>\r\n            </li>\r\n\r\n            <!--User has logged in-->\r\n            <li>\r\n                <a *ngIf=\"isAuthenticated\" id=\"projectOfficeBtn\" href=\"/v3/#/home\">\r\n                    <img src=\"/v3/src/assets/images/project-office-icon-s.png\" /> Project Office\r\n                </a>\r\n            </li>\r\n            <li class=\"dropdown\" *ngIf=\"isAuthenticated\">\r\n                <a id=\"signInBtn\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">\r\n                    <img src=\"/v3/src/assets/images/user-icon-s.png\" /> Signed in as:\r\n                    <span class=\"glyphicon glyphicon-menu-down\"></span>\r\n                    <br />\r\n                    <span id=\"loggedin-username\" class=\"loggedinusername\" style=\"padding-left:35px;\">\r\n                        <!--{{currentUser.displayName}}-->\r\n                    </span>\r\n                </a>\r\n                <ul id=\"userOptionsDropdown\" class=\"dropdown-menu\">\r\n                    <li><a href=\"/Content/pdf/DaikinCityUserGuide.pdf\" target=\"_blank\">USER GUIDE</a></li>\r\n                    <li><a href=\"/Account/AccountDetailsEdit\">YOUR ACCOUNT</a></li>\r\n                    <li id=\"hidden-management-li\" hidden></li>\r\n                    <li id=\"hidden-content-management-li\" hidden></li>\r\n                    <li *ngIf=\"currentUser\"><a href=\"/Account/Logoff\">SIGN OUT</a></li>\r\n                </ul>\r\n            </li>\r\n            <!--------------------->\r\n            <!--User has not logged in-->\r\n            <li *ngIf=\"!isAuthenticated\">\r\n                <a id=\"loginLink\" href=\"/v3/#/account/login\">\r\n                    <span class=\"glyphicon glyphicon-user\"></span>\r\n                    <span>Sign In</span>\r\n                </a>\r\n            </li>\r\n            <!-------------------------->\r\n            <li class=\"dropdown\">\r\n                <!--<a id=\"menu-dropdown\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span> Menu</a>-->\r\n                <a id=\"menu-dropdown\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"><img src=\"/v3/src/assets/images/menu-icon-s.png\" /> Menu</a>\r\n                <ul id=\"cityLocationsDropdown\" class=\"dropdown-menu\">\r\n                    <li>\r\n                        <a href=\"/#conveniencestore\">\r\n                            <span class=\"glyphicon glyphicon-menu-right\"></span> CONVENIENCE STORE\r\n                        </a>\r\n                    </li>\r\n                    <li><a href=\"/#bank\"><span class=\"glyphicon glyphicon-menu-right\"></span> BANK</a></li>\r\n                    <li><a href=\"/#hotel\"><span class=\"glyphicon glyphicon-menu-right\"></span> HOTEL</a></li>\r\n                    <li><a href=\"/#office\"><span class=\"glyphicon glyphicon-menu-right\"></span> OFFICE</a></li>\r\n                    <li><a href=\"/#restaurant\"><span class=\"glyphicon glyphicon-menu-right\"></span> RESTAURANT</a></li>\r\n                    <li><a href=\"/#retailstore\"><span class=\"glyphicon glyphicon-menu-right\"></span> RETAIL STORE</a></li>\r\n                    <li><a href=\"/#commscenter\"><span class=\"glyphicon glyphicon-menu-right\"></span> SCHOOL</a></li>\r\n                    <li><a href=\"/#conveniencestore\"><span class=\"glyphicon glyphicon-menu-right\"></span> COMMS CENTER</a></li>\r\n                    <li><a href=\"/#projectoffice\"><span class=\"glyphicon glyphicon-menu-right\"></span> PROJECT OFFICE</a></li>\r\n                    <li *ngIf=\"canAccessTrainingCenter\"><a href=\"/#trainingcenter\"><span class=\"glyphicon glyphicon-menu-right\"></span> TRAINING CENTER</a></li>\r\n                    <li *ngIf=\"canAccessLibrary\"><a href=\"/#library\"> <span class=\"glyphicon glyphicon-menu-right\"></span> LIBRARY</a></li>\r\n                    <li *ngIf=\"canAccessLogistic\"><a href=\"/#logisticscenter\"> <span class=\"glyphicon glyphicon-menu-right\"></span> LOGISTICS CENTER</a></li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <!--Daikin City Maintenance Message-->\r\n    <div id=\"informationInfoModal\" class=\"modal fade\" role=\"dialog\"\r\n         data-keyboard=\"false\" data-backdrop=\"static\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Daikin City Maintenance Alert</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <p>{{maintenanceText}}</p>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</nav>\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/shared/header/header-buttons.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var HeaderButtonsComponent = /** @class */ (function () {
    function HeaderButtonsComponent(toastrSvc, userSvc, enums, webconfigSvc) {
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.enums = enums;
        this.webconfigSvc = webconfigSvc;
        this.showMaintenanceIcon = false;
        this.showMaintenanceDialog = false;
    }
    HeaderButtonsComponent.prototype.ngOnChanges = function () {
        //was working ok, but maybe slow
        //this.userSvc.getCurrentUser()
        //    .then(this.getCurrentUserCallback.bind(this));
        if (this.userSvc.currentUser == undefined) {
            this.userSvc.getCurrentUser().then(this.getCurrentUserCallback.bind(this));
        }
    };
    HeaderButtonsComponent.prototype.ngOnInit = function () {
        var self = this;
        if (this.userSvc.currentUser == undefined) {
            this.userSvc.getCurrentUser().then(this.getCurrentUserCallback.bind(this));
        }
        this.userSvc.getWebsiteMaintenanceInfo().then(function (resp) {
            if (resp.model.showMaintenanceIcon == true) {
                self.showMaintenanceIcon = true;
                self.maintenanceData = resp.model;
            }
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
        this.webconfigSvc.getWebConfig().then(function (resp) {
            self.webconfig = resp;
            self.libraryLink = self.webconfig.routeConfig.libraryLink;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
    };
    HeaderButtonsComponent.prototype.getCurrentUserCallback = function (resp) {
        if (resp != null && resp != undefined) {
            if (resp.isok) {
                this.currentUser = resp.model;
                this.userSvc.currentUser = resp.model;
                var userNameElem = jQuery("#loggedin-username");
                userNameElem.text(this.currentUser.displayName);
                var projectOfficeBtn = jQuery("#projectOfficeBtn");
                projectOfficeBtn.attr("href", this.currentUser.defaultPageUrl);
                var canViewUsers = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ViewUsers);
                var canManageGroups = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ManageGroups);
                var canViewBusiness = this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ViewBusiness);
                var userOptsDropdownElem = jQuery("#userOptionsDropdown");
                if (canManageGroups || canViewBusiness || canViewUsers) {
                    var management_li = "";
                    if (canManageGroups) {
                        management_li = '<li><a href="/Userdashboard/groups/">MANAGEMENT</a></li>';
                    }
                    if (canViewBusiness) {
                        management_li = '<li><a href="/Userdashboard/businesses/">MANAGEMENT</a></li>';
                    }
                    if (canViewUsers) {
                        management_li = '<li><a href="/Userdashboard/users/">MANAGEMENT</a></li>';
                    }
                    //userOptsDropdownElem.append(management_li);
                    jQuery("#hidden-management-li").replaceWith(management_li);
                }
                if (this.currentUser.hasAccessToCMS) {
                    var CMS_li = "";
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementTools)) {
                        CMS_li = '<li><a href="/CityCMS/tools/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementProductFamilies)) {
                        CMS_li = '<li><a href="/CityCMS/productfamilies/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementCommsCenter)) {
                        CMS_li = '<li><a href="/CityCMS/communicationscenter/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementLibrary)) {
                        CMS_li = '<li><a href="/CityCMS/library/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementApplicationProducts)) {
                        CMS_li = '<li><a href="/CityCMS/applicationproducts/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementApplicationBuildings)) {
                        CMS_li = '<li><a href="/CityCMS/applicationbuildings/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementFunctionalBuildings)) {
                        CMS_li = '<li><a href="/CityCMS/functionalbuildings/">CONTENT MANAGEMENT</a></li>';
                    }
                    if (this.userSvc.hasAccess(this.currentUser, this.enums.SystemAccessEnum.ContentManagementHomeScreen)) {
                        CMS_li = '<li><a href="/CityCMS/homescreen/">CONTENT MANAGEMENT</a></li>';
                    }
                    //userOptsDropdownElem.append(CMS_li);
                    jQuery("#hidden-content-management-li").replaceWith(CMS_li);
                }
                var signOut_li = '<li><a href="/Account/Logoff">SIGN OUT</a></li>';
                //userOptsDropdownElem.append(signOut_li);
                var cityLocationsDropdownElem = jQuery("#cityLocationsDropdown");
                if (this.currentUser.cityAccesses.indexOf(1) > -1) {
                    //var cityLibrary_li = '<li><a href="/#library"> <span class="glyphicon glyphicon-menu-right"></span> LIBRARY</a></li>';
                    //cityLocationsDropdownElem.append(cityLibrary_li);
                    this.canAccessLibrary = true;
                }
                if (this.currentUser.cityAccesses.indexOf(2) > -1) {
                    //var logisticsCenter_li = '<li><a href="/#logisticscenter"> <span class="glyphicon glyphicon-menu-right"></span> LOGISTICS CENTER</a></li>';
                    //cityLocationsDropdownElem.append(logisticsCenter_li);
                    this.canAccessLogistic = true;
                }
                if (this.currentUser.cityAccesses.indexOf(3) > -1) {
                    this.canAccessTrainingCenter = true;
                }
                for (var _i = 0, _a = resp.messages.items; _i < _a.length; _i++) {
                    var message = _a[_i];
                    if (message.type == 40) {
                        this.toastrSvc.Success(message.text);
                    }
                }
            }
            else if (resp.messages) {
                //window.location.href = "/Account/Login";
                for (var _b = 0, _c = resp.messages.items; _b < _c.length; _b++) {
                    var message = _c[_b];
                    if (message.type == 10) {
                        this.toastrSvc.Error(message.text);
                    }
                }
            }
        }
    };
    HeaderButtonsComponent.prototype.onImportantInfoIconClick = function () {
        jQuery("#informationInfoModal").modal();
        //this.showMaintenanceDialog = true;
        //jQuery("#informationInfoModal").modal();
        this.maintenanceText = this.maintenanceData.maintenanceText;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], HeaderButtonsComponent.prototype, "isAuthenticated", void 0);
    HeaderButtonsComponent = __decorate([
        core_1.Component({
            selector: 'header-buttons',
            template: __webpack_require__("./src/app/shared/header/header-buttons.component.html"),
            styles: [__webpack_require__("./src/app/shared/header/header-buttons.component.css")],
            providers: [toastr_service_1.ToastrService, user_service_1.UserService]
        }),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, user_service_1.UserService,
            enums_1.Enums,
            webconfig_service_1.WebConfigService])
    ], HeaderButtonsComponent);
    return HeaderButtonsComponent;
}());
exports.HeaderButtonsComponent = HeaderButtonsComponent;
;


/***/ }),

/***/ "./src/app/shared/models/searchOrders.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SearchOrders = /** @class */ (function () {
    function SearchOrders() {
    }
    return SearchOrders;
}());
exports.SearchOrders = SearchOrders;


/***/ }),

/***/ "./src/app/shared/models/user.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var User = /** @class */ (function () {
    function User() {
        this.firstName = "";
        this.lastName = "";
        this.email = "";
        this.businessLogoUrl = "";
    }
    return User;
}());
exports.User = User;


/***/ }),

/***/ "./src/app/shared/projectTabs/project-tabs.component.html":
/***/ (function(module, exports) {

module.exports = "<nav id=\"projectTabs\" class='navbar navbar-default'>\r\n    <div class='container-fluid navibar'>\r\n        <div class=\"navbar-header\">\r\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#tabsMenuBar\">\r\n                <span class=\"glyphicon glyphicon-menu-down\"></span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"tabsMenuBar\">\r\n            <ul id=\"nav-bar\" class='nav navbar-nav tabsMenuBar'>\r\n                <li id=\"homeTab\"> <a [routerLink]=\"['/home']\"> HOME </a> </li>\r\n                <li id=\"projectsTab\" *ngIf=\"canViewProject\"> <a [routerLink]=\"['/projects']\"> PROJECTS </a> </li>\r\n                <li id=\"toolsTab\"> <a [routerLink]=\"['/tools']\"> TOOLS </a> </li>\r\n                <li id=\"productsTab\"> <a [routerLink]=\"['/product']\" (click)=\"Products()\"> BROWSE PRODUCTS </a> </li>\r\n                <!-- <li id=\"ordersTab\"> <a href=\"/ProjectDashboard/Orders\"> ORDERS </a> </li>-->\r\n                <li id=\"ordersTab\"><a [routerLink]=\"['/orders']\">ORDERS </a></li>\r\n                <li id=\"overviewTab\"> <a href=\"/ProjectDashboard/OverView\"> REPORTS </a> </li>\r\n            </ul>\r\n\r\n        </div>\r\n    </div>\r\n</nav>"

/***/ }),

/***/ "./src/app/shared/projectTabs/project-tabs.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
//import { LoadingIconService } from '../services/loadingIcon.service';
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var account_service_1 = __webpack_require__("./src/app/account/services/account.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var ProjectTabsComponent = /** @class */ (function () {
    function ProjectTabsComponent(router, route, toastrSvc, userSvc, accountSvc, productSvc, enums) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.accountSvc = accountSvc;
        this.productSvc = productSvc;
        this.enums = enums;
        this.isAuthenticated = false;
        this.canViewProject = false;
    }
    ProjectTabsComponent.prototype.ngOnInit = function () {
        this.userSvc.isAuthenticated().then(this.isAuthenticatedCallBack.bind(this));
        this.canViewProject = this.userSvc.hasAccess(this.user, this.enums.SystemAccessEnum.ViewProject);
    };
    ProjectTabsComponent.prototype.ngAfterViewInit = function () {
        //this.isAuthenticated = this.userSvc.userIsAuthenticated;
    };
    ProjectTabsComponent.prototype.ngAfterViewChecked = function () {
        this.setupActiveTab();
    };
    ProjectTabsComponent.prototype.isAuthenticatedCallBack = function (resp) {
        if (resp.isok) {
            if (resp.model == true) {
                //setup user header menu
                this.isAuthenticated = true;
                this.userSvc.userIsAuthenticated = true;
                //this.userSvc.getCurrentUser().then(this.getCurrentUserCallback.bind(this));
            }
            else {
                //Go back to login page
                //window.location.href = "/Account/Login";
            }
        }
    };
    //Navigate to Product page and set BasketQuoteId = 0 
    ProjectTabsComponent.prototype.Products = function () {
        this.productSvc.products();
    };
    ProjectTabsComponent.prototype.setupActiveTab = function () {
        var hash = window.location.hash;
        if (hash == "#/overview") {
            jQuery("#overviewTab").addClass('selected').siblings().removeClass('selected');
        }
        else if ((hash == "#/projects") || hash.includes("#/projects/") || hash.includes("#/projectQuotes/") || hash.includes("#/projectEdit/") || hash.includes("#/projectCreate")) {
            jQuery("#projectsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash.includes("#/quote/") || hash.includes("#/quoteCreate/") || hash.includes("#/quoteEdit/")) {
            jQuery("#projectsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash.includes("#/orderForm/")) {
            jQuery("#projectsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash.includes("#/discountRequest/")) {
            jQuery("#projectsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash.includes("#/commissionRequest/")) {
            jQuery("#projectsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash.includes("#/tool")) {
            jQuery("#toolsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash == "#/product") {
            jQuery("#productsTab").addClass('selected').siblings().removeClass('selected');
        }
        else if (hash == "#/orders") {
            jQuery("#ordersTab").addClass('selected').siblings().removeClass('selected');
        }
        jQuery("#nav-bar li").click(function () {
            jQuery(this).addClass('selected').siblings().removeClass('selected');
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ProjectTabsComponent.prototype, "user", void 0);
    ProjectTabsComponent = __decorate([
        core_1.Component({
            selector: "project-tabs",
            template: __webpack_require__("./src/app/shared/projectTabs/project-tabs.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, user_service_1.UserService,
            account_service_1.AccountService, product_service_1.ProductService,
            enums_1.Enums])
    ], ProjectTabsComponent);
    return ProjectTabsComponent;
}());
exports.ProjectTabsComponent = ProjectTabsComponent;
;


/***/ }),

/***/ "./src/app/shared/redirect/redirect-page.component.css":
/***/ (function(module, exports) {

module.exports = "\r\n#main-container {\r\n    margin-top: 25px;\r\n}\r\n\r\n.message-body {\r\n    font-family: 'Noto Sans', Arial, serif;\r\n    font-weight: 400;\r\n    -webkit-font-smoothing: antialiased;    \r\n    line-height: 1.618em;\r\n    /*background: #464646;*/\r\n    background-size: cover;\r\n    margin: 5%;\r\n}\r\n\r\nh2 {\r\n    font-family: 'Noto Sans', Arial, serif;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n    line-height: 1.618em;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.message-section {\r\n    max-width: 800px;\r\n    margin: 1% auto 1% auto;\r\n    background-color: #222;\r\n    opacity: 0.8;\r\n    filter: alpha(opacity=80); /* For IE8 and earlier */\r\n    color: #fff;\r\n    padding: 1em 5%;\r\n}\r\n\r\n.message-text {\r\n    padding:5px;\r\n}\r\n\r\na {\r\n    color: #00CC66;\r\n}\r\n\r\na:focus {\r\n        outline: none;\r\n        outline-offset: inherit;\r\n    }\r\n\r\n@media (max-device-width: 1027px) {\r\n\r\n    .message-body {\r\n        text-align: center;\r\n        font-size: larger;\r\n    }\r\n\r\n    .message-section {\r\n        max-width: 90%;\r\n    }\r\n}\r\n\r\n@media (max-device-width: 640px) {\r\n    .message-section {\r\n        max-width: 97%;\r\n    }\r\n}\r\n"

/***/ }),

/***/ "./src/app/shared/redirect/redirect-page.component.html":
/***/ (function(module, exports) {

module.exports = " \r\n<div class=\"container-fluid\" id=\"main-container\">\r\n    <div class=\"message-body\">\r\n        <div class=\"message-section\">\r\n            <h2>Our Site has moved!</h2>\r\n            <h3>\r\n                <p class=\"message-text\">\r\n                    Please click  <a [routerLink]=\"['/home']\">Go to Daikin City</a> to redirect to right address.\r\n                    <br />\r\n                    <br />\r\n                    Thank you !!\r\n                </p>\r\n            </h3>\r\n        </div>\r\n    </div>\r\n   \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/redirect/redirect-page.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var RedirectPageComponent = /** @class */ (function () {
    function RedirectPageComponent() {
    }
    RedirectPageComponent.prototype.ngOnInit = function () {
        this.text = "Please click below to redirect to right address:";
    };
    RedirectPageComponent = __decorate([
        core_1.Component({
            selector: "redirect-page",
            template: __webpack_require__("./src/app/shared/redirect/redirect-page.component.html"),
            styles: [__webpack_require__("./src/app/shared/redirect/redirect-page.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], RedirectPageComponent);
    return RedirectPageComponent;
}());
exports.RedirectPageComponent = RedirectPageComponent;
;


/***/ }),

/***/ "./src/app/shared/services/base-error-handler.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
var BaseErrorHandlerService = /** @class */ (function () {
    function BaseErrorHandlerService(toastrSvc) {
        this.toastrSvc = toastrSvc;
    }
    ;
    BaseErrorHandlerService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        //console.error(error); // log to console instead
        console.log(error);
        this.toastrSvc.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    BaseErrorHandlerService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService])
    ], BaseErrorHandlerService);
    return BaseErrorHandlerService;
}());
exports.BaseErrorHandlerService = BaseErrorHandlerService;
;


/***/ }),

/***/ "./src/app/shared/services/common.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var CommonService = /** @class */ (function () {
    function CommonService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    CommonService.prototype.getStateIdByStateCode = function (stateCode) {
        return this.http.get("/api/Common/GetStateIdByStateCode?stateCode=" + stateCode, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    CommonService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    CommonService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    CommonService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], CommonService);
    return CommonService;
}());
exports.CommonService = CommonService;


/***/ }),

/***/ "./src/app/shared/services/email.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var http_2 = __webpack_require__("./node_modules/@angular/common/esm5/http.js");
//import { Observable } from 'rxjs/Observable';
var rxjs_1 = __webpack_require__("./node_modules/rxjs/Rx.js");
var operators_1 = __webpack_require__("./node_modules/rxjs/_esm5/operators.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var EmailService = /** @class */ (function () {
    function EmailService(router, route, toastrSvc, http, httpClient) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.httpClient = httpClient;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    EmailService.prototype.ngOnInit = function () { };
    EmailService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    EmailService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return rxjs_1.Observable.throw(error.statusText);
    };
    /*
     * @param emails is a json object
     * example:
     *   {
     *       "emails": ["test@123.com", "test@g", "test@eu.net"]
     *   }
     */
    EmailService.prototype.validateEmails = function (emails) {
        return this.http.post("/api/Email/ValidateEmails", emails, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    EmailService.prototype.handleHttpClientError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        //console.error(error); // log to console instead
        //this.toastrSvc.Error(error.message);
        //console.error(error.message)
        //return Observable.throw(error.statusText);
        debugger;
        if (error.error instanceof ErrorEvent) {
            // A client-side or network error occurred. Handle it accordingly.
            console.error('An error occurred:', error.error.message);
        }
        else {
            // The backend returned an unsuccessful response code.
            // The response body may contain clues as to what went wrong,
            //console.error(
            //    `Backend returned code ${error.status}, ` +
            //    `body was: ${error.error}`);
            //console.error(JSON.parse(JSON.stringify(error)));
            console.error("Backend returned code " + error.status + ", " +
                ("body was: " + JSON.stringify(error.error)));
        }
        // return an observable with a user-facing error message
        return rxjs_1.Observable.throw(error.statusText); //'Something bad happened; please try again later.'
    };
    /*
     * @param emailList: is a string (email are seperated with comma or semicolon)
     */
    //public validateEmailList(emailList: string): Observable<any> {
    //    return this.httpClient.get("/api/Email/ValidateEmailList?EmailList=" + emailList)
    //}
    EmailService.prototype.validateEmailList = function (emailList) {
        return this.httpClient.get("/api/Email/ValidateEmailList?EmailList=" + emailList).pipe(operators_1.catchError(this.handleHttpClientError));
    };
    EmailService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, http_1.Http, http_2.HttpClient])
    ], EmailService);
    return EmailService;
}());
exports.EmailService = EmailService;


/***/ }),

/***/ "./src/app/shared/services/password.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var PasswordService = /** @class */ (function () {
    function PasswordService() {
    }
    PasswordService.prototype.PasswordStrengthLevel = function (password) {
        var strength = 0;
        if (this.ContainsLowerCase(password)) {
            strength++;
        }
        if (this.ContainsUpperCase(password)) {
            strength++;
        }
        if (this.ContainsNumber(password)) {
            strength++;
        }
        if (this.ContainsSpecialCharacter(password)) {
            strength++;
        }
        if (password.length >= 8) {
            strength++;
        }
        return strength;
    };
    PasswordService.prototype.ContainsLowerCase = function (password) {
        var patt = /[a-z]/g;
        var result = password.match(patt);
        if (result != null && result.length > 0) {
            return true;
        }
        else
            return false;
    };
    PasswordService.prototype.ContainsUpperCase = function (password) {
        var patt = /[A-Z]/g;
        var result = password.match(patt);
        if (result != null && result.length > 0) {
            return true;
        }
        else
            return false;
    };
    PasswordService.prototype.ContainsNumber = function (password) {
        var patt = /[0-9]/g;
        var result = password.match(patt);
        if (result != null && result.length > 0) {
            return true;
        }
        else
            return false;
    };
    PasswordService.prototype.ContainsSpecialCharacter = function (password) {
        var patt = /[`~!@#$%\^&\*\(\)\-_=\+\{\}\[\]\|\\:;"',\.\/<>\?]/g;
        var result = password.match(patt);
        if (result != null && result.length > 0) {
            return true;
        }
        else
            return false;
    };
    PasswordService = __decorate([
        core_1.Injectable()
    ], PasswordService);
    return PasswordService;
}());
exports.PasswordService = PasswordService;


/***/ }),

/***/ "./src/app/shared/services/toastr.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var ToastrService = /** @class */ (function () {
    function ToastrService() {
    }
    ToastrService.prototype.Error = function (message) {
        toastr.options = {
            "positionClass": "toast-bottom-right",
            "timeOut": 0,
            "extendedTimeOut": 0,
            "preventDuplicates": true
        };
        toastr.error(message + "<br /><br /><button type'button' class='btn clear' style='color: black'>Ok</button>");
    };
    ToastrService.prototype.ErrorFadeOut = function (message) {
        toastr.options = {
            "positionClass": "toast-bottom-right",
            "preventDuplicates": true
        };
        toastr.error(message);
    };
    ToastrService.prototype.UserRegistionError = function (message) {
        toastr.options = {
            "positionClass": "toast-bottom-right",
            "preventDuplicates": true
        };
        toastr.error(message + "<br />Please refer to our <a href='/v3/#/account/userRegistrationFAQ' style='color: #40c8f4; text-decoration: underline'>FAQ</a>");
    };
    ToastrService.prototype.Success = function (message) {
        toastr.options = {
            "positionClass": "toast-bottom-right",
            "preventDuplicates": true
        };
        toastr.success(message);
    };
    ToastrService.prototype.Info = function (message) {
        toastr.options = {
            "positionClass": "toast-bottom-right",
            "preventDuplicates": true
        };
        toastr.info(message);
    };
    ToastrService.prototype.Warning = function (message) {
        toastr.options = {
            "positionClass": "toast-bottom-right",
            "preventDuplicates": true
        };
        toastr.warning(message);
    };
    ToastrService.prototype.displayResponseMessages = function (response) {
        if (response != null && response.messages != null) {
            for (var _i = 0, _a = response.messages.items; _i < _a.length; _i++) {
                var message = _a[_i];
                if (message.type == 40) {
                    this.Success(message.text);
                }
                else if (message.type == 10) {
                    this.Error(message.text);
                }
            }
        }
    };
    ToastrService.prototype.displayUserRegistrationResponseMessages = function (response) {
        if (response != null && response.messages != null) {
            for (var _i = 0, _a = response.messages.items; _i < _a.length; _i++) {
                var message = _a[_i];
                if (message.type == 40) {
                    this.Success(message.text);
                }
                else if (message.type == 10) {
                    this.UserRegistionError(message.text);
                }
            }
        }
    };
    ToastrService.prototype.displayResponseMessagesFadeOut = function (response) {
        if (response != null && response.messages != null) {
            for (var _i = 0, _a = response.messages.items; _i < _a.length; _i++) {
                var message = _a[_i];
                if (message.type == 40) {
                    this.Success(message.text);
                }
                else if (message.type == 10) {
                    this.ErrorFadeOut(message.text);
                }
            }
        }
    };
    ToastrService = __decorate([
        core_1.Injectable()
    ], ToastrService);
    return ToastrService;
}());
exports.ToastrService = ToastrService;


/***/ }),

/***/ "./src/app/shared/services/user.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var UserService = /** @class */ (function () {
    function UserService(router, route, toastrSvc, http) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
    }
    UserService.prototype.ngOnInit = function () { };
    UserService.prototype.isAuthenticated = function () {
        return this.http.get("/api/User/IsAuthenticated", { headers: this.headers }).toPromise()
            .then(this.extractData).catch(this.handleError);
    };
    UserService.prototype.getCurrentUser = function () {
        var self = this;
        return this.http.get("/api/User/GetCurrentUser", { headers: this.headers }).toPromise()
            .then(function (res) {
            var resp = res.json();
            // HACK:  Hard-coded
            if (self.router.url.toLowerCase().includes("lms-catalog")) {
                return resp || {};
            }
            if (resp == null) {
                self.router.navigateByUrl("/account/login");
            }
            else {
                return resp || {};
            }
        })
            .catch(this.handleError);
    };
    UserService.prototype.getWebsiteMaintenanceInfo = function () {
        return this.http.get("/api/MaintenancePage/GetMaintenancePageInfo", { headers: this.headers }).toPromise()
            .then(this.extractData).catch(this.handleError);
    };
    UserService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    UserService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    UserService.prototype.hasAccess = function (user, accessId) {
        if (user != undefined || user != null) {
            for (var _i = 0, _a = user.systemAccesses; _i < _a.length; _i++) {
                var item = _a[_i];
                if (item == accessId) {
                    return true;
                }
            }
        }
        return false;
    };
    UserService.prototype.checkUserStatus = function (user) {
        if (user != undefined || user != null) {
            if (this.userInPendingStatus(user))
                return true;
        }
        return false;
    };
    UserService.prototype.userInPendingStatus = function (user) {
        return user.approved == false && user.rejected == false && user.enabled == true;
    };
    UserService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            toastr_service_1.ToastrService, http_1.Http])
    ], UserService);
    return UserService;
}());
exports.UserService = UserService;


/***/ }),

/***/ "./src/app/shared/services/webconfig.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
//import 'rxjs/Rx';
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var WebConfigService = /** @class */ (function () {
    //public webConfig: any;
    function WebConfigService(toastrSvc, http) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'dataType': 'json',
            'Accept': 'application/json'
        });
        //this.http.get("/v3/webconfig.v3.json", { headers: this.headers }).map(this.extractData).subscribe(
        //    resp => {
        //        this.webConfig = resp;
        //    },
        //    err => {
        //    }
        //);
    }
    WebConfigService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    WebConfigService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    WebConfigService.prototype.getWebConfig = function () {
        return this.http.get("/v3/webconfig.v3.json", { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    WebConfigService.prototype.getLCSTApiToken = function () {
        return this.http.get("/api/Product/GetLCSTApiToken", { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    WebConfigService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http])
    ], WebConfigService);
    return WebConfigService;
}());
exports.WebConfigService = WebConfigService;


/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/esm5/common.js");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/esm5/forms.js");
var header_buttons_component_1 = __webpack_require__("./src/app/shared/header/header-buttons.component.ts");
var SharedModule = /** @class */ (function () {
    function SharedModule() {
    }
    SharedModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule,
                forms_1.FormsModule, forms_1.ReactiveFormsModule,
            ],
            declarations: [header_buttons_component_1.HeaderButtonsComponent],
            exports: [common_1.CommonModule,
                forms_1.FormsModule, forms_1.ReactiveFormsModule,
                header_buttons_component_1.HeaderButtonsComponent],
            providers: []
        })
    ], SharedModule);
    return SharedModule;
}());
exports.SharedModule = SharedModule;
;


/***/ }),

/***/ "./src/app/submittal/components/attached-files.component.css":
/***/ (function(module, exports) {

module.exports = ".tbl-holder-custom {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding-top: 10px;\r\n    min-height: 90px;\r\n}\r\n\r\n.tbl thead tr th input[type=\"checkbox\"], .tbl tbody tr td input[type=\"checkbox\"] {\r\n    position: relative;\r\n    top: 0px;\r\n}\r\n\r\n.filename-header {\r\n    padding-top: 15px;\r\n    padding-left: 5px;\r\n}\r\n\r\n.delete_quote_package_attached_file {\r\n    float: right;\r\n}\r\n\r\n.context-btn {\r\n    -webkit-box-align: start;\r\n        -ms-flex-align: start;\r\n            align-items: flex-start;\r\n    background-attachment: scroll;\r\n    background-clip: border-box;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(241, 241, 241)), to(rgb(209, 209, 209)));\r\n    background-image: linear-gradient(rgb(241, 241, 241), rgb(209, 209, 209));\r\n    background-origin: padding-box;\r\n    background-size: auto;\r\n    border-bottom-color: rgb(184, 184, 184);\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(184, 184, 184);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    border-right-color: rgb(184, 184, 184);\r\n    border-right-style: solid;\r\n    border-right-width: 1px;\r\n    border-top-color: rgb(184, 184, 184);\r\n    border-top-left-radius: 0px;\r\n    border-top-right-radius: 0px;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(77, 84, 93);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    -webkit-filter: none;\r\n            filter: none;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13.3333px;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    font-variant-caps: normal;\r\n    -webkit-font-variant-ligatures: normal;\r\n            font-variant-ligatures: normal;\r\n    font-variant-numeric: normal;\r\n    font-weight: bold;\r\n    height: 30px;\r\n    letter-spacing: normal;\r\n    line-height: 30px;\r\n    margin-bottom: 9px;\r\n    margin-left: 0px;\r\n    margin-right: 0px;\r\n    margin-top: 8px;\r\n    padding-bottom: 2px;\r\n    padding-left: 6px;\r\n    padding-right: 10px;\r\n    padding-top: 0px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    text-indent: 0px;\r\n    text-rendering: auto;\r\n    text-shadow: none;\r\n    text-transform: uppercase;\r\n    vertical-align: top;\r\n    width: 169px;\r\n    word-spacing: 0px;\r\n    -webkit-writing-mode: horizontal-tb;\r\n        -ms-writing-mode: lr-tb;\r\n            writing-mode: horizontal-tb;\r\n    -webkit-appearance: none;\r\n    -webkit-border-image: none\r\n}\r\n\r\n.context-btn img {\r\n    padding-right: 6px;\r\n    position: relative;\r\n    top: 0px;\r\n}\r\n\r\nimg {\r\n    border: 0;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    font-family: museo-sans, sans-serif;\r\n}"

/***/ }),

/***/ "./src/app/submittal/components/attached-files.component.html":
/***/ (function(module, exports) {

module.exports = "<link rel=\"stylesheet\" href=\"/v3/src/css/tablestyles.css\" />\r\n\r\n<div class=\"tbl-holder-custom scroll-x\">\r\n    <table class=\"tbl\" id=\"attachedfiles_table\" #attachedFileListTable>\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    <input type=\"checkbox\"\r\n                           name=\"chkAllAttachedFiles\"\r\n                           class=\"pull-left\"\r\n                           [checked]=\"hasAttachedFiles\"\r\n                           (change)=\"checkAllFileRows($event)\" />\r\n                    <span class=\"filename-header\">File Name</span>\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"quotePackageAttachedFiles.length > 0\">\r\n            <tr *ngFor=\"let item of quotePackageAttachedFiles; let i= index;\">\r\n                <td>\r\n                    <input type=\"checkbox\"\r\n                           id=\"{{item.fileName}}\"\r\n                           name=\"chkFileRow\"\r\n                           [attr.rowIndex]=\"i + 1\"\r\n                           value=\"{{item.description}}\"\r\n                           [checked]=\"hasAttachedFiles\"\r\n                           />\r\n                    <span>{{item.fileName}}</span>\r\n\r\n                </td>\r\n                <td>\r\n                    <button class=\"delete_quote_package_attached_file context-btn h-slim\"\r\n                       (click)=\"onDeleteFile(item.fileName)\">\r\n                        <img src=\"/v3/src/assets/images/context-btn-delete-icon.png\" />\r\n                        Delete File\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>"

/***/ }),

/***/ "./src/app/submittal/components/attached-files.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var submittal_package_service_1 = __webpack_require__("./src/app/submittal/services/submittal-package.service.ts");
var submittal_package_1 = __webpack_require__("./src/app/submittal/models/submittal-package.ts");
var AttachedFilesComponent = /** @class */ (function () {
    function AttachedFilesComponent(http, submittalService) {
        this.http = http;
        this.submittalService = submittalService;
        this.quotePackageAttachedFiles = [];
        this.deleteFileClick = new core_1.EventEmitter();
        this.attachedFileList = [];
    }
    AttachedFilesComponent.prototype.ngOnInit = function () { };
    AttachedFilesComponent.prototype.checkAllFileRows = function (event) {
        var checkBoxes = this.tblAttachedFileList.nativeElement.querySelectorAll('input');
        if (event.target.checked) {
            Array.prototype.forEach.call(checkBoxes, function (value, index) {
                if (value.name === "chkFileRow") {
                    value.checked = true;
                }
            });
        }
        else {
            Array.prototype.forEach.call(checkBoxes, function (value, index) {
                if (value.name === "chkFileRow") {
                    value.checked = false;
                }
            });
        }
    };
    AttachedFilesComponent.prototype.isAllFilesChecked = function () {
        //if (this.quotePackageAttachedFiles.length > 0 )
        //    return this.quotePackageAttachedFiles.every(_ => _.isFileRow);
    };
    AttachedFilesComponent.prototype.onDeleteFile = function (filename) {
        //this.blockUI.start('Loading...');
        var _this = this;
        var submittalModel = new submittal_package_1.SubmittalPackageModel();
        submittalModel.quoteId = this.quoteId;
        var documentModel = [
            {
                fileName: filename,
                absoultePath: null,
                description: null,
                documentId: null,
                documentTypeId: 5,
                productId: null,
                productNumber: null,
                hasImage: null,
                url: null,
                siteFinityUrl: null,
                name: null,
                rank: 0,
                fileExtension: null
            }
        ];
        submittalModel.quotePackageAttachedFiles = documentModel;
        this.submittalService.deleteFile(submittalModel)
            .subscribe(function (data) {
            _this.attachedFileList = data.model;
            _this.deleteFileClick.emit(_this.attachedFileList);
        }, function (err) {
            console.log(err);
        });
    };
    __decorate([
        core_1.ViewChild("attachedFileListTable"),
        __metadata("design:type", Object)
    ], AttachedFilesComponent.prototype, "tblAttachedFileList", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], AttachedFilesComponent.prototype, "quoteId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], AttachedFilesComponent.prototype, "hasAttachedFiles", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], AttachedFilesComponent.prototype, "quotePackageAttachedFiles", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], AttachedFilesComponent.prototype, "deleteFileClick", void 0);
    AttachedFilesComponent = __decorate([
        core_1.Component({
            selector: 'attached-files',
            template: __webpack_require__("./src/app/submittal/components/attached-files.component.html"),
            styles: [__webpack_require__("./src/app/submittal/components/attached-files.component.css")]
        }),
        __metadata("design:paramtypes", [http_1.Http,
            submittal_package_service_1.SubmittalPackageService])
    ], AttachedFilesComponent);
    return AttachedFilesComponent;
}());
exports.AttachedFilesComponent = AttachedFilesComponent;


/***/ }),

/***/ "./src/app/submittal/components/quote-package-grid.component.css":
/***/ (function(module, exports) {

module.exports = ".section {\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(46, 54, 65);\r\n    display: block;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13px;\r\n    padding-bottom: 20px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    padding-top: 10px;\r\n    position: relative;\r\n\r\n}\r\n\r\n.section .t-flush {\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(46, 54, 65);\r\n    display: block;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13px;\r\n    padding-bottom: 20px;\r\n    padding-left: 0px;\r\n    padding-right: 0px;\r\n    padding-top: 0px;\r\n    position: relative;\r\n}\r\n\r\n.item-strap {\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(46, 54, 65);\r\n    display: block;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13px;\r\n    height: 70px;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.item-strap .itemname {\r\n    float: left;\r\n    padding-top: 0px;\r\n    max-width: 100%;\r\n    -webkit-box-sizing: content-box;\r\n            box-sizing: content-box;\r\n}\r\n\r\nh1 {\r\n    color: rgb(0, 161, 228);\r\n    display: block;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    height: 40px;\r\n    margin-bottom: 0;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    padding-top: 0px;\r\n    text-overflow: ellipsis;\r\n    text-transform: uppercase;\r\n    white-space: nowrap;\r\n}\r\n\r\n.item-strap .btn-bar {\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(46, 54, 65);\r\n    display: block;\r\n    float: right;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13px;\r\n    height: 32px;\r\n    margin-bottom: 20px;\r\n    margin-left: 0px;\r\n    margin-right: 0px;\r\n    margin-top: 20px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.item-strap .btn-bar a, .item-strap .btn-bar button {\r\n    margin-bottom: 4px;\r\n}\r\n\r\n.submit-btn, .context-btn.submit, .search-btn {\r\n    color: #fff;\r\n    background-color: #007fcc;\r\n    background: -webkit-gradient(linear,left top, left bottom,from(#21ade9),to(#007fcc));\r\n    background: linear-gradient(#21ade9,#007fcc);\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    border: 1px solid #007fcc;\r\n    font-family: \"museo-sans\",sans-serif;\r\n    font-weight: 900;\r\n}\r\n\r\n.submit-btn:hover {\r\n    background: #21aee9;\r\n}\r\n\r\n.submit-btn {\r\n    -webkit-box-align: start;\r\n        -ms-flex-align: start;\r\n            align-items: flex-start;\r\n    background-attachment: scroll;\r\n    background-clip: border-box; \r\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(33, 173, 233)), to(rgb(0, 127, 204))); \r\n    background-image: linear-gradient(rgb(33, 173, 233), rgb(0, 127, 204));\r\n    background-origin: padding-box;\r\n    background-size: auto;\r\n    border-bottom-color: rgb(0, 127, 204);\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(0, 127, 204);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    border-right-color: rgb(0, 127, 204);\r\n    border-right-style: solid;\r\n    border-right-width: 1px;\r\n    border-top-color: rgb(0, 127, 204);\r\n    border-top-left-radius: 0px;\r\n    border-top-right-radius: 0px;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(255, 255, 255);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    -webkit-filter: none;\r\n            filter: none;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13.3333px;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    font-weight: 900;\r\n    height: 38px;\r\n    letter-spacing: normal;\r\n    line-height: 36px;\r\n    margin-bottom: 4px; \r\n    padding-bottom: 1px;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    padding-top: 1px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    text-indent: 2px;\r\n    text-rendering: auto;\r\n    text-shadow: none;\r\n    text-transform: uppercase;\r\n    vertical-align: top;\r\n    /*width: 223px;*/\r\n    word-spacing: 0px;\r\n    -webkit-writing-mode: horizontal-tb;\r\n        -ms-writing-mode: lr-tb;\r\n            writing-mode: horizontal-tb;\r\n}\r\n\r\n.submit-btn img {\r\n    position: relative;\r\n    top: 0px;\r\n    right: 8px;\r\n}\r\n\r\n.tbl-strap {\r\n    /*padding-bottom: 5px;\r\n    padding-top: 10px;*/\r\n    overflow: hidden;\r\n    padding-bottom: 0px;\r\n}\r\n\r\nh6 {\r\n    font-size: 16px;\r\n    color: #00a1e4;\r\n    text-transform: uppercase;\r\n    display: block;\r\n    -webkit-margin-before: 2.33em;\r\n    -webkit-margin-after: 2.33em;\r\n    -webkit-margin-start: 0px;\r\n    -webkit-margin-end: 0px;\r\n    font-weight: bold;\r\n}\r\n\r\n.tbl-holder-custom {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    padding-top: 10px;\r\n    min-height: 90px;\r\n}\r\n\r\n.section.action.c-align {\r\n    background-color: rgb(222, 245, 255);\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(46, 54, 65);\r\n    display: block;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    margin-top: 18px;\r\n    padding-bottom: 20px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    padding-top: 20px;\r\n    position: relative;\r\n    text-align: center;\r\n}\r\n\r\n.header-reference {\r\n    width: 15%;\r\n}\r\n\r\n.header-description {\r\n   width: 20%;\r\n}\r\n\r\n.col-main-grid {\r\n    padding-right: 15px;\r\n}\r\n\r\n.context-btn {\r\n    -webkit-box-align: start;\r\n        -ms-flex-align: start;\r\n            align-items: flex-start;\r\n    background-attachment: scroll;\r\n    background-clip: border-box;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(241, 241, 241)), to(rgb(209, 209, 209)));\r\n    background-image: linear-gradient(rgb(241, 241, 241), rgb(209, 209, 209));\r\n    background-origin: padding-box;\r\n    background-size: auto;\r\n    border-bottom-color: rgb(184, 184, 184);\r\n    border-bottom-left-radius: 0px;\r\n    border-bottom-right-radius: 0px;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(184, 184, 184);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    border-right-color: rgb(184, 184, 184);\r\n    border-right-style: solid;\r\n    border-right-width: 1px;\r\n    border-top-color: rgb(184, 184, 184);\r\n    border-top-left-radius: 0px;\r\n    border-top-right-radius: 0px;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(77, 84, 93);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    -webkit-filter: none;\r\n            filter: none;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13.3333px;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    font-variant-caps: normal;\r\n    -webkit-font-variant-ligatures: normal;\r\n            font-variant-ligatures: normal;\r\n    font-variant-numeric: normal;\r\n    font-weight: bold;\r\n    height: 30px;\r\n    letter-spacing: normal;\r\n    line-height: 30px;\r\n    margin: 0px;\r\n    padding-bottom: 2px;\r\n    padding-left: 6px;\r\n    padding-right: 10px;\r\n    padding-top: 0px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    text-indent: 0px;\r\n    text-rendering: auto;\r\n    text-shadow: none;\r\n    text-transform: uppercase;\r\n    vertical-align: top;\r\n    width: 169px;\r\n    word-spacing: 0px;\r\n    -webkit-writing-mode: horizontal-tb;\r\n        -ms-writing-mode: lr-tb;\r\n            writing-mode: horizontal-tb;\r\n    -webkit-appearance: none;\r\n    -webkit-border-image: none\r\n}\r\n\r\n.context-btn img {\r\n    padding-right: 6px;\r\n    position: relative;\r\n    top: 0px;\r\n}\r\n\r\na {\r\n    color: #00a1e4;\r\n    outline: 0;\r\n    border: none;\r\n    padding-left: 3px;\r\n    padding-right: 3px;\r\n    text-decoration: underline;\r\n}\r\n\r\n.label-view-link {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border-bottom-color: rgb(0, 161, 228);\r\n    border-bottom-style: none;\r\n    border-bottom-width: 0px;\r\n    border-collapse: collapse;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(0, 161, 228);\r\n    border-left-style: none;\r\n    border-left-width: 0px;\r\n    border-right-color: rgb(0, 161, 228);\r\n    border-right-style: none;\r\n    border-right-width: 0px;\r\n    border-top-color: rgb(0, 161, 228);\r\n    border-top-style: none;\r\n    border-top-width: 0px;\r\n    -webkit-box-sizing: content-box;\r\n            box-sizing: content-box;\r\n    color: rgb(0, 161, 228);\r\n    cursor: pointer;\r\n    display: inline;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 13px;\r\n    height: auto;\r\n    line-height: 18.5714px;\r\n    outline-color: rgb(0, 161, 228);\r\n    outline-style: none;\r\n    outline-width: 0px;\r\n    padding-left: 3px;\r\n    padding-right: 3px;\r\n    text-decoration: underline;\r\n    -webkit-text-size-adjust: 100%;\r\n       -moz-text-size-adjust: 100%;\r\n        -ms-text-size-adjust: 100%;\r\n            text-size-adjust: 100%;\r\n    width: auto;\r\n    \r\n}\r\n\r\nnav a:visited, a:link {\r\n    color: rgb(0, 161, 228);\r\n}\r\n\r\nimg {\r\n    border: 0;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    font-family: museo-sans, sans-serif;\r\n}\r\n\r\n.btn-cancel {\r\n    background-clip: border-box;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgb(241, 241, 241)), to(rgb(209, 209, 209)));\r\n    background-image: linear-gradient(rgb(241, 241, 241), rgb(209, 209, 209));\r\n    background-origin: padding-box;\r\n    background-size: auto;\r\n    border-bottom-color: rgb(184, 184, 184);\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-image-outset: 0px;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 100%;\r\n    border-image-source: none;\r\n    border-image-width: 1;\r\n    border-left-color: rgb(184, 184, 184);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    border-right-color: rgb(184, 184, 184);\r\n    border-right-style: solid;\r\n    border-right-width: 1px;\r\n    border-top-color: rgb(184, 184, 184);\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    color: rgb(77, 84, 93);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    -webkit-filter: none;\r\n            filter: none;\r\n    font-family: museo-sans, sans-serif;\r\n    font-size: 13px;\r\n    font-weight: 900;\r\n    height: 38px;\r\n    line-height: 36px;\r\n    outline-color: rgb(77, 84, 93);\r\n    outline-style: none;\r\n    outline-width: 0px;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    vertical-align: top;\r\n    width: 121px;\r\n}\r\n\r\n.section-bottom{\r\n    padding:10px;\r\n}\r\n\r\n.drag-dots{\r\n    height:10px;\r\n    vertical-align:inherit;\r\n    padding-right: 5px;\r\n}\r\n\r\n.progress {\r\n    height: 20px;\r\n    margin-bottom: 20px;\r\n    overflow: hidden;\r\n    background-color: #f5f5f5;\r\n    border-radius: 4px;\r\n    -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);\r\n    box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);\r\n}\r\n\r\n.progress-bar {\r\n    float: left;\r\n    width: 0;\r\n    height: 100%;\r\n    font-size: 12px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    text-align: center;\r\n    background-color: #337ab7;\r\n    -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .15);\r\n    box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .15);\r\n    -webkit-transition: width .6s ease;\r\n    transition: width .6s ease;\r\n}\r\n\r\n.progress-striped .progress-bar,\r\n.progress-bar-striped {\r\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);\r\n    background-size: 40px 40px;\r\n}\r\n\r\n.progress.active .progress-bar,\r\n.progress-bar.active {\r\n    -webkit-animation: progress-bar-stripes 2s linear infinite;\r\n    animation: progress-bar-stripes 2s linear infinite;\r\n}\r\n\r\n.progress-bar-success {\r\n    background-color: #5cb85c;\r\n}\r\n\r\n.modal .modal-body .progress-striped .progress-bar-success {\r\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);\r\n}\r\n\r\n.progress-bar-info {\r\n    background-color: #5bc0de;\r\n}\r\n\r\n.progress-striped .progress-bar-info {\r\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);\r\n}\r\n\r\n.progress-bar-warning {\r\n    background-color: #f0ad4e;\r\n}\r\n\r\n.progress-striped .progress-bar-warning {\r\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);\r\n}\r\n\r\n.progress-bar-danger {\r\n    background-color: #d9534f;\r\n}\r\n\r\n.progress-striped .progress-bar-danger {\r\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);\r\n}\r\n\r\n.processing-modal-header{\r\n    text-align: center;\r\n}\r\n\r\n.k-button .k-upload-button {\r\n    min-width: 7em;\r\n    margin: 8px;\r\n    width: 250px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}"

/***/ }),

/***/ "./src/app/submittal/components/quote-package-grid.component.html":
/***/ (function(module, exports) {

module.exports = "<link rel=\"stylesheet\" href=\"/v3/src/assets/css/tablestyles.css\" />\r\n<link rel=\"stylesheet\" href=\"/v3/src/assets/css/dragula.min.css\" />\r\n\r\n<div>\r\n    <form #submittalRequestForm=\"ngForm\">\r\n\r\n        <div class=\"item-strap\">\r\n            <div class=\"itemname\">\r\n                <h1>SUBMITTAL PACKAGE</h1>\r\n            </div>\r\n            <div class=\"btn-bar\">\r\n                <button type=\"submit\"\r\n                        class=\"submit-btn\"\r\n                        (click)=\"onSubmit()\">\r\n                    <img src=\"/v3/src/assets/images/create-package-btn-icon.png\" />Create Package\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"section t-flush\">\r\n            <div class=\"tbl-strap\">\r\n                <img src=\"/v3/src/assets/images/assoc-products-icon.png\" class=\"pull-left\" />\r\n                <div class=\"pull-left\">\r\n                    <h6>Associated Product Files</h6>\r\n                    <p>Customise the available documents you wish to be included in this package</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"tbl-holder-custom scroll-x\">\r\n                <table class=\"tbl\" id=\"submittal-package-table\" #tblSubmittalPackage>\r\n                    <thead>\r\n                        <tr>\r\n                            <th id=\"productReference\" aria-sort=\"none\" class=\"header-reference\">\r\n                                Reference\r\n                            </th>\r\n                            <th id=\"productDescription\" aria-sort=\"none\" class=\"header-description\">\r\n                                Description\r\n                            </th>\r\n                            <th *ngFor=\"let header of possibleDocsList\" #chkBoxColumnHeader>\r\n\r\n                                <input type=\"checkbox\"\r\n                                       id={{header.name}}\r\n                                       name={{header.inputname}}\r\n                                       class=\"pull-left\"\r\n                                       [attr.colIndex]=\"header.colId\"\r\n                                       [attr.rowIndex]=\"0\"\r\n                                       (change)=\"checkAllRowCheckBoxes($event)\" />\r\n                                {{header.label}}\r\n\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody class=\"container\" [dragula]='\"section-bag\"'>\r\n                        <tr *ngFor=\"let item of quoteItemsList; let i= index;\" #quoteItemRows>\r\n                            <td class=\"col-reference\">\r\n                                <div *ngIf=\"item.lineItemTypeId!=2; else configuredItemReference\">\r\n                                    <img src=\"/v3/src/assets/images/drag_dots_blue.png\" class=\"drag-dots\"/>\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.productId}}\"\r\n                                           class=\"header-checkbox\"\r\n                                           name=\"chkBoxReferenceRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.productId}}\"\r\n                                           (change)=\"checkAllColumnCheckBoxes($event, i+1)\" />\r\n                                    <a class=\"product-number-link\"\r\n                                       href=\"/v3/#/product/(productDetails:{{item.productId}})?activeTab=product-overview\">\r\n                                        {{item.productNumber}}\r\n                                    </a>\r\n                                </div>\r\n                                <ng-template #configuredItemReference>\r\n                                    <img src=\"/v3/src/assets/images/drag_dots_blue.png\" class=\"drag-dots\"/>\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.productId}}\"\r\n                                           class=\"header-checkbox\"\r\n                                           name=\"chkBoxReferenceRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.productId}}\"\r\n                                           (change)=\"checkAllColumnCheckBoxes($event, i+1)\" />\r\n                                    <a class=\"product-number-link\"\r\n                                       href=\"/v3/#/product/(productDetails:{{item.productId}})?activeTab=product-overview\">\r\n                                        {{item.codeString}}\r\n                                    </a>\r\n                                </ng-template>\r\n                            </td>\r\n\r\n                            <td class=\"col-description\">\r\n                                <div *ngIf=\"item.lineItemTypeId!=2; else configuredItemDescription\">\r\n                                    {{item.description}}\r\n                                </div>\r\n                                <ng-template #configuredItemDescription>\r\n                                    <p>Configured Item</p>\r\n                                </ng-template>\r\n                            </td>\r\n\r\n                            <td class=\"col-main-grid\" #tdSubmittalSheets>\r\n                                <div *ngIf=\"item.hasSubmittalSheets\">\r\n                                    <input class=\"chkBoxSubmittalSheets\"\r\n                                           type=\"checkbox\"\r\n                                           id=\"{{item.submittalSheetsDocId}}\"\r\n                                           name=\"chkBoxSubmittalSheetsRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.submittalSheetsDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'submittalSheets')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.submittalSheetUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n\r\n                            <td class=\"col-main-grid\" #tdInstallationManual>\r\n                                <div *ngIf=\"item.hasInstallationManual\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.installationManualDocId}}\"\r\n                                           name=\"chkBoxInstallationManualRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.installationManualDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'installationManual')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.installationManualUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"col-main-grid\" #tdOperationManual>\r\n                                <div *ngIf=\"item.hasOperationManual\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.operationManualDocId}}\"\r\n                                           name=\"chkBoxOperationManualRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.operationManualDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'operationManual')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.operationalManualUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"col-main-grid\" #tdGuideSpecs>\r\n                                <div *ngIf=\"item.hasGuideSpecs\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.guideSpecsDocId}}\"\r\n                                           name=\"chkBoxGuideSpecsRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.guideSpecsDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'guideSpecs')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.guideSpecsUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"col-main-grid\" #tdProductBrochure>\r\n                                <div *ngIf=\"item.hasProductBrochure\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.productBrochureDocId}}\"\r\n                                           name=\"chkBoxProductBrochureRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.productBrochureDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'productBrochure')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.productBrochureUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"col-main-grid\" #tdRevitDrawing>\r\n                                <div *ngIf=\"item.hasRevitDrawing\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.revitDrawingDocId}}\"\r\n                                           name=\"chkBoxRevitDrawingRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.revitDrawingDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'revitDrawing')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.revitDrawingUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"col-main-grid\" #tdCadDrawing>\r\n                                <div *ngIf=\"item.hasCadDrawing\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.cadDrawingDocId}}\"\r\n                                           name=\"chkBoxCadDrawingRow\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.cadDrawingDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'cadDrawing')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.cadDrawingUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"col-main-grid\" #tdProductFlyer>\r\n                                <div *ngIf=\"item.hasProductFlyer\">\r\n                                    <input type=\"checkbox\"\r\n                                           id=\"{{item.productFlyerDocId}}\"\r\n                                           name=\"chkBoxProductFlyer\"\r\n                                           [attr.rowIndex]=\"i + 1\"\r\n                                           value=\"{{item.productFlyerDocId}}\"\r\n                                           (change)=\"uncheckBothRowAndColumnHeaderCheckBoxes(i+1, 'productFlyer')\" />\r\n                                    <a class=\"label-view-link\" href=\"{{item.productFlyerUrl}}\" target=\"_blank\">\r\n                                        View\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div class=\"section\">\r\n\r\n            <div class=\"tbl-strap\">\r\n                <img src=\"/v3/src/assets/images/attached-files-icon.png\" class=\"pull-left\" />\r\n                <div class=\"pull-left\">\r\n                    <h6>Other Uploaded Files</h6>\r\n                    <p>Please select the files to be attached when this package is created</p>\r\n                </div>\r\n                <div class=\"pull-right\">\r\n                    <span class=\"selections-buttons\">\r\n                        <button type=\"button\" class=\"context-btn\" id=\"attach_new_file_btn\"\r\n                                (click)=\"OpenModal()\">\r\n                            <img src=\"/v3/src/assets/images/context-btn-export-icon.png\" />\r\n                            Upload New File\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <attached-files [quotePackageAttachedFiles]=\"quotePackageAttachedFiles\"\r\n                            [hasAttachedFiles]=\"hasAttachedFiles\"\r\n                            [quoteId]=\"quoteId\"\r\n                            (deleteFileClick)=\"refreshFileListHandler($event)\">\r\n            </attached-files>\r\n        </div>\r\n\r\n        <div class=\"section action c-align\">\r\n            <a class=\"btn-cancel\" href=\"/v3/#/quote/{{quoteIdentifier}}/existingRecord\">Cancel</a>\r\n            <button type=\"button\"\r\n                    class=\"submit-btn\"\r\n                    (click)=\"onSubmit()\">\r\n                <img src=\"/v3/src/assets/images/create-package-btn-icon.png\" />Create Package\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"section-bottom\">\r\n\r\n        </div>\r\n\r\n        <upload-files-modal #componentInsideModal [title]=\"title\"\r\n               [quoteIdentifier]=\"quoteIdentifier\"\r\n               (notifyParent)=\"getNotificationHandler($event)\">\r\n            <ng-template #modalHeader>\r\n            </ng-template>\r\n            <ng-template #modalBody>\r\n                <div>\r\n                    <p>\r\n                        Click 'Select' to browse <br />\r\n                        or  <br />\r\n                        Drag & drop your file in this section...\r\n                    </p>\r\n\r\n                    <kendo-upload required\r\n                                  [saveUrl]=\"submittalPackageUrl\"\r\n                                  [multiple]=\"true\"\r\n                                  [autoUpload]=\"true\"\r\n                                  [(ngModel)]=\"submittalFileUpload\"\r\n                                  name=\"submittalFileAttachment\"\r\n                                  (upload)=\"uploadEventHandler($event)\"\r\n                                  (success)=\"successEventHandler($event)\"\r\n                                  (complete)=\"uploadCompleted()\"\r\n                                  (error)=\"errorEventHandler($event)\">\r\n\r\n                    </kendo-upload>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #modalFooter>\r\n                <!--<button (click)=\"saveFiles()\">Upload</button>-->\r\n            </ng-template>\r\n        </upload-files-modal>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"progressbarModal\"\r\n     role=\"dialog\"\r\n     tabindex=\"-1\">\r\n\r\n   \r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"processing-modal-header\">\r\n                    Processing...\r\n                </h4>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"progress progress-striped active\">\r\n                        <div class=\"progress\">\r\n                            <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [style.width]=\"width+'%'\">\r\n                                 \r\n                            </div>\r\n                            <!--<ng-progress [positionUsing]=\"'translate3d'\"\r\n                                         [minimum]=\"0.15\"\r\n                                         [maximum]=\"1\"\r\n                                         [speed]=\"200\"\r\n                                         [showSpinner]=\"false\"\r\n                                         [direction]=\"'leftToRightReduced'\"\r\n                                         [color]=\"'red'\"\r\n                                         [trickleSpeed]=\"250\"\r\n                                         [thick]=\"true\"\r\n                                         [ease]=\"'linear'\">\r\n                            </ng-progress>-->\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!--Configured products-->\r\n<!--<div *ngIf=\"hasConfiguredItem\">\r\n    <div class=\"tbl-holder scroll-x\">\r\n        <table class=\"tbl\" id=\"configuredproducts_table\">\r\n            <thead>\r\n                <tr>\r\n                    <th id=\"productreference\" aria-sort=\"none\" style=\"width:180px;\">Reference</th>\r\n                    <th id=\"productdescription\" aria-sort=\"none\" style=\"width:180px;\">Description</th>\r\n                    <th><input type=\"checkbox\" name=\"chkAllSubmittalSheets\" class=\"pull-left\" />Submittal<br />Sheets</th>\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of Items ; let i = index\">-->\r\n<!--@foreach (var item in Model.Items)\r\n{\r\nif (item.LineItemTypeId == (byte)LineItemTypeEnum.Configured)\r\n{-->\r\n<!--<td class=\"as-lnk\" style=\"padding-right: 10px;\">\r\n    <span>{{item.CodeString}}</span>\r\n</td>\r\n<td style=\"padding-right: 10px; max-width: 40px; white-space:normal;\">\r\n    Configured Item\r\n</td>-->\r\n<!--<td style=\"padding-right: 10px;\">\r\n    @GenerateCheckBox(item.GetDocument(DocumentTypeEnum.SubmittalData))\r\n</td>-->\r\n<!--</tbody>\r\n        </table>\r\n    </div>\r\n</div>-->\r\n<!--\r\n\r\n\r\n<kendo-grid [data]=\"quoteItemsList\" [scrollable]=\"'scrollable'\">\r\n    <kendo-grid-column field=\"reference\" title=\"Reference\" class=\"header-reference\">\r\n        <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\r\n            {{column.title}}({{columnIndex}})\r\n        </ng-template>\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\"\r\n                        *ngIf=\"{dataItem.lineItemTypeId}}!=2; else configuredItemReference\">\r\n            <input type=\"checkbox\"\r\n                    id=\"{{dataItem.productId}}\"\r\n                    class=\"header-checkbox\"\r\n                    name=\"chkBoxReferenceRow\"\r\n                    [attr.rowIndex]=\"i + 1\"\r\n                    value=\"{{dataItem.productId}}\"\r\n                    (change)=\"checkAllColumnCheckBoxes($event, i+1)\" />\r\n            <a class=\"product-number-link\"\r\n                href=\"/v3/#/products/(productDetails:{{dataItem.productId}})?activeTab=product-overview\">\r\n                {{dataItem.productNumber}}\r\n            </a>\r\n        </ng-template>\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" #configuredItemReference>\r\n            <input type=\"checkbox\"\r\n                    id=\"{{dataItem.productId}}\"\r\n                    class=\"header-checkbox\"\r\n                    name=\"chkBoxReferenceRow\"\r\n                    [attr.rowIndex]=\"i + 1\"\r\n                    value=\"{{dataItem.productId}}\"\r\n                    (change)=\"checkAllColumnCheckBoxes($event, i+1)\" />\r\n            <a class=\"product-number-link\"\r\n                href=\"/v3/#/products/(productDetails:{{dataItem.productId}})?activeTab=product-overview\">\r\n                {{dataItem.codeString}}\r\n            </a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column field=\"description\" title=\"Description\" class=\"header-description\">\r\n        <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\r\n            {{column.title}}({{columnIndex}})\r\n        </ng-template>\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\"\r\n                        *ngIf=\"{{dataItem.lineItemTypeId}}!=2; else configuredItemDescription\">\r\n            {{dataItem.description}}\r\n        </ng-template>\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\" #configuredItemDescription>\r\n            <p>Configured Item</p>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column field=\"submittalSheets\" title=\"Submittal Sheets\" class=\"header-reference\">\r\n        <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\r\n\r\n            <input type=\"checkbox\"\r\n                    id={{column.field}}\r\n                    name={{column.title}}\r\n                    class=\"pull-left\"\r\n                    [attr.colIndex]=\"columnIndex\"\r\n                    [attr.rowIndex]=\"0\"\r\n                    (change)=\"checkAllRowCheckBoxes($event)\" />\r\n            {{column.title}}({{columnIndex}})\r\n        </ng-template>\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\"\r\n                        *ngIf=\"dataItem.hasSubmittalSheets\">\r\n            <input type=\"checkbox\"\r\n                    id=\"{{dataItem.submittalSheetsDocId}}\"\r\n                    class=\"chkBoxSubmittalSheets\"\r\n                    name=\"chkBoxSubmittalSheetsRow\"\r\n                    [attr.rowIndex]=\"rowIndex\"\r\n                    value=\"{{dataItem.submittalSheetsDocId}}\"\r\n                    (change)=\"checkAllColumnCheckBoxes($event, rowIndex)\" />\r\n            <a class=\"product-number-link\" href=\"{{dataItem.submittalSheetUrl}}\">\r\n                View\r\n            </a>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n</kendo-grid>\r\n-->\r\n"

/***/ }),

/***/ "./src/app/submittal/components/quote-package-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var kendo_file_saver_1 = __webpack_require__("./node_modules/@progress/kendo-file-saver/dist/es/main.js");
var Rx_1 = __webpack_require__("./node_modules/rxjs/_esm5/Rx.js");
var ng2_dragula_1 = __webpack_require__("./node_modules/ng2-dragula/ng2-dragula.js");
var submittal_package_service_1 = __webpack_require__("./src/app/submittal/services/submittal-package.service.ts");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var upload_files_modal_component_1 = __webpack_require__("./src/app/submittal/components/upload-files-modal.component.ts");
var submittal_package_1 = __webpack_require__("./src/app/submittal/models/submittal-package.ts");
var user_1 = __webpack_require__("./src/app/shared/models/user.ts");
var QuotePackageGridComponent = /** @class */ (function () {
    function QuotePackageGridComponent(submittalService, toastrSvc, dragulaSvc) {
        this.submittalService = submittalService;
        this.toastrSvc = toastrSvc;
        this.dragulaSvc = dragulaSvc;
        this.quotePackageAttachedFiles = [];
        this.width = 0;
        this.submittalPackageUrl = "/api/SubmittalPackage/QuotePackageAttachFile";
        var bag = this.dragulaSvc.find('section-bag');
        if (bag !== undefined)
            this.dragulaSvc.destroy('section-bag');
        this.dragulaSvc.setOptions('section-bag', { revertOnSpill: true });
    }
    QuotePackageGridComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.title = "Upload New File";
        this.quoteIdentifier = this.quoteId;
        this.dragulaSvc
            .drag
            .subscribe(function (value) {
            _this.msg = "Dragging the " + value[1].innerText + "!";
        });
        this.dragulaSvc
            .drop
            .subscribe(function (value) {
            _this.msg = "Dropped the " + value[1].innerText + "!";
            setTimeout(function () {
                _this.msg = '';
            }, 1000);
        });
    };
    //ngOnDestroy() {
    //    if (this.dragulaSvc.find('container') !== undefined) {
    //        this.dragulaSvc.destroy('container');
    //    }
    //}
    /**
     * Event emitter receipt from child components
     **/
    QuotePackageGridComponent.prototype.getNotificationHandler = function (evt) {
        //console.log('message received');    
        this.quotePackageAttachedFiles = evt;
    };
    QuotePackageGridComponent.prototype.refreshFileListHandler = function (evt) {
        //console.log('message received');
        this.quotePackageAttachedFiles = evt.quotePackageAttachedFiles;
        if (this.quotePackageAttachedFiles.length > 0)
            this.hasAttachedFiles = true;
    };
    QuotePackageGridComponent.prototype.OpenModal = function () {
        this.componentInsideModal.open();
    };
    /**
     * On Form Submit by clicking on Create Package button
     * */
    QuotePackageGridComponent.prototype.onSubmit = function () {
        //this.blockUI.start('Loading...');
        //this.ngProgress.start();
        var _this = this;
        var submittalModel = new submittal_package_1.SubmittalPackageModel();
        submittalModel.quoteId = this.quoteId; //"724134023730921472";
        submittalModel.projectId = this.projectId; //"724133966570946560";
        var quotePackageCheckedItems = jQuery("#submittal-package-table")
            .find("tbody input[type=checkbox]:checked").map(function () {
            return this.value;
        }).get();
        if (quotePackageCheckedItems.length > 0) {
            jQuery("#progressbarModal").modal({ backdrop: 'static', keyboard: false });
            var quotePackageItemList = quotePackageCheckedItems.map(function (x) { return x.split('-'); });
            var mappedPackageItems_1 = [];
            quotePackageItemList.forEach(function (value, key) {
                var productId = value[0];
                var documentTypeId = value[1];
                mappedPackageItems_1.push({ productId: productId, documentTypeId: documentTypeId });
            });
            submittalModel.productsAndDocuments = mappedPackageItems_1; //quote package item list   
            submittalModel.businessLogoUrl = this.userModel.businessLogoUrl; //pass the business logo to print it in cover page
            var attachedFileValues = jQuery("#attachedfiles_table")
                .find("tbody input[type=checkbox]:checked").map(function () {
                return this.value;
            }).get();
            var attachedFileList_1 = [];
            attachedFileValues.forEach(function (value, key) {
                var filename = value;
                var absoultePath = null;
                var description = null;
                var documentId = null;
                var documentTypeId = 5;
                var productId = null;
                var productNumber = null;
                var hasImage = null;
                var url = null;
                var siteFinityUrl = null;
                var name = null;
                var rank = 0;
                var fileExtension = null;
                attachedFileList_1.push({
                    filename: filename, absoultePath: absoultePath, description: description, documentId: documentId, documentTypeId: documentTypeId, productId: productId,
                    productNumber: productNumber, hasImage: hasImage, url: url, siteFinityUrl: siteFinityUrl, name: name, rank: rank, fileExtension: fileExtension
                });
            });
            submittalModel.quotePackageAttachedFiles = attachedFileList_1; //attached File List
            //Call api through submittal service
            if (submittalModel.productsAndDocuments.length > 0) {
                this.runProgressBar();
                this.submittalService.createQuotePackage(submittalModel)
                    .subscribe(function (data) {
                    //const blob = data._body;
                    var filename = "Download.zip";
                    var blob = new Blob([data._body], { type: 'application/zip' });
                    data.headers._headers.forEach(function (value, index) {
                        if (index == 'content-disposition') {
                            value.forEach(function (obj) {
                                var stringArr = obj.split(";").map(function (item) { return item.trim(); });
                                filename = stringArr[1].replace("filename=", "");
                                filename = filename.replace(/["]+/g, '');
                            });
                        }
                    });
                    kendo_file_saver_1.saveAs(blob, filename);
                    jQuery("#progressbarModal").modal('hide');
                }, function (err) {
                    jQuery("#progressbarModal").modal('hide');
                    _this.toastrSvc.Error(INTERNAL_SERVER_ERROR);
                });
            }
            else {
                toastr.error(SUBMITTAL_GENERATION_FAILURE);
            }
        }
        else {
            toastr.error(CHECKBOXES_UNCHECKED_ERROR);
        }
    };
    QuotePackageGridComponent.prototype.runProgressBar = function () {
        var _this = this;
        Rx_1.Observable.timer(0, 100)
            .takeWhile(function () {
            return _this.isWidthWithinLimit();
        }).subscribe(function () {
            _this.width = _this.width + 1;
        });
    };
    QuotePackageGridComponent.prototype.isWidthWithinLimit = function () {
        if (this.width === 98) {
            return false;
        }
        else {
            return true;
        }
    };
    /**
     *  File Upload Event Handlers
     **/
    QuotePackageGridComponent.prototype.uploadEventHandler = function (e) {
        console.log("File Upload");
        e.data = {
            QuoteId: this.quoteId
        };
        this.uploadEventData = e;
    };
    QuotePackageGridComponent.prototype.successEventHandler = function (e) {
        var self = this;
        if (e.response.ok == true) {
            console.log("The " + e.operation + " was successful!");
        }
    };
    QuotePackageGridComponent.prototype.errorEventHandler = function (e) {
        console.log("Error: " + e.response.statusText);
        this.toastrSvc.ErrorFadeOut(e.response.statusText);
    };
    QuotePackageGridComponent.prototype.uploadCompleted = function () {
        this.submittalFileUpload = null;
    };
    /* Main Table Button Click Events */
    /* Checks all the checkboxes of that Row */
    QuotePackageGridComponent.prototype.checkAllColumnCheckBoxes = function (event, rowId) {
        var checkBoxList = this.tblSubmittalPackage.nativeElement.getElementsByTagName('input');
        if (event.target.checked) {
            Array.prototype.forEach.call(checkBoxList, function (value, index) {
                if (parseInt(value.attributes.rowIndex.value) === rowId)
                    value.checked = true;
            });
        }
        else {
            Array.prototype.forEach.call(checkBoxList, function (value, index) {
                if (parseInt(value.attributes.rowIndex.value) === rowId ||
                    parseInt(value.attributes.rowIndex.value) === 0)
                    value.checked = false;
            });
        }
    };
    /* Unchecks left most check box as well as the column header belong to the user clicked checkboxes column and header */
    QuotePackageGridComponent.prototype.uncheckBothRowAndColumnHeaderCheckBoxes = function (rowId, colIdentifier) {
        var checkBoxList = this.tblSubmittalPackage.nativeElement.getElementsByTagName('input');
        if (colIdentifier == SUBMITTAL_SHEETS) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_SUBMITTAL_SHEETS_HEADER);
        }
        else if (colIdentifier == INSTALLATION_MANUAL) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_INSTALLATION_MANUAL_HEADER);
        }
        else if (colIdentifier == OPERATION_MANUAL) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_OPERATION_MANUAL_HEADER);
        }
        else if (colIdentifier == GUIDE_SPECS) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_GUIDE_SPECS_HEADER);
        }
        else if (colIdentifier == PRODUCT_BROCHURE) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_PRODUCT_BROCHURE_HEADER);
        }
        else if (colIdentifier == REVIT_DRAWING) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_REVIT_DRAWING_HEADER);
        }
        else if (colIdentifier == CAD_DRAWING) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_CAD_DRAWING_HEADER);
        }
        else if (colIdentifier == PRODUCT_FLYER) {
            this.uncheckColumnHeaderAndRowIdentifier(checkBoxList, rowId, colIdentifier, CHK_PRODUCT_FLYER_HEADER);
        }
    };
    QuotePackageGridComponent.prototype.uncheckColumnHeaderAndRowIdentifier = function (checkBoxList, rowId, colIdentifier, chkBoxHeaderName) {
        Array.prototype.forEach.call(checkBoxList, function (value, index) {
            if ((value.name == CHECKBOX_REFERENCE_ROW &&
                (parseInt(value.attributes.rowIndex.value) === rowId)) ||
                (value.name == chkBoxHeaderName)) {
                value.checked = false;
            }
        });
    };
    /* checks/unchecks all check boxes of that particular column */
    QuotePackageGridComponent.prototype.checkAllRowCheckBoxes = function (event) {
        var checkBoxList = this.tblSubmittalPackage.nativeElement.getElementsByTagName('input');
        if (event.target.id == SUBMITTAL_SHEETS) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_SUBMITTAL_SHEETS);
        }
        else if (event.target.id == INSTALLATION_MANUAL) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_INSTALLATION_MANUAL);
        }
        else if (event.target.id == OPERATION_MANUAL) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_OPERATION_MANUAL);
        }
        else if (event.target.id == GUIDE_SPECS) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_GUIDE_SPECS);
        }
        else if (event.target.id == PRODUCT_BROCHURE) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_PRODUCT_BROCHURE);
        }
        else if (event.target.id == REVIT_DRAWING) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_REVIT_DRAWING);
        }
        else if (event.target.id == CAD_DRAWING) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_CAD_DRAWING);
        }
        else if (event.target.id == PRODUCT_FLYER) {
            this.checkOrUncheckCheckboxes(event, checkBoxList, CHECKBOX_PRODUCT_FLYER);
        }
    };
    QuotePackageGridComponent.prototype.checkOrUncheckCheckboxes = function (event, checkBoxList, chkBoxName) {
        Array.prototype.forEach.call(checkBoxList, function (value, index) {
            if (value.name == chkBoxName) {
                if (event.target.checked)
                    value.checked = true;
                else
                    value.checked = false;
            }
        });
    };
    __decorate([
        core_1.ViewChild('componentInsideModal'),
        __metadata("design:type", upload_files_modal_component_1.UploadFilesModalComponent)
    ], QuotePackageGridComponent.prototype, "componentInsideModal", void 0);
    __decorate([
        core_1.ViewChild("tblSubmittalPackage"),
        __metadata("design:type", Object)
    ], QuotePackageGridComponent.prototype, "tblSubmittalPackage", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], QuotePackageGridComponent.prototype, "blockUI", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], QuotePackageGridComponent.prototype, "quoteItemsList", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", user_1.User)
    ], QuotePackageGridComponent.prototype, "userModel", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuotePackageGridComponent.prototype, "quotePackageAttachedFiles", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], QuotePackageGridComponent.prototype, "hasAttachedFiles", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuotePackageGridComponent.prototype, "possibleDocsList", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuotePackageGridComponent.prototype, "quoteId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], QuotePackageGridComponent.prototype, "projectId", void 0);
    QuotePackageGridComponent = __decorate([
        core_1.Component({
            selector: 'quote-package-grid',
            template: __webpack_require__("./src/app/submittal/components/quote-package-grid.component.html"),
            styles: [__webpack_require__("./src/app/submittal/components/quote-package-grid.component.css")],
            encapsulation: core_1.ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [submittal_package_service_1.SubmittalPackageService,
            toastr_service_1.ToastrService,
            ng2_dragula_1.DragulaService])
    ], QuotePackageGridComponent);
    return QuotePackageGridComponent;
}());
exports.QuotePackageGridComponent = QuotePackageGridComponent;
/**
 * *********** Constants ***************
 */
var PRODUCT_FLYER = 'productFlyer';
var CAD_DRAWING = 'cadDrawing';
var REVIT_DRAWING = 'revitDrawing';
var PRODUCT_BROCHURE = 'productBrochure';
var GUIDE_SPECS = 'guideSpecs';
var OPERATION_MANUAL = 'operationManual';
var INSTALLATION_MANUAL = 'installationManual';
var SUBMITTAL_SHEETS = 'submittalSheets';
var CHECKBOX_PRODUCT_FLYER = "chkBoxProductFlyer";
var CHECKBOX_CAD_DRAWING = "chkBoxCadDrawingRow";
var CHECKBOX_REVIT_DRAWING = "chkBoxRevitDrawingRow";
var CHECKBOX_PRODUCT_BROCHURE = 'chkBoxProductBrochureRow';
var CHECKBOX_GUIDE_SPECS = 'chkBoxGuideSpecsRow';
var CHECKBOX_OPERATION_MANUAL = 'chkBoxOperationManualRow';
var CHECKBOX_INSTALLATION_MANUAL = 'chkBoxInstallationManualRow';
var CHECKBOX_SUBMITTAL_SHEETS = 'chkBoxSubmittalSheetsRow';
var CHECKBOX_REFERENCE_ROW = "chkBoxReferenceRow";
var CHK_PRODUCT_FLYER_HEADER = "chkProductFlyerHeader";
var CHK_CAD_DRAWING_HEADER = "chkCadDrawingHeader";
var CHK_REVIT_DRAWING_HEADER = "chkRevitDrawingHeader";
var CHK_PRODUCT_BROCHURE_HEADER = "chkProductBrochureHeader";
var CHK_GUIDE_SPECS_HEADER = "chkGuideSpecsHeader";
var CHK_OPERATION_MANUAL_HEADER = "chkOperationManualHeader";
var CHK_INSTALLATION_MANUAL_HEADER = "chkInstallationManualHeader";
var CHK_SUBMITTAL_SHEETS_HEADER = "chkSubmittalSheetsHeader";
var INTERNAL_SERVER_ERROR = "Something went wrong. Please try again later.";
var SUBMITTAL_GENERATION_FAILURE = "Couln't generate submittal package. Please try again.";
var CHECKBOXES_UNCHECKED_ERROR = "At least one check box is required to be checked to generate submittal package.";
/*********************
//** JQUERY WAY OF DOING
//jQuery("input[name='chkReferenceRow'][rowIndex='" + rowId + "']").prop('checked', false);
//jQuery("input[name='chkSubmittalSheetsHeader']").prop('checked', false);

//    //jQuery("input[rowIndex='" + rowId + "']").prop('checked', true);
//else {
//    jQuery("input[rowIndex='" + rowId + "']").prop('checked', false);
//    jQuery("input[rowIndex='0']").prop('checked', false);
//}

//ngAfterViewChecked() {
//    //default all checkboxes of files table to checked
//    if (this.quotePackageAttachedFiles.length > 0)
//        jQuery("input[name='chkAllAttachedFiles']").prop('checked', true);

//    jQuery("#attachedfiles_table tbody tr td input[name=chkFileRow]").prop('checked', true);
//}
***/ ///////
/****
DELETE AFTER THREE MONTHS by 03/01/2019

//Array.prototype.forEach.call(checkBoxList, function (value, index) {
//    if ((value.name == "chkBoxReferenceRow" && (parseInt(value.attributes.rowIndex.value) === rowId))
//            || (value.name == "chkInstallationManualHeader")) {
//        value.checked = false;
//    }
//});//

//Array.prototype.forEach.call(checkBoxList, function (value, index) {
//    if ((value.name == "chkBoxReferenceRow" && (parseInt(value.attributes.rowIndex.value) === rowId))
//            || (value.name == "chkOperationManualHeader")) {
//        value.checked = false;
//    }
//});

 //Array.prototype.forEach.call(checkBoxList, function (value, index) {
//    if ((value.name == "chkBoxReferenceRow" && (parseInt(value.attributes.rowIndex.value) === rowId))
//            || (value.name == "chkGuideSpecsHeader")) {
//        value.checked = false;
//    }
//});
 
//Array.prototype.forEach.call(checkBoxList, function (value, index) {
//    if (value.name == "chkBoxSubmittalSheetsRow") {
//        if (event.target.checked)
//            value.checked = true;
//        else
//            value.checked = false;
//    }
//});

//Array.prototype.forEach.call(checkBoxList, function (value, index) {
//    if (value.name == "chkBoxInstallationManualRow") {
//        if (event.target.checked) {
//            value.checked = true;
//        } else {
//            value.checked = false;
//        }
//    }
//});

//Array.prototype.forEach.call(checkBoxList, function (value, index) {
//    if (value.name == "chkBoxOperationManualRow") {
//        if (event.target.checked) {
//            value.checked = true;
//        } else {
//            value.checked = false;
//        }
//    }
//});

****/


/***/ }),

/***/ "./src/app/submittal/components/submittal-package.component.css":
/***/ (function(module, exports) {

module.exports = "\r\n\r\n.container-fluid {\r\n    background-color: #fff;\r\n    width: 97%;\r\n    margin-left: 30px;\r\n    padding-left: 0px;\r\n    padding-right: 0px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n}\r\n\r\n\r\n.breadcrumbs {\r\n    color: rgb(51, 51, 51);\r\n    display: block;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    list-style-type: disc;\r\n    margin-bottom: 10px;\r\n    margin-top: 0px;\r\n    padding-bottom: 0px;\r\n    padding-left: 10px;\r\n    padding-right: 0px;\r\n    padding-top: 10px;\r\n    -webkit-text-size-adjust: 100%;\r\n       -moz-text-size-adjust: 100%;\r\n        -ms-text-size-adjust: 100%;\r\n            text-size-adjust: 100%;\r\n}\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/submittal/components/submittal-package.component.html":
/***/ (function(module, exports) {

module.exports = " \r\n\r\n<project-tabs [user]=\"user\"></project-tabs>\r\n<div id=\"main-container\" class=\"container-fluid\">\r\n    \r\n    <div class=\"main-content\">\r\n        <ul class=\"breadcrumbs\">\r\n            <li><a href=\"/v3/#/projects\">Projects</a></li>\r\n            <li><a href=\"/v3/#/project/{{quote.projectId}}\">{{quote.project.name}}</a></li>\r\n            <li><a href=\"/v3/#/quote/{{quote.quoteId}}/existingRecord\">{{quote.title}}</a></li>\r\n            <li>Submittal package</li>\r\n        </ul>        \r\n        \r\n        <!--<div *ngIf=\"quoteItemsList.length > 0\">-->\r\n            <quote-package-grid [userModel]=\"user\"\r\n                                [possibleDocsList]=\"possibleDocsList\"\r\n                                [quoteItemsList]=\"quoteItemsList\"\r\n                                [quotePackageAttachedFiles]=\"quotePackageAttachedFiles\"\r\n                                [quoteId]=\"quote.quoteId\"\r\n                                [projectId]=\"quote.projectId\"\r\n                                [hasAttachedFiles]=\"hasAttachedFiles\">\r\n            </quote-package-grid>\r\n        <!--</div>-->\r\n        \r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/submittal/components/submittal-package.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var submittal_package_service_1 = __webpack_require__("./src/app/submittal/services/submittal-package.service.ts");
var SubmittalPackageComponent = /** @class */ (function () {
    function SubmittalPackageComponent(router, route, http, submittalPackageSvc) {
        this.router = router;
        this.route = route;
        this.http = http;
        this.submittalPackageSvc = submittalPackageSvc;
        this.hasAttachedFiles = false;
        this.quoteItemsList = [];
        this.quotePackageAttachedFiles = [];
        //array of column headers that could be repeated across as td 
        this.possibleDocsList = [
            { colId: 2, name: "submittalSheets", inputname: "chkSubmittalSheetsHeader", label: "Submittal Sheets" },
            { colId: 3, name: "installationManual", inputname: "chkInstallationManualHeader", label: "Installation Manual" },
            { colId: 4, name: "operationManual", inputname: "chkOperationManualHeader", label: "Operation Manual" },
            { colId: 5, name: "guideSpecs", inputname: "chkGuideSpecsHeader", label: "Guide Specs" },
            { colId: 6, name: "productBrochure", inputname: "chkProductBrochureHeader", label: "Product Brochure" },
            { colId: 7, name: "revitDrawing", inputname: "chkRevitDrawingHeader", label: "Revit Drawing" },
            { colId: 8, name: "cadDrawing", inputname: "chkCadDrawingHeader", label: "CAD Drawing" },
            { colId: 9, name: "productFlyer", inputname: "chkProductFlyerHeader", label: "Product Flyer" },
        ];
        this.action = this.route.snapshot.url[0].path;
        this.user = this.route.snapshot.data['currentUser'].model;
        this.quote = this.route.snapshot.data['quoteModel'].model;
    }
    SubmittalPackageComponent.prototype.ngOnInit = function () {
        this.loadItems();
    };
    SubmittalPackageComponent.prototype.loadItems = function () {
        var _this = this;
        return this.submittalPackageSvc.getQuotePackage(this.quote.quoteId)
            .subscribe(function (data) {
            _this.quoteItemsList = data.items;
            _this.quotePackageAttachedFiles = data.quotePackageAttachedFiles;
            if (_this.quotePackageAttachedFiles.length > 0)
                _this.hasAttachedFiles = true;
            //loop through again to set the values and ids for checkboxes
            _this.quoteItemsList.forEach(function (quote, index) {
                //configured items
                if (quote.lineItemTypeId === 2) {
                    quote.hasSubmittalSheets = true;
                    if (quote.documents.length > 0) {
                        quote.documents.forEach(function (doc, index) {
                            quote.submittalSheetsDocId = doc.productId + "-" + doc.documentTypeId;
                            quote.submittalSheetUrl = doc.url;
                        });
                    }
                }
                else {
                    if (quote.documents.length > 0) {
                        //back-end might send documenttypeid that is not needed to show in UI like Dimensional Drawing 100000010
                        var quoteWithRequiredDocumentLinks = quote.documents.filter(function (item) {
                            return (item.documentTypeId === 100000000) ||
                                (item.documentTypeId === 100000001) ||
                                (item.documentTypeId === 100000002) ||
                                (item.documentTypeId === 100000003) ||
                                (item.documentTypeId === 100000008) ||
                                (item.documentTypeId === 100000009) ||
                                (item.documentTypeId === 100000011) ||
                                (item.documentTypeId === 100000012);
                        });
                        if (quoteWithRequiredDocumentLinks.length > 0) {
                            quoteWithRequiredDocumentLinks.forEach(function (doc, index) {
                                //set values for each checkboxes/document links
                                //Submittal Sheets 
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000008) {
                                    quote.hasSubmittalSheets = true;
                                    quote.submittalSheetsDocObj = doc;
                                    if (quote.submittalSheetsDocObj != null) {
                                        quote.submittalSheetsDocId =
                                            quote.submittalSheetsDocObj.productId + "-" + quote.submittalSheetsDocObj.documentTypeId;
                                        quote.submittalSheetUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //Installation Manual
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000002) {
                                    quote.hasInstallationManual = true;
                                    quote.installationManualDocObj = doc;
                                    if (quote.installationManualDocObj != null) {
                                        quote.installationManualDocId =
                                            quote.installationManualDocObj.productId + "-" + quote.installationManualDocObj.documentTypeId;
                                        quote.installationManualUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //Operation Manual
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000003) {
                                    quote.hasOperationManual = true;
                                    quote.operationManualDocObj = doc;
                                    if (quote.operationManualDocObj != null) {
                                        quote.operationManualDocId =
                                            quote.operationManualDocObj.productId + "-" + quote.operationManualDocObj.documentTypeId;
                                        quote.operationalManualUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //Guide Specs
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000009) {
                                    quote.hasGuideSpecs = true;
                                    quote.guideSpecsDocObj = doc;
                                    if (quote.guideSpecsDocObj != null) {
                                        quote.guideSpecsDocId =
                                            quote.guideSpecsDocObj.productId + "-" + quote.guideSpecsDocObj.documentTypeId;
                                        quote.guideSpecsUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //Product Brochure
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000001) {
                                    quote.hasProductBrochure = true;
                                    quote.productBrochureDocObj = doc;
                                    if (quote.productBrochureDocObj != null) {
                                        quote.productBrochureDocId =
                                            quote.productBrochureDocObj.productId + "-" + quote.productBrochureDocObj.documentTypeId;
                                        quote.productBrochureUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //Revit Drawing
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000012) {
                                    quote.hasRevitDrawing = true;
                                    quote.revitDrawingDocObj = doc;
                                    if (quote.revitDrawingDocObj != null) {
                                        quote.revitDrawingDocId =
                                            quote.revitDrawingDocObj.productId + "-" + quote.revitDrawingDocObj.documentTypeId;
                                        quote.revitDrawingUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //CAD Drawing
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000011) {
                                    quote.hasCadDrawing = true;
                                    quote.cadDrawingDocObj = doc;
                                    if (quote.cadDrawingDocObj != null) {
                                        quote.cadDrawingDocId =
                                            quote.cadDrawingDocObj.productId + "-" + quote.cadDrawingDocObj.documentTypeId;
                                        quote.cadDrawingUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                                //Product Flyer
                                if (doc.productId === quote.productId && doc.documentTypeId === 100000000) {
                                    quote.hasProductFlyer = true;
                                    quote.productFlyerDocObj = doc;
                                    if (quote.productFlyerDocObj != null) {
                                        quote.productFlyerDocId =
                                            quote.productFlyerDocObj.productId + "-" + quote.productFlyerDocObj.documentTypeId;
                                        quote.productFlyerUrl = doc.url;
                                    }
                                    quote.documents.splice(index, 1);
                                }
                            });
                        }
                    }
                }
            });
        });
    };
    SubmittalPackageComponent = __decorate([
        core_1.Component({
            selector: 'submittal-package',
            template: __webpack_require__("./src/app/submittal/components/submittal-package.component.html"),
            styles: [__webpack_require__("./src/app/submittal/components/submittal-package.component.css")]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            http_1.Http, submittal_package_service_1.SubmittalPackageService])
    ], SubmittalPackageComponent);
    return SubmittalPackageComponent;
}());
exports.SubmittalPackageComponent = SubmittalPackageComponent;


/***/ }),

/***/ "./src/app/submittal/components/upload-files-modal.component.css":
/***/ (function(module, exports) {

module.exports = ".modal {\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-flex: 1;\r\n        -ms-flex: 1;\r\n            flex: 1;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.15);\r\n    z-index: 42;\r\n} \r\n\r\n.modal.in {\r\n    opacity: 1;\r\n} \r\n\r\n.modal-header {\r\n    padding: 5px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    height: 30px;\r\n} \r\n\r\n.modal-header .close {\r\n    margin-top: -2px;\r\n    margin-right: 10px;\r\n} \r\n\r\nbutton.close {\r\n    -webkit-appearance: none;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    background: 0 0;\r\n    border: 0;\r\n    height: 20px;\r\n    font-weight: bolder;\r\n} \r\n\r\n.header-label { \r\n    padding-left: 10px;\r\n} \r\n\r\n.modal-body {\r\n    position: relative;\r\n    padding: 15px;\r\n} \r\n\r\n.k-upload .k-dropzone {\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    position: relative;\r\n    border-width: 0;\r\n    background-color: transparent;\r\n    height: 80px;\r\n} \r\n\r\n.k-upload .k-dropzone .k-upload-status {\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    position: absolute;\r\n    padding: 4px 8px;\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n    line-height: 1.42857;\r\n    top: 5%;\r\n    right: 35%;\r\n} \r\n\r\n.kendo-upload-button {\r\n    min-width: 7em;\r\n    margin: 8px;\r\n    width: 250px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n} \r\n\r\n/*.k-upload-button {\r\n    position: relative;\r\n    overflow: hidden;\r\n    direction: ltr;\r\n}*/ \r\n\r\n.k-button {\r\n    /* border-radius: 2px; */\r\n    padding: 4px 8px;\r\n    /* box-sizing: border-box; */\r\n    /* border-width: 1px; */\r\n    /* border-style: solid; */\r\n    font-size: 14px;\r\n    line-height: 1.42857;\r\n    text-align: justify;\r\n    text-decoration: underline;\r\n    white-space: nowrap;\r\n    /* display: inline-flex; */\r\n    -webkit-box-align: stretch;\r\n        -ms-flex-align: stretch;\r\n            align-items: stretch;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    vertical-align: text-top;\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n    cursor: pointer;\r\n    outline: none;\r\n    -webkit-appearance: none;\r\n    position: relative;\r\n    color: blue;\r\n} \r\n\r\n.modal-footer {\r\n    padding: 15px;\r\n    text-align: right;\r\n    border-top: 1px solid #e5e5e5;\r\n    height: 25px;\r\n} \r\n\r\nbutton.close {\r\n    -webkit-appearance: none;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    background: 0 0;\r\n    border: 0; \r\n    font-weight: bolder;\r\n} \r\n\r\n.k-button .k-upload-button {\r\n    min-width: 7em;\r\n    margin: 8px;\r\n    width: 250px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}"

/***/ }),

/***/ "./src/app/submittal/components/upload-files-modal.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal fade\"\r\n     role=\"dialog\"\r\n     tabindex=\"-1\"\r\n     [class.in]=\"visibleAnimate\"  \r\n     *ngIf=\"visible\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <ng-container *ngTemplateOutlet=\"header\"></ng-container>\r\n                <h4>\r\n                    <span><label class=\"header-label\">{{title}}</label></span>\r\n                    <span>\r\n                        <button class=\"close\" data-dismiss=\"modal\"\r\n                                type=\"button\" aria-label=\"Close\" (click)=\"close()\">×</button>\r\n                    </span>\r\n                </h4>\r\n            </div>  \r\n            <div class=\"modal-body\">\r\n                <ng-container *ngTemplateOutlet=\"body\"></ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <ng-container *ngTemplateOutlet=\"footer\"></ng-container>\r\n                <span><button class=\"button-ok\" data-dismiss=\"modal\" type=\"button\" \r\n                              aria-label=\"Close\" (click)=\"close()\">Ok</button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n "

/***/ }),

/***/ "./src/app/submittal/components/upload-files-modal.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var submittal_package_service_1 = __webpack_require__("./src/app/submittal/services/submittal-package.service.ts");
var UploadFilesModalComponent = /** @class */ (function () {
    function UploadFilesModalComponent(elementRef, changeDetectorRef, submittalService) {
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this.submittalService = submittalService;
        this.closeOnOutsideClick = true;
        this.notifyParent = new core_1.EventEmitter();
        this.visible = false;
        this.visibleAnimate = false;
    }
    UploadFilesModalComponent.prototype.ngOnInit = function () {
        this.quoteValue = this.quoteIdentifier;
    };
    UploadFilesModalComponent.prototype.ngOnDestroy = function () {
        this.close();
    };
    UploadFilesModalComponent.prototype.open = function () {
        var _this = this;
        document.body.classList.add('modal-open');
        this.visible = true;
        setTimeout(function () {
            _this.visibleAnimate = true;
        });
    };
    UploadFilesModalComponent.prototype.close = function () {
        var _this = this;
        document.body.classList.remove('modal-open');
        this.visibleAnimate = false;
        setTimeout(function () {
            _this.visible = false;
            _this.changeDetectorRef.markForCheck();
        }, 200);
        if (jQuery(".k-upload-files").length > 0) {
            this.submittalService.getAttachedFiles(this.quoteValue)
                .subscribe(function (data) {
                console.log(data);
                _this.attachedFiles = data;
                _this.notifyParent.emit(_this.attachedFiles);
            });
        }
    };
    UploadFilesModalComponent.prototype.onContainerClicked = function (event) {
        if (event.target.classList.contains('modal') && this.isTopMost() && this.closeOnOutsideClick) {
            this.close();
        }
    };
    UploadFilesModalComponent.prototype.onKeyDownHandler = function (event) {
        // If ESC key and TOP MOST modal, close it.
        if (event.key === 'Escape' && this.isTopMost()) {
            this.close();
        }
    };
    /**
     * Returns true if this modal is the top most modal.
     */
    UploadFilesModalComponent.prototype.isTopMost = function () {
        return !this.elementRef.nativeElement.querySelector(':scope modal > .modal');
    };
    UploadFilesModalComponent.prototype.ngAfterViewChecked = function () {
        jQuery(".k-upload .k-dropzone").css("height", "100px");
        //jQuery(".k-button .k-upload-button").css({ "width": "250px", "position": "absolute", "left": "0", "top": "0" });
    };
    __decorate([
        core_1.ContentChild('modalHeader'),
        __metadata("design:type", core_1.TemplateRef)
    ], UploadFilesModalComponent.prototype, "header", void 0);
    __decorate([
        core_1.ContentChild('modalBody'),
        __metadata("design:type", core_1.TemplateRef)
    ], UploadFilesModalComponent.prototype, "body", void 0);
    __decorate([
        core_1.ContentChild('modalFooter'),
        __metadata("design:type", core_1.TemplateRef)
    ], UploadFilesModalComponent.prototype, "footer", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], UploadFilesModalComponent.prototype, "closeOnOutsideClick", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], UploadFilesModalComponent.prototype, "title", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], UploadFilesModalComponent.prototype, "quoteIdentifier", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], UploadFilesModalComponent.prototype, "notifyParent", void 0);
    __decorate([
        core_1.HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [MouseEvent]),
        __metadata("design:returntype", void 0)
    ], UploadFilesModalComponent.prototype, "onContainerClicked", null);
    __decorate([
        core_1.HostListener('document:keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], UploadFilesModalComponent.prototype, "onKeyDownHandler", null);
    UploadFilesModalComponent = __decorate([
        core_1.Component({
            selector: 'upload-files-modal',
            template: __webpack_require__("./src/app/submittal/components/upload-files-modal.component.html"),
            styles: [__webpack_require__("./src/app/submittal/components/upload-files-modal.component.css")]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef,
            core_1.ChangeDetectorRef,
            submittal_package_service_1.SubmittalPackageService])
    ], UploadFilesModalComponent);
    return UploadFilesModalComponent;
}());
exports.UploadFilesModalComponent = UploadFilesModalComponent;


/***/ }),

/***/ "./src/app/submittal/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/submittal/components/upload-files-modal.component.ts"));
__export(__webpack_require__("./src/app/submittal/components/submittal-package.component.ts"));
__export(__webpack_require__("./src/app/submittal/components/quote-package-grid.component.ts"));
__export(__webpack_require__("./src/app/submittal/components/attached-files.component.ts"));
__export(__webpack_require__("./src/app/submittal/services/submittal-package.service.ts"));


/***/ }),

/***/ "./src/app/submittal/models/submittal-package.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SubmittalPackageModel = /** @class */ (function () {
    function SubmittalPackageModel() {
        this.name = "";
        this.fileName = "";
        this.description = "";
        this.order = "";
        this.addToQuote = false;
        this.accessUrl = "";
        this.clickable = false;
        this.downloadable = false;
        this.projectName = "";
    }
    return SubmittalPackageModel;
}());
exports.SubmittalPackageModel = SubmittalPackageModel;


/***/ }),

/***/ "./src/app/submittal/services/submittal-package.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var base_error_handler_service_1 = __webpack_require__("./src/app/shared/services/base-error-handler.service.ts");
var SubmittalPackageService = /** @class */ (function (_super) {
    __extends(SubmittalPackageService, _super);
    function SubmittalPackageService(http, toastrService) {
        var _this = _super.call(this, toastrService) || this;
        _this.http = http;
        _this.toastrService = toastrService;
        _this.headers = new http_1.Headers({ 'Content-Type': 'application/json' });
        _this.options = new http_1.RequestOptions({ headers: _this.headers });
        _this.downloadHeaders = new http_1.Headers();
        _this.downloadOptions = new http_1.RequestOptions({
            //method: RequestMethod.Post,
            responseType: http_1.ResponseContentType.Blob,
            headers: _this.downloadHeaders
        });
        return _this;
        //console.log('Submittal Package Service Initialized...');
    }
    SubmittalPackageService.prototype.getQuotePackage = function (quoteId) {
        var data = this.http.get("/api/SubmittalPackage/GetQuotePackage?quoteId=" + quoteId)
            .map(this.extractData)
            .catch(this.handleError);
        return data;
    };
    SubmittalPackageService.prototype.getAttachedFiles = function (quoteId) {
        var data = this.http.get("/api/SubmittalPackage/GetAttachedFiles?quoteId=" + quoteId)
            .map(function (res) { return res.json().model; })
            .catch(this.handleError);
        return data;
    };
    SubmittalPackageService.prototype.createQuotePackage = function (model) {
        this.apiUrl = "/api/SubmittalPackage/QuotePackageCreate";
        return this.http.post(this.apiUrl, model, this.downloadOptions)
            .map(function (res) {
            return res;
        })
            .share()
            .catch(this.handleError);
    };
    SubmittalPackageService.prototype.deleteFile = function (model) {
        this.apiUrl = "/api/SubmittalPackage/QuotePackageDeleteAttachFile";
        var headers = new http_1.Headers();
        var options = new http_1.RequestOptions({ headers: headers });
        return this.http.post(this.apiUrl, model, options)
            .map(function (response) { return response.json(); })
            .catch(function (error) { return Observable_1.Observable.throw(error); });
    };
    SubmittalPackageService.prototype.extractData = function (res) {
        var body = res.json().model;
        return body || null;
    };
    SubmittalPackageService.prototype.handleError = function (error) {
        console.log(error);
        this.toastrService.Error(error.statusText);
        return Observable_1.Observable.throw(error.statusText);
    };
    SubmittalPackageService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.Http, toastr_service_1.ToastrService])
    ], SubmittalPackageService);
    return SubmittalPackageService;
}(base_error_handler_service_1.BaseErrorHandlerService));
exports.SubmittalPackageService = SubmittalPackageService;
/* .map((res) => {
     //return res.json();
     if (res.status == 400) {
         return "FAILURE";
     } else if (res.status == 200) {
         //var contentType = 'application/zip';
         //var blob = new Blob([(<any>res)._body], { type: contentType });
         //return blob;

         var blob = new Blob([this.str2bytes(res['_body'])], { type: "application/zip" });

        // let blob = res.blob();
         let filename = 'abcd.zip';
         //FileSaver.default(blob, filename);
             //FileSaver.saveAs(blob, "");
         //navigator.msSaveBlob(, filename);
     }
 })
 .catch(this.handleError) */ 


/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.css":
/***/ (function(module, exports) {

module.exports = ".configToolLabel {\r\n    font-weight: bold;\r\n}\r\n\r\n.configToolRow {\r\n    /*margin-top: 10px;\r\n    margin-bottom: 10px;*/\r\n}\r\n\r\n/*fix extra space on kendo grid*/\r\n\r\n/*#matchup-master-grid, #matchup-detail-grid {\r\n    border-width: 0px;\r\n}*/\r\n\r\n/* systemConfig tab bar */\r\n\r\n.systemConfig-tab-bar {\r\n    /*margin:0 30px 18px 30px;*/\r\n    list-style-type: none;\r\n    display: block;\r\n    padding: 0;\r\n    border-bottom: 4px solid #007FCC;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n\r\n.systemConfig-tab-bar li {\r\n        display: inline-block;\r\n        /*text-transform: uppercase;*/\r\n        color: #000;\r\n        cursor: pointer;\r\n        /*-moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;*/\r\n    }\r\n\r\n.systemConfig-tab-bar li span, .systemConfig-tab-bar li a {\r\n            padding: 10px 20px;\r\n            display: block;\r\n            text-decoration: none;\r\n            color: inherit;\r\n        }\r\n\r\n.systemConfig-tab-bar li.active-tab, .systemConfig-tab-bar li.active-tab:hover,\r\n        .systemConfig-tab-bar li.active, .systemConfig-tab-bar li.active:hover {\r\n            color: #fff;\r\n            background-color: #007FCC;\r\n        }\r\n\r\n.systemConfig-tab-bar a.active-tab, .systemConfig-tab-bar a.active-tab:hover {\r\n        color: #fff;\r\n        background-color: #007FCC;\r\n    }\r\n\r\n.outDoorUnitCriteria {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-radius: 7px;\r\n    margin: 10px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n}\r\n"

/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.html":
/***/ (function(module, exports) {

module.exports = "<basket id=\"userBasket\" [userBasket]=\"userBasket\"></basket>\r\n<project-tabs [user]=\"user\"></project-tabs>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n        <h4>Split System Matchup</h4>\r\n        <div *ngIf=\"isAuthenticated\" id=\"splitSystemConfiguratorTool\">\r\n            <div class=\"row\" id=\"systemConfigForm\">\r\n                <!--Instructions-->\r\n                <div class=\"col col-md-3 col-xs-12\">\r\n                    <fieldset>\r\n                        <legend style=\"font-weight:bold\">INSTRUCTIONS</legend>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"UserHeaderTd\">How to use this configurator:</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">1. Select outdoor unit information</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">2. Select indoor unit information</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">3. Click \"show results\"</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">4. Before using System Configurator, please read the Terms and Conditions information.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">5. By using System Configurator, you are in agreement with all <a href=\"/SystemMatchups-Daikin/disclaimer.jsp\">Terms and Conditions</a></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">\r\n                                        <b>Note:</b><br /> If your matchup does not show up in System Configurator, it may have been archived.  You can submit a request to retrieve archived certifications by filling out a request form through AHRI, which can be accessed in the link below.  Note that additional fields will appear as you complete the form.  Please allow at least 3 business days for AHRI to process your request.<br>\r\n                                        <a href=\"https://www.ahridirectory.org/ahridirectory/pages/Techsupport/support.aspx\">https://www.ahridirectory.org</a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </fieldset>\r\n                </div>\r\n\r\n\r\n                <!--Search Form-->\r\n                <div class=\"col col-md-9 col-xs-12 form-horizontal\" style=\"font-size:small; padding-left: 50px;\">\r\n\r\n                    <fieldset>\r\n                        <legend style=\"font-weight:bold\">\r\n                            OUTDOOR UNIT\r\n                        </legend>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"row configToolRow\">\r\n                                <!--Outdoor Unit Type-->\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\">\r\n                                    <label class=\"col col-md-6 configToolLabel control-label\" for=\"outDoorUnitTypeDDL\">Unit Type:<font color=\"red\">*</font></label>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <select id=\"outDoorUnitTypeDDL\"></select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <!--Outdoor Unit - Search By System Needs-->\r\n                        <div class=\"row\">\r\n\r\n                            <div>\r\n                                <div style=\"padding-left:50px; color:#656565; text-decoration: underline\">UNIT CRITERIA</div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row configToolRow\">\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\">\r\n                                    <div class=\"col col-md-6 configToolLabel control-label\">Tonnage:<font color=\"red\">*</font></div>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <select id=\"tonnageDDL\"></select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                        <div class=\"col col-md-4 col-xs-12 form-group\">\r\n                            <!--Temporary disabled-->\r\n                            <!--<div class=\"col col-md-6 configToolLabel control-label\">Voltage:</div>\r\n                            <div class=\"col col-md-6\">\r\n                                <kendo-dropdownlist [data]=\"voltageOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                    [(ngModel)]=\"voltage\">\r\n                                </kendo-dropdownlist>\r\n                            </div>-->\r\n                        </div>\r\n                    </div>\r\n                    <div [hidden]=\"tonnage > 5\" class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                        <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">SEER:<font color=\"red\">*</font></div>\r\n                        <div class=\"col col-md-10 col-xs-12\">\r\n                            <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minSEER\" [(ngModel)]=\"minSEER\" style=\"width: 100px\" /></span>\r\n                            <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxSEER\" [(ngModel)]=\"maxSEER\" style=\"width: 100px\" /></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                            <div *ngIf=\"tonnage > 5\" class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">IEER:<font color=\"red\">*</font></div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minIEER\" [(ngModel)]=\"minIEER\" style=\"width: 100px\" /></span>\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxIEER\" [(ngModel)]=\"maxIEER\" style=\"width: 100px\" /></span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">EER:</div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minEER\" [(ngModel)]=\"minEER\" style=\"width: 100px\" /></span>\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxEER\" [(ngModel)]=\"maxEER\" style=\"width: 100px\" /></span>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\" *ngIf=\"outDoorUnitType == 'hp'\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">HSPF:</div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minHSPF\" [(ngModel)]=\"minHSPF\" style=\"width: 100px\" /></span>\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxHSPF\" [(ngModel)]=\"maxHSPF\" style=\"width: 100px\" /></span>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow\">\r\n                                <div class=\"col col-md-4  col-xs-12 form-group\">\r\n                                    <div class=\"col col-md-6 col-xs-12 configToolLabel control-label\">TXV:</div>\r\n                                    <div class=\"col col-md-6 col-xs-12\">\r\n                                        <kendo-dropdownlist [data]=\"txvOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                            [(ngModel)]=\"txv\">\r\n                                        </kendo-dropdownlist>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow\">\r\n                                <div class=\"col col-md-4  col-xs-12 form-group\">\r\n                                    <div class=\"col col-md-6 col-xs-12 configToolLabel control-label\">Status:</div>\r\n                                    <div class=\"col col-md-6 col-xs-12\">\r\n                                        <kendo-dropdownlist [data]=\"statusOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                            [(ngModel)]=\"status\">\r\n                                        </kendo-dropdownlist>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--</fieldset>-->\r\n\r\n\r\n                        </div>\r\n                    </fieldset>\r\n\r\n\r\n                    <!--Indoor Unit - Search By System Needs-->\r\n                    <div>\r\n                        <fieldset>\r\n                            <legend style=\"font-weight:bold\">\r\n                                INDOOR UNIT\r\n                            </legend>\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">Unit Type:<font color=\"red\">*</font></div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <div class=\"row\">\r\n                                        <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"coilOnly\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Coil(only)</span>\r\n                                        <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"airHandler\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Air Handler</span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </fieldset>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <!--Show result/ reset-->\r\n                    <div class=\"form-group\">\r\n                        <div class=\"pull-right\">\r\n                            <button id=\"showResultBtn\" type=\"submit\" class=\"btn btn-primary\" (click)=\"getResult()\">Show Result</button>\r\n                            <button id=\"resetBtn\" class=\"btn btn-default\" (click)=\"reset()\">Reset</button>\r\n\r\n                            <!--<button id=\"testBtn\" class=\"btn btn-default\" (click)=\"getEqModelList()\">Test</button>-->\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div id=\"splitMatchupResultGrid\">\r\n                <split-matchup-master-grid *ngIf=\"matchupResult\" [matchupResult]=\"matchupResult\" [indoorUnitType]=\"indoorUnitType\" [outDoorUnitType]=\"outDoorUnitType\" [userBasket]=\"userBasket\"></split-matchup-master-grid>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var lc_split_matchup_service_1 = __webpack_require__("./src/app/tools/services/lc-split-matchup.service.ts");
//import { SortDescriptor } from '@progress/kendo-data-query';
var LCSplitMatchupComponent = /** @class */ (function () {
    //public testListItems: Array<string> = ["Baseball", "Basketball", "Cricket", "Field Hockey", "Football", "Table Tennis", "Tennis", "Volleyball"];
    function LCSplitMatchupComponent(router, route, toastrSvc, userSvc, productSvc, basketSvc, lcMatchupServiceSvc) {
        this.router = router;
        this.route = route;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.lcMatchupServiceSvc = lcMatchupServiceSvc;
        this.voltage = { text: "No Preference", value: "" };
        this.voltageOptions = [{ text: "No Preference", value: "" },
            { "text": "208/230", value: "208/230" },
            { "text": "460", value: "460" }];
        this.txv = { text: "No Preference", value: "T" };
        this.txvOptions = [{ "text": "Yes", value: "Y" },
            { "text": "No", value: "N" },
            { "text": "No Preference", value: "T" }];
        this.status = { text: "No Preference", value: "S" };
        this.statusOptions = [{ "text": "Active", value: "Y" },
            { "text": "Discontinued", value: "N" },
            { "text": "No Preference", value: "S" }];
        //Dropdownlist options
        this.defaultItem = { "text": "Select...", value: null };
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    LCSplitMatchupComponent.prototype.ngOnChanges = function () {
        //console.log("split system config: OnChange");
    };
    LCSplitMatchupComponent.prototype.ngOnInit = function () {
        //console.log("split system config: OnInit");
        var _this = this;
        this.userSvc.isAuthenticated().then(function (resp) {
            if (resp.isok && resp.model == true) {
                _this.isAuthenticated = true;
            }
            else {
                //Go back to login page
                window.location.href = "/v3/#/account/login";
            }
        });
        this.basketSvc.getBasket().then(this.getBasketCallback.bind(this));
        //wait until elements are available
        setTimeout(this.setupDefaults.bind(this), 200); // wait 0.2 sec
        //set up active tab
        jQuery(".systemConfig-tab-bar li").click(function () {
            jQuery(this).addClass('active-tab').siblings().removeClass('active-tab');
        });
    };
    //ngDoCheck() {
    //}
    LCSplitMatchupComponent.prototype.ngAfterContentInit = function () {
        //console.log("system config: AfterContentInit");
        //setTimeout(function () {
        //    $('#userBasket').insertBefore('#projectTabs');
        //}, 1000);
    };
    LCSplitMatchupComponent.prototype.ngAfterViewChecked = function () {
        //console.log("split system config: AfterViewChecked");
    };
    LCSplitMatchupComponent.prototype.getBasketCallback = function (resp) {
        if (resp.isok) {
            this.userBasket = resp.model;
            this.basketSvc.userBasket = resp.model;
            jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
        }
    };
    LCSplitMatchupComponent.prototype.ngOnDestroy = function () {
        //$('#content > #userBasket').remove();
        ////reset session["BasketQuoteId"] = 0
        //this.productSvc.resetBasketQuoteId();
        //console.log("system config: OnDestroy");
    };
    LCSplitMatchupComponent.prototype.setupDefaults = function () {
        //this.model = "N";
        this.setupRadioButtons();
        this.setupDropDownLists();
        this.minSEER = "13";
        this.maxSEER = null;
        this.minEER = null;
        this.maxEER = null;
        this.minHSPF = null;
        this.maxHSPF = null;
        jQuery('#minSEER').removeProp('readonly');
        jQuery('#minEER').removeProp('readonly');
        this.resetIndoorUnit();
        //this.outdoorModelNumber = null;
    };
    LCSplitMatchupComponent.prototype.reset = function () {
        this.setupDefaults();
        //$("#searchBySystemNeeds").addClass('active-tab');
        //$("#searchByModelNumber").removeClass('active-tab');
    };
    LCSplitMatchupComponent.prototype.validateInput = function () {
        var isValidated = true;
        if (this.tonnage == null || this.tonnage == "null") {
            this.toastrSvc.ErrorFadeOut("Tonnage is required.");
            isValidated = false;
        }
        if (this.minSEER == null) {
            this.toastrSvc.ErrorFadeOut("Min SEER is required.");
            isValidated = false;
        }
        if (this.coil == null && this.airHandler == null) {
            this.toastrSvc.ErrorFadeOut("Indoor Unit Type is required.");
            isValidated = false;
        }
        return isValidated;
    };
    LCSplitMatchupComponent.prototype.getResult = function () {
        var _this = this;
        var self = this;
        if (this.validateInput()) {
            var params = this.mapInputToParams();
            this.blockUI.start('Loading...');
            //self.loadingIconSvc.Start(jQuery("#splitSystemConfiguratorTool"));
            this.lcMatchupServiceSvc.getSystemMatchupList(params).then(function (resp) {
                if (!resp.error) {
                    var result = resp.result;
                    ////this.concatResult(resp.result);
                    _this.matchupResult = result;
                    jQuery('#systemConfigForm').hide();
                    jQuery('#splitMatchupResultGrid').show();
                    _this.blockUI.stop();
                    //self.loadingIconSvc.Stop(jQuery("#splitSystemConfiguratorTool"));
                }
                else {
                    _this.blockUI.stop();
                    //self.loadingIconSvc.Stop(jQuery("#splitSystemConfiguratorTool"));
                }
            });
        }
        //this.SystemConfiguratorSvc.getSystemMatchupList(data).then(this.getSystemMatchupListCallBack.bind(this));
    };
    LCSplitMatchupComponent.prototype.concatResult = function (result) {
        var data = [];
        for (var key in result) {
            if (!result.hasOwnProperty(key))
                continue;
            var obj = result[key];
            data = data.concat(obj);
        }
        this.matchupResult = data;
        jQuery('#systemConfigForm').hide();
        jQuery('#matchupResultGrid').show();
    };
    LCSplitMatchupComponent.prototype.mapInputToParams = function () {
        var params = {
            "user": "",
            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
            "packageName": "SystemMatchupDaikinSplSt",
            "servicesName": "doGetSystemMatchupList",
            "accountId": "goodman1",
            "params": {
                "type": this.outDoorUnitType,
                "tonnage": this.tonnage,
                "voltage": this.voltage.value,
                "min_seer": this.minSEER,
                "max_seer": this.maxSEER,
                "min_ieer": this.minIEER,
                "max_ieer": this.maxIEER,
                "min_eer": this.minEER,
                "max_eer": this.maxEER,
                "min_hspf": this.minHSPF,
                "max_hspf": this.maxHSPF,
                "txv": this.txv.value,
                "status": this.status.value,
                "coil": this.coil,
                "airhandler": this.airHandler
            }
        };
        return params;
    };
    LCSplitMatchupComponent.prototype.getTonnageList = function () {
    };
    LCSplitMatchupComponent.prototype.getEqModelList = function () {
    };
    LCSplitMatchupComponent.prototype.setupDropDownLists = function () {
        this.outDoorUnitTypes = [
            { "text": "Air Conditioner", value: "ac" },
            { "text": "Heat Pump", value: "hp" }
        ];
        var self = this;
        jQuery("#outDoorUnitTypeDDL").kendoDropDownList({
            dataSource: self.outDoorUnitTypes,
            dataTextField: "text",
            dataValueField: "value",
            change: function (e) {
                var value = this.value();
                self.outDoorUnitType = value;
                //if (self.model == "N") {
                //    self.ceeTier = "b4";
                //    self.onCEETierChange();
                //}      
            }
        });
        var outDoorUnitTypeDDL = jQuery("#outDoorUnitTypeDDL").data("kendoDropDownList");
        outDoorUnitTypeDDL.select(0);
        outDoorUnitTypeDDL.trigger("change");
        //setTimeout(self.setupCeeTierDDL.bind(self), 200);
        //setTimeout(self.setupRegionDLL.bind(self), 200);
        setTimeout(self.setupTonnageDDL.bind(self), 200);
    };
    LCSplitMatchupComponent.prototype.setupTonnageDDL = function () {
        var self = this;
        this.lcMatchupServiceSvc.getTonnageList().then(function (resp) {
            if (resp) {
                var tonnageList = resp.result.tonnageList;
                //debugger
                var tonnageListDataSrc = [];
                for (var i in tonnageList) {
                    var obj = {
                        "text": tonnageList[i],
                        "value": tonnageList[i]
                    };
                    //debugger
                    tonnageListDataSrc.push(obj);
                }
                if (jQuery("#tonnageDDL").length > 0) {
                    jQuery("#tonnageDDL").kendoDropDownList({
                        dataSource: tonnageListDataSrc,
                        dataTextField: "text",
                        dataValueField: "value",
                        optionLabel: {
                            text: "Select ...",
                            value: null
                        },
                        change: function (e) {
                            var value = this.value();
                            self.tonnage = value;
                            //debugger
                        }
                    });
                    //debugger
                    var tonnageDDL = jQuery("#tonnageDDL").data("kendoDropDownList");
                    tonnageDDL.select(0);
                    tonnageDDL.trigger("change");
                }
            }
        });
    };
    LCSplitMatchupComponent.prototype.setupRadioButtons = function () {
        //this.model = "N";
        //this.ceeTier = "b4";
        this.txv.value = "T";
        this.status.value = "S";
    };
    LCSplitMatchupComponent.prototype.resetIndoorUnit = function () {
        //this function get called before value is bound to model
        this.coil = null;
        //this.furnace = null;
        //this.minAFUE = { text: "Select ...", value: null };
        //this.maxAFUE = { text: "Select ...", value: null };
        //this.flushfit = null;
        this.airHandler = null;
        this.indoorUnitType = null;
    };
    LCSplitMatchupComponent.prototype.indoorUnitTypeOnChange = function () {
        //reset
        this.coil = null;
        //this.furnace = null;
        //this.minAFUE = { text: "Select ...", value: null };
        //this.maxAFUE = { text: "Select ...", value: null };
        //this.flushfit = null;
        this.airHandler = null;
        if (this.indoorUnitType == 'coilOnly') {
            this.coil = 'coil';
        }
        //if (this.indoorUnitType == 'furnaceCoil') {
        //    this.furnace = 'furnace'
        //}
        if (this.indoorUnitType == 'airHandler') {
            this.airHandler = 'airhandler';
        }
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], LCSplitMatchupComponent.prototype, "blockUI", void 0);
    LCSplitMatchupComponent = __decorate([
        core_1.Component({
            selector: 'lc-split-matchup',
            template: __webpack_require__("./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.html"),
            styles: [__webpack_require__("./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.css")]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute, toastr_service_1.ToastrService,
            user_service_1.UserService,
            product_service_1.ProductService, basket_service_1.BasketService,
            lc_split_matchup_service_1.LCSplitMatchupService])
    ], LCSplitMatchupComponent);
    return LCSplitMatchupComponent;
}());
exports.LCSplitMatchupComponent = LCSplitMatchupComponent;
;


/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/split-matchup-detail-grid.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-grid id=\"split-matchup-detail-grid\" *ngIf=\"matchupResultDetail\"\r\n            [data]=\"gridViewData\"\r\n            [pageSize]=\"pageSize\"\r\n            [skip]=\"skip\"\r\n            [sortable]=\"true\"\r\n            [sort]=\"sort\"\r\n            [pageable]=\"true\"\r\n            [scrollable]=\"'none'\"\r\n            (dataStateChange)=\"dataStateChange($event)\">\r\n    <kendo-grid-column field=\"arirefNumber\" title=\"AHRI\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"outdoor_Model\" title=\"Outdoor Model\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'coilOnly'\" field=\"coill_Model\" title=\"Coil\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'airHandler'\" field=\"coill_Model\" title=\"Coil/AirHandler\"></kendo-grid-column>\r\n   \r\n\r\n    <!--Blower-->\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'airHandler'\" field=\"blower_Model\" title=\"Blower\"></kendo-grid-column>\r\n\r\n\r\n    <kendo-grid-column field=\"tonnage\" title=\"Tonnage\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType != 'pkg'\" field=\"txv\" title=\"TXV/Piston\"></kendo-grid-column>\r\n\r\n    <!--Add To Quote-->\r\n    <kendo-grid-column *ngIf=\"userBasket.quoteId != 0 && userBasket.quoteId != undefined\" field=\"quantity\" title=\"Quantity\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span>\r\n                <input class=\"numericTextBox productQuantity\" type=\"number\" [(ngModel)]=\"dataItem.quantity\" (change)=\"validateQuantity($event)\" min=\"0\" step=\"1\" style=\"width:70px; line-height:30px; font-size:1.2em; text-align: center;\" />\r\n            </span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"userBasket.quoteId != 0 && userBasket.quoteId != undefined\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span>\r\n                <button class=\"btn btn-default\" (click)=\"addToQuote(dataItem)\">Add To Quote</button>\r\n            </span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <!-------------->\r\n\r\n    <kendo-grid-column field=\"seer\" title=\"SEER\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"eer\" title=\"EER\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"cooling\" title=\"Cooling\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"fit\" title=\"Fit\"></kendo-grid-column>\r\n   \r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"highHeat\" title=\"High Heat\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"highCop\" title=\"High COP\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"hspf\" title=\"HSPF\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"lowHeat\" title=\"Low Heat\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"lowCop\" title=\"Low COP\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"status\" title=\"Status\"></kendo-grid-column>\r\n\r\n\r\n\r\n\r\n\r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/split-matchup-detail-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
//split-matchup-detail-grid.component.ts
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var SplitMatchupDetailGridComponent = /** @class */ (function () {
    function SplitMatchupDetailGridComponent(router, toastrSvc, userSvc, productSvc, basketSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.sort = [];
        this.pageSize = 10;
        this.skip = 0;
        this.defaultItem = { text: "Select item...", value: null, fit: "N/A", afue: "N/A" };
    }
    SplitMatchupDetailGridComponent.prototype.ngOnInit = function () {
        this.loadData();
    };
    SplitMatchupDetailGridComponent.prototype.dataStateChange = function (_a) {
        var skip = _a.skip, take = _a.take, sort = _a.sort;
        this.skip = skip;
        this.pageSize = take;
        this.sort = sort;
        this.loadData();
    };
    SplitMatchupDetailGridComponent.prototype.loadData = function () {
        for (var key in this.matchupResultDetail) {
            if (!this.matchupResultDetail[key].furnace_Model) {
                this.matchupResultDetail[key].showFurnaceDDL = true;
            }
            else {
                this.matchupResultDetail[key].showFurnaceDDL = false;
            }
            //add quantity field
            if (this.matchupResultDetail.hasOwnProperty(key)) {
                this.matchupResultDetail[key].quantity = 0;
            }
        }
        if (this.matchupResultDetail != undefined) {
            this.gridViewData = {
                data: this.matchupResultDetail.slice(this.skip, this.skip + this.pageSize),
                total: this.matchupResultDetail.length
            };
        }
    };
    //public FurnaceSelected(selectedItem: any, rowIndex: any) {
    //    var fitValueCellId = "#fitValue-" + rowIndex;
    //    $(fitValueCellId).text(selectedItem.fit);
    //    var afueValueCellId = "#afueValue-" + rowIndex;
    //    $(afueValueCellId).text(selectedItem.afue);
    //}
    SplitMatchupDetailGridComponent.prototype.validateQuantity = function (event) {
        var value = parseFloat(event.target.value);
        if (value == null || isNaN(value)) {
            //this.product.quantity = 0;
            event.target.value = 0;
        }
        else if ((value < 0) || (Math.floor(value) != value)) {
            //this.product.quantity = 0;
            event.target.value = 0;
            this.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        }
    };
    SplitMatchupDetailGridComponent.prototype.addToQuote = function (item) {
        var self = this;
        var outdoorModel = item.outdoor_Model.substring(0, item.outdoor_Model.length - 2);
        var coilModel = item.coill_Model.substring(0, item.coill_Model.length - 2);
        if (item.quantity > 0) {
            self.system = {
                "ProductNumbers": [outdoorModel, coilModel],
                "Quantity": item.quantity,
                "AHRI": item.arirefNumber,
                "SEER": item.seer,
                "EER": item.eer,
                "Cooling": item.cooling,
                "Fit": item.fit,
                "AFUE": item.afue,
                "ContinueAdding": false,
                "ValidProducts": [],
                "InValidProducts": []
            };
            if (this.indoorUnitType = "airHandler") {
                if (item.blower_Model != null && item.blower_Model != "") {
                    var blowerModel = item.blower_Model.substring(0, item.blower_Model.length - 2);
                    self.system.ProductNumbers.push(blowerModel);
                }
            }
            this.addSystemToQuote(self.system);
        }
        else {
            this.toastrSvc.Info("Please enter quantity!");
        }
        item.quantity = 0;
    };
    SplitMatchupDetailGridComponent.prototype.addSystemToQuote = function (system) {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#splitSystemConfiguratorTool"));
        this.blockUI.start('Loading...');
        this.productSvc.addSystemToQuote(system).then(function (resp) {
            // self.loadingIconSvc.Stop(jQuery("#splitSystemConfiguratorTool"));
            _this.blockUI.stop();
            if (resp.isok) {
                //update basket item count
                self.basketSvc.getBasket().then(function (resp) {
                    if (resp.isok) {
                        self.basketSvc.userBasket = resp.model;
                        jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
                    }
                });
                self.toastrSvc.displayResponseMessages(resp); //all products added successfully
            }
            else {
                if (resp.model.validProducts.length > 0) {
                    var validproducts = "";
                    for (var i = 0; i < resp.model.validProducts.length; i++) {
                        if (i < resp.model.validProducts.length - 1) {
                            validproducts += resp.model.validProducts[i] + ", ";
                        }
                        else {
                            validproducts += resp.model.validProducts[i];
                        }
                    }
                    var inValidProducts = "";
                    for (var i = 0; i < resp.model.inValidProducts.length; i++) {
                        if (i < resp.model.inValidProducts.length - 1) {
                            inValidProducts += resp.model.inValidProducts[i] + ", ";
                        }
                        else {
                            inValidProducts += resp.model.inValidProducts[i];
                        }
                    }
                    bootbox.confirm("Can not find: " + inValidProducts + " <br/>Do you want continue adding " + validproducts + " to quote?", function (result) {
                        var _this = this;
                        if (result) {
                            self.system.ContinueAdding = true;
                            //Continue adding valid products
                            this.blockUI.start('Loading...');
                            //self.loadingIconSvc.Start(jQuery("#splitSystemConfiguratorTool"));
                            self.productSvc.addSystemToQuote(self.system).then(function (resp) {
                                if (resp.isok) {
                                    //update basket item count
                                    self.basketSvc.getBasket().then(function (resp) {
                                        if (resp.isok) {
                                            //self.userBasket = resp.model;
                                            self.basketSvc.userBasket = resp.model;
                                            jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
                                        }
                                    });
                                    self.toastrSvc.displayResponseMessages(resp); //products added successfully
                                }
                                _this.blockUI.stop();
                                //self.loadingIconSvc.Stop(jQuery("#splitSystemConfiguratorTool"));
                            });
                        }
                    });
                    //self.toastrSvc.displayResponseMessages(resp);// this shows invalid products
                }
                else {
                    self.toastrSvc.displayResponseMessages(resp); // All products are invalid
                }
            }
            //self.toastrSvc.displayResponseMessages(resp);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupDetailGridComponent.prototype, "matchupResultDetail", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupDetailGridComponent.prototype, "seer", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupDetailGridComponent.prototype, "indoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupDetailGridComponent.prototype, "outDoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupDetailGridComponent.prototype, "userBasket", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], SplitMatchupDetailGridComponent.prototype, "blockUI", void 0);
    SplitMatchupDetailGridComponent = __decorate([
        core_1.Component({
            selector: 'split-matchup-detail-grid',
            template: __webpack_require__("./src/app/tools/components/lc-split-matchup-tool/split-matchup-detail-grid.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], SplitMatchupDetailGridComponent);
    return SplitMatchupDetailGridComponent;
}());
exports.SplitMatchupDetailGridComponent = SplitMatchupDetailGridComponent;


/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/split-matchup-master-grid.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <button class=\"btn btn-default pull-right\" (click)=\"backToSearchPage()\" style=\"margin: 10px\">Back To Search Page</button>\r\n</div>\r\n\r\n\r\n<kendo-grid id=\"split-matchup-master-grid\" *ngIf=\"matchupResult\"\r\n            [data]=\"gridViewData\"\r\n            [pageable]=\"false\"\r\n            [scrollable]=\"'none'\">\r\n\r\n    <kendo-grid-column field=\"seer\" title=\"SEER\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <p>{{dataItem.seer}} +</p>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column field=\"numberOfItem\" title=\"Available items\"></kendo-grid-column>\r\n\r\n    <ng-template kendoGridDetailTemplate let-dataItem>\r\n        <split-matchup-detail-grid [matchupResultDetail]=\"matchupResult[dataItem.seer]\" [seer]=\"dataItem.seer\" [indoorUnitType]=\"indoorUnitType\" [outDoorUnitType]=\"outDoorUnitType\" [userBasket]=\"userBasket\"></split-matchup-detail-grid>\r\n    </ng-template>\r\n\r\n</kendo-grid>\r\n\r\n\r\n<div class=\"row\">\r\n    <button class=\"btn btn-default pull-right\" (click)=\"backToSearchPage()\" style=\"margin: 10px\">Back To Search Page</button>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/tools/components/lc-split-matchup-tool/split-matchup-master-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var SplitMatchupMasterGridComponent = /** @class */ (function () {
    function SplitMatchupMasterGridComponent(router, toastrSvc, userSvc, productSvc, basketSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.seerCategoriesData = [];
    }
    SplitMatchupMasterGridComponent.prototype.ngOnChanges = function () {
        //console.log("On Change");
        this.loadData();
    };
    SplitMatchupMasterGridComponent.prototype.ngOnInit = function () {
        //console.log("On Init");
        //this.loadData();
    };
    //public dataStateChange({ skip, take, sort }: DataStateChangeEvent): void {
    //    this.skip = skip;
    //    this.pageSize = take;
    //    this.sort = sort;
    //    this.loadData();
    //}
    SplitMatchupMasterGridComponent.prototype.loadData = function () {
        this.seerCategoriesData = []; // clear old data
        for (var key in this.matchupResult) {
            if (!this.matchupResult.hasOwnProperty(key))
                continue;
            if (this.matchupResult[key].length > 0) {
                var obj = {
                    "seer": key,
                    "numberOfItem": this.matchupResult[key].length
                };
                this.seerCategoriesData.push(obj);
            }
        }
        if (this.seerCategoriesData != undefined) {
            this.gridViewData = {
                data: this.seerCategoriesData,
                total: this.seerCategoriesData.length
            };
        }
    };
    SplitMatchupMasterGridComponent.prototype.backToSearchPage = function () {
        jQuery('#systemConfigForm').show();
        jQuery('#splitMatchupResultGrid').hide();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupMasterGridComponent.prototype, "matchupResult", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupMasterGridComponent.prototype, "indoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupMasterGridComponent.prototype, "outDoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], SplitMatchupMasterGridComponent.prototype, "userBasket", void 0);
    SplitMatchupMasterGridComponent = __decorate([
        core_1.Component({
            selector: 'split-matchup-master-grid',
            styles: ['/deep/ .k-grid th.k-header, .k-grid-header { background: #5397cf; color: #fff}'],
            template: __webpack_require__("./src/app/tools/components/lc-split-matchup-tool/split-matchup-master-grid.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService, basket_service_1.BasketService])
    ], SplitMatchupMasterGridComponent);
    return SplitMatchupMasterGridComponent;
}());
exports.SplitMatchupMasterGridComponent = SplitMatchupMasterGridComponent;


/***/ }),

/***/ "./src/app/tools/components/tool-list/tool-list.component.css":
/***/ (function(module, exports) {

module.exports = "\r\n.tool-page-header {\r\n    margin-left: 0;\r\n    font-family: \"museo-sans\",sans-serif;\r\n    font-weight: 900;\r\n    /*white-space: nowrap;*/\r\n    /*text-overflow: ellipsis;\r\n    overflow: hidden;*/\r\n    padding-bottom: 0;\r\n    font-size: 27px;\r\n    color: #00a1e4;\r\n    margin: 15px;\r\n}\r\n\r\n.tool-list {\r\n    list-style: none;\r\n    padding-bottom: 5px;\r\n    -webkit-margin-after: 10px;\r\n    -webkit-margin-before: 0px;\r\n    -webkit-margin-end: 0px;\r\n    -webkit-margin-start: 0px;\r\n    -webkit-padding-start: 0px;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n.section.form.dark {\r\n    background-color: #def5ff;\r\n    margin-right: 0px;\r\n}\r\n\r\n.col-md-2 {\r\n    width:10%;\r\n}\r\n\r\n.tool-image {\r\n    padding-left:25px;\r\n    padding-top: 20px;\r\n}\r\n\r\n.tool-name {\r\n    color: #00a1e4;\r\n    margin: 0;\r\n    padding: 15px 0 15px 0;\r\n    text-transform: uppercase;\r\n    font-family: \"museo-sans\",sans-serif;\r\n    font-size: 22px;\r\n}\r\n\r\n.tool-description {\r\n    font-size: 15px;\r\n    color: #2e3641;\r\n    line-height: 22.05px;\r\n    font-family: \"museo-sans\",sans-serif;\r\n}\r\n\r\n.tool-anchortag {\r\n    padding-bottom: 20px;\r\n    font-family: \"museo-sans\", sans-serif;\r\n    font-size: 15px;\r\n    line-height: 22.05px;\r\n}\r\n\r\na {\r\n    color: #00a1e4;\r\n    text-decoration: underline;\r\n}\r\n\r\na:focus, a:hover {\r\n    color: #00a1e4;\r\n    text-decoration: underline;\r\n}"

/***/ }),

/***/ "./src/app/tools/components/tool-list/tool-list.component.html":
/***/ (function(module, exports) {

module.exports = "<link rel=\"stylesheet\" href=\"/v3/src/assets/css/adminstyles-v2.css\" />\r\n<link rel=\"stylesheet\" href=\"/v3/src/assets/css/kendo/kendo.default.min.css\" />\r\n\r\n<project-tabs [user]=\"user\"></project-tabs>\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n        <div class=\"tab-header\">\r\n            <h3 class=\"tool-page-header\">TOOLS</h3>\r\n        </div>\r\n        <div *ngIf=\"tools.length> 0\">\r\n            <ul class=\"tool-list\" *ngFor=\"let tool of tools\">\r\n                <li class=\"section form dark\" >\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                            <a href=\"/document/Tools/{{tool.filename}}\">\r\n                                <img class=\"tool-image\" src=\"/v3/src/assets/images/tools_icon.png\" />\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <h4 class=\"tool-name\">{{tool.name}}</h4>\r\n                            <div class=\"tool-description\">{{tool.description}}</div>\r\n                            <br />\r\n                            <div class=\"tool-anchortag\">\r\n                                <span *ngIf=\"tool.clickable == true\">\r\n                                    <a style=\"padding:0;\" href=\"{{tool.accessUrl}}\"> Click here to access</a> \r\n                                </span>\r\n                                <span *ngIf=\"tool.downloadable == true\">\r\n                                    <a style=\"padding:0;\" href=\"/document/Tools/{{tool.filename}}\">Click here to download</a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/tools/components/tool-list/tool-list.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var tool_list_service_1 = __webpack_require__("./src/app/tools/services/tool-list.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var enums_1 = __webpack_require__("./src/app/shared/enums/enums.ts");
var ToolListComponent = /** @class */ (function () {
    function ToolListComponent(router, route, toolsService, userSvc, webConfigSvc, enums) {
        this.router = router;
        this.route = route;
        this.toolsService = toolsService;
        this.userSvc = userSvc;
        this.webConfigSvc = webConfigSvc;
        this.enums = enums;
        this.tools = [];
        this.user = this.route.snapshot.data['currentUser'].model;
    }
    ToolListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.webConfigSvc.getWebConfig().then(function (resp) {
            _this.webconfig = resp;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
        this.tools = this.getAllTools();
    };
    ToolListComponent.prototype.getAllTools = function () {
        var _this = this;
        return this.toolsService.getTools().subscribe(function (data) {
            _this.tools = data;
            for (var i = 0; i < _this.tools.length; i++) {
                if (_this.tools[i].accessUrl != null) {
                    _this.tools[i].clickable = true;
                    if (_this.tools[i].toolId == _this.enums.ToolAccessEnum.LCSubmittalTool) {
                        _this.tools[i].accessUrl = _this.webconfig.routeConfig.lcstURLTool +
                            "&userId=" + _this.user.userId + "&firstName=" + _this.user.firstName +
                            "&lastName=" + _this.user.lastName + "&email=" + _this.user.email;
                    }
                    if (_this.tools[i].toolId == _this.enums.ToolAccessEnum.LCSTHighEff) {
                        _this.tools[i].accessUrl = _this.webconfig.routeConfig.lcstURLHighEff + "&reqType=Tool" +
                            "&userId=" + _this.user.userId + "&firstName=" + _this.user.firstName +
                            "&lastName=" + _this.user.lastName + "&email=" + _this.user.email;
                    }
                    if (_this.tools[i].toolId == _this.enums.ToolAccessEnum.LCSTHighEffv2) {
                        _this.tools[i].accessUrl = _this.webconfig.routeConfig.lcstURLHighEffv2 + "&reqType=Tool" +
                            "&userId=" + _this.user.userId + "&firstName=" + _this.user.firstName +
                            "&lastName=" + _this.user.lastName + "&email=" + _this.user.email;
                    }
                }
                else {
                    _this.tools[i].downloadable = true;
                }
            }
        });
    };
    ToolListComponent.prototype.convertToSafeHtml = function (description) {
        return;
    };
    ToolListComponent.prototype.ngOnDestroy = function () {
    };
    ToolListComponent = __decorate([
        core_1.Component({
            selector: "tool-list",
            template: __webpack_require__("./src/app/tools/components/tool-list/tool-list.component.html"),
            styles: [__webpack_require__("./src/app/tools/components/tool-list/tool-list.component.css")],
            providers: [tool_list_service_1.ToolListService]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            tool_list_service_1.ToolListService, user_service_1.UserService,
            webconfig_service_1.WebConfigService, enums_1.Enums])
    ], ToolListComponent);
    return ToolListComponent;
}());
exports.ToolListComponent = ToolListComponent;


/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/furnaceDDL.component.html":
/***/ (function(module, exports) {

module.exports = "<kendo-dropdownlist [data]=\"furnaceList\" [textField]=\"'text'\" [valueField]=\"'value'\" [defaultItem]=\"defaultItem\" (valueChange)=\"PSCFunarceChange($event)\">\r\n    <ng-template kendoDropDownListItemTemplate let-dataItem>\r\n        <p *ngIf=\"dataItem.value == null\"><span style=\"font-weight:bold\">{{ dataItem.text }} </span></p>\r\n        <p *ngIf=\"dataItem.value != null\"><span style=\"font-weight:bold\">{{ dataItem.text }} </span> <br /> Fit:{{ dataItem.fit }} - AFUE: {{dataItem.afue}}</p>\r\n    </ng-template>\r\n</kendo-dropdownlist>\r\n"

/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/furnaceDDL.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var unitary_matchup_service_1 = __webpack_require__("./src/app/tools/services/unitary-matchup.service.ts");
var FurnaceDDLComponent = /** @class */ (function () {
    function FurnaceDDLComponent(router, toastrSvc, userSvc, productSvc, basketSvc, unitaryMatchupSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.unitaryMatchupSvc = unitaryMatchupSvc;
        //@Input() seer: any;
        //@Input() indoorUnitType: any;
        //@Input() outDoorUnitType: any;
        //@Input() userBasket: any;
        this.furnaceSelectedEvent = new core_1.EventEmitter();
        //public system: any; // system to be added to quote
        this.furnaceList = [];
        this.defaultItem = { text: "Select item...", value: null, fit: "N/A", afue: "N/A" };
    }
    FurnaceDDLComponent.prototype.ngOnInit = function () {
        var _this = this;
        var t = this.rowItem;
        var s = this.rowIndex;
        var params = this.mapParams();
        this.unitaryMatchupSvc.getEEPFurnaceList(params).then(function (resp) {
            if (!resp.error) {
                var furnaces = resp.result.eEFurnaceMatchUpList;
                for (var i in furnaces) {
                    //decode fit values
                    if (furnaces[i].fit != undefined && furnaces[i].fit != null) {
                        if (furnaces[i].fit == 0) {
                            furnaces[i].fit = "Flush";
                        }
                        else if (furnaces[i].fit == 1) {
                            furnaces[i].fit = "1.75";
                        }
                    }
                    var item = { text: furnaces[i].furnace_Model, value: furnaces[i].furnace_Model, fit: furnaces[i].fit, afue: furnaces[i].afue };
                    _this.furnaceList.push(item);
                }
            }
            else {
            }
        });
    };
    FurnaceDDLComponent.prototype.mapParams = function () {
        var params = {};
        params = {
            "user": "",
            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
            "packageName": "SystemMatchupDaikin",
            "servicesName": "doGetEEPFurnacesList",
            "accountId": "goodman1",
            "params": {
                "aRIRefNumber": this.rowItem.arirefNumber,
                "coil": this.rowItem.coill_Model,
                "coilWidth": this.rowItem.coil_Width,
                "coilValue": this.rowItem.coil_Value,
                "airFlow": this.rowItem.airFlow,
                "minAfue": this.rowItem.minAfue == undefined ? "" : this.rowItem.afue,
                "maxAfue": this.rowItem.maxAfue == undefined ? "" : this.rowItem.afue,
                "fit": this.rowItem.fit == "N/A" ? "" : this.rowItem.fit,
                "model": this.rowItem.modelNumber,
                "tonnage": this.rowItem.tonnage,
                "txv": this.rowItem.txv,
                "seer": this.rowItem.seer,
                "eer": this.rowItem.eer,
                "cooling": this.rowItem.cooling,
                "status": this.rowItem.status
            }
        };
        return params;
    };
    FurnaceDDLComponent.prototype.PSCFunarceChange = function (selectedItem) {
        //var eventParams = {
        //    'selectedItem': selectedItem,
        //    'rowItem': this.rowItem,
        //    'rowIndex': this.rowIndex
        //}
        this.rowItem.furnace_Model = selectedItem.value;
        this.furnaceSelectedEvent.emit(selectedItem);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], FurnaceDDLComponent.prototype, "rowItem", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], FurnaceDDLComponent.prototype, "rowIndex", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], FurnaceDDLComponent.prototype, "furnaceSelectedEvent", void 0);
    FurnaceDDLComponent = __decorate([
        core_1.Component({
            selector: 'furnaceDDL',
            template: __webpack_require__("./src/app/tools/components/unitary-matchup-tool/furnaceDDL.component.html"),
            providers: [unitary_matchup_service_1.UnitaryMatchupService]
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService,
            product_service_1.ProductService, basket_service_1.BasketService,
            unitary_matchup_service_1.UnitaryMatchupService])
    ], FurnaceDDLComponent);
    return FurnaceDDLComponent;
}());
exports.FurnaceDDLComponent = FurnaceDDLComponent;


/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/matchup-detail-grid.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n \r\n<kendo-grid id=\"matchup-detail-grid\" *ngIf=\"matchupResultDetail\"\r\n            [data]=\"gridViewData\"\r\n            [pageSize]=\"pageSize\"\r\n            [skip]=\"skip\"\r\n            [sortable]=\"true\"\r\n            [sort]=\"sort\"\r\n            [pageable]=\"true\"\r\n            [scrollable]=\"'none'\"\r\n            (dataStateChange)=\"dataStateChange($event)\">\r\n    <kendo-grid-column field=\"arirefNumber\" title=\"AHRI\"   ></kendo-grid-column>\r\n    <kendo-grid-column field=\"outdoor_Model\" title=\"Outdoor Model\" ></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'coilOnly' && outDoorUnitType !='pkg'\" field=\"coill_Model\" title=\"Coil\" ></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'furnaceCoil' && outDoorUnitType !='pkg'\" field=\"coill_Model\" title=\"Coil/AirHandler\" ></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'airHandler' && outDoorUnitType !='pkg'\" field=\"coill_Model\" title=\"Coil/AirHandler\" ></kendo-grid-column>\r\n    <!--Furnace DDL-->\r\n    <kendo-grid-column *ngIf=\"(indoorUnitType == 'coilOnly' || indoorUnitType == 'furnaceCoil') &&  outDoorUnitType !='pkg'\" title=\"Furnace\" >\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <p *ngIf=\"!dataItem.showFurnaceDDL\">{{dataItem.furnace_Model}}</p>\r\n            <furnaceDDL *ngIf=\"dataItem.showFurnaceDDL\" [rowItem]=\"dataItem\" [rowIndex]=\"rowIndex\" (furnaceSelectedEvent)=\"FurnaceSelected($event, rowIndex)\"></furnaceDDL>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <!--Blower-->\r\n    <kendo-grid-column *ngIf=\"indoorUnitType == 'airHandler' && outDoorUnitType !='pkg'\" field=\"blower_Model\" title=\"Blower\" ></kendo-grid-column>\r\n\r\n\r\n    <kendo-grid-column field=\"tonnage\" title=\"Tonnage\" ></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType != 'pkg'\" field=\"txv\" title=\"TXV/Piston\" ></kendo-grid-column>\r\n\r\n    <!--Add To Quote-->\r\n    <kendo-grid-column *ngIf=\"userBasket.quoteId != 0 && userBasket.quoteId != undefined\" field=\"quantity\" title=\"Quantity\" >\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span>\r\n                <input class=\"numericTextBox productQuantity\" type=\"number\" [(ngModel)]=\"dataItem.quantity\" (change)=\"validateQuantity($event)\" min=\"0\" step=\"1\" style=\"width:70px; line-height:30px; font-size:1.2em; text-align: center;\" />\r\n            </span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n\r\n    <kendo-grid-column *ngIf=\"userBasket.quoteId != 0 && userBasket.quoteId != undefined\" >\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span>\r\n                <button class=\"btn btn-default\" (click)=\"addToQuote(dataItem)\">Add To Quote</button>\r\n            </span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <!-------------->\r\n\r\n    <kendo-grid-column field=\"seer\" title=\"SEER\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"eer\" title=\"EER\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"cooling\" title=\"Cooling\"></kendo-grid-column>\r\n    <!--<kendo-grid-column class=\"fitValue\" field=\"fit\" title=\"Fit\"></kendo-grid-column>-->\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType != 'pkg'\" class=\"fitValue\" field=\"fit\" title=\"Fit\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span [attr.id]=\"'fitValue-'+rowIndex\">{{dataItem.fit}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n   \r\n    <kendo-grid-column *ngIf=\"outDoorUnitType != 'pkg'\" field=\"afue\" title=\"AFUE\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <span [attr.id]=\"'afueValue-'+rowIndex\">{{dataItem.afue}}</span>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"highHeat\" title=\"High Heat\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"highCop\" title=\"High COP\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp' || outDoorUnitType == 'pkg'\"  field=\"hspf\" title=\"HSPF\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"lowHeat\" title=\"Low Heat\"></kendo-grid-column>\r\n    <kendo-grid-column *ngIf=\"outDoorUnitType == 'hp'\" field=\"lowCop\" title=\"Low COP\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"status\" title=\"Status\"></kendo-grid-column>\r\n        \r\n</kendo-grid>"

/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/matchup-detail-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var MatchupDetailGridComponent = /** @class */ (function () {
    function MatchupDetailGridComponent(router, toastrSvc, userSvc, productSvc, basketSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.sort = [];
        this.pageSize = 10;
        this.skip = 0;
        this.defaultItem = { text: "Select item...", value: null, fit: "N/A", afue: "N/A" };
    }
    MatchupDetailGridComponent.prototype.ngOnInit = function () {
        this.loadData();
    };
    MatchupDetailGridComponent.prototype.dataStateChange = function (_a) {
        var skip = _a.skip, take = _a.take, sort = _a.sort;
        this.skip = skip;
        this.pageSize = take;
        this.sort = sort;
        this.loadData();
    };
    MatchupDetailGridComponent.prototype.loadData = function () {
        for (var key in this.matchupResultDetail) {
            if (!this.matchupResultDetail[key].furnace_Model) {
                this.matchupResultDetail[key].showFurnaceDDL = true;
            }
            else {
                this.matchupResultDetail[key].showFurnaceDDL = false;
            }
            //add quantity field
            if (this.matchupResultDetail.hasOwnProperty(key)) {
                this.matchupResultDetail[key].quantity = 0;
            }
        }
        if (this.matchupResultDetail != undefined) {
            this.gridViewData = {
                data: this.matchupResultDetail.slice(this.skip, this.skip + this.pageSize),
                total: this.matchupResultDetail.length
            };
        }
    };
    //deprecated
    //public PSCFunarceChange(selectedItem: any, rowIndex: any, dataItem: any) {
    //    var test = selectedItem;
    //    dataItem.furnace_Model = selectedItem.value;
    //    var fitValueCellId = "#fitValue-" + rowIndex;
    //    $(fitValueCellId).text(selectedItem.fit);
    //    var afueValueCellId = "#afueValue-" + rowIndex;
    //    $(afueValueCellId).text(selectedItem.afue);
    //}
    MatchupDetailGridComponent.prototype.FurnaceSelected = function (selectedItem, rowIndex) {
        var fitValueCellId = "#fitValue-" + rowIndex;
        jQuery(fitValueCellId).text(selectedItem.fit);
        var afueValueCellId = "#afueValue-" + rowIndex;
        jQuery(afueValueCellId).text(selectedItem.afue);
    };
    MatchupDetailGridComponent.prototype.validateQuantity = function (event) {
        var value = parseFloat(event.target.value);
        if (value == null || isNaN(value)) {
            //this.product.quantity = 0;
            event.target.value = 0;
        }
        else if ((value < 0) || (Math.floor(value) != value)) {
            //this.product.quantity = 0;
            event.target.value = 0;
            this.toastrSvc.ErrorFadeOut("Please enter an integer greater than zero.");
        }
    };
    MatchupDetailGridComponent.prototype.addToQuote = function (item) {
        var self = this;
        var productNumbers = [];
        var outdoorModel = item.outdoor_Model.substring(0, item.outdoor_Model.length - 2);
        productNumbers.push(outdoorModel);
        if (self.outDoorUnitType != "pkg") {
            var coilModel = item.coill_Model.substring(0, item.coill_Model.length - 2);
            productNumbers.push(coilModel);
        }
        if (item.quantity > 0) {
            self.system = {
                "ProductNumbers": productNumbers,
                "Quantity": item.quantity,
                "AHRI": item.arirefNumber,
                "SEER": item.seer,
                "EER": item.eer,
                "Cooling": item.cooling,
                "Fit": item.fit,
                "AFUE": item.afue,
                "ContinueAdding": false,
                "ValidProducts": [],
                "InValidProducts": []
            };
            if (this.indoorUnitType = "coilOnly") {
                if (item.furnace_Model != null && item.furnace_Model != "") {
                    if (item.furnace_Model.includes('*')) {
                        var furnaceModel = item.furnace_Model.substring(0, item.furnace_Model.length - 2);
                        self.system.ProductNumbers.push(furnaceModel);
                    }
                    else {
                        var furnaceModel = item.furnace_Model;
                        self.system.ProductNumbers.push(furnaceModel);
                    }
                }
            }
            else if (this.indoorUnitType = "furnaceCoil") {
                if (item.furnace_Model != null && item.furnace_Model != "") {
                    if (item.furnace_Model.includes('*')) {
                        var furnaceModel = item.furnace_Model.substring(0, item.furnace_Model.length - 2);
                        self.system.ProductNumbers.push(furnaceModel);
                    }
                    else {
                        var furnaceModel = item.furnace_Model;
                        self.system.ProductNumbers.push(furnaceModel);
                    }
                }
            }
            else if (this.indoorUnitType = "airHandler") {
                if (item.blower_Model != null && item.blower_Model != "") {
                    var blowerModel = item.blower_Model.substring(0, item.blower_Model.length - 2);
                    self.system.ProductNumbers.push(blowerModel);
                }
            }
            this.addSystemToQuote(self.system);
        }
        else {
            this.toastrSvc.Info("Please enter quantity!");
        }
        item.quantity = 0;
    };
    MatchupDetailGridComponent.prototype.addSystemToQuote = function (system) {
        var _this = this;
        var self = this;
        //self.loadingIconSvc.Start(jQuery("#systemConfiguratorTool"));
        this.blockUI.start('Loading...');
        this.productSvc.addSystemToQuote(system).then(function (resp) {
            //self.loadingIconSvc.Stop(jQuery("#systemConfiguratorTool"));
            _this.blockUI.stop();
            if (resp.isok) {
                //update basket item count
                self.basketSvc.getBasket().then(function (resp) {
                    if (resp.isok) {
                        self.basketSvc.userBasket = resp.model;
                        jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
                    }
                });
                self.toastrSvc.displayResponseMessages(resp); //all products added successfully
            }
            else {
                if (resp.model.validProducts.length > 0) {
                    var validproducts = "";
                    for (var i = 0; i < resp.model.validProducts.length; i++) {
                        if (i < resp.model.validProducts.length - 1) {
                            validproducts += resp.model.validProducts[i] + ", ";
                        }
                        else {
                            validproducts += resp.model.validProducts[i];
                        }
                    }
                    var inValidProducts = "";
                    for (var i = 0; i < resp.model.inValidProducts.length; i++) {
                        if (i < resp.model.inValidProducts.length - 1) {
                            inValidProducts += resp.model.inValidProducts[i] + ", ";
                        }
                        else {
                            inValidProducts += resp.model.inValidProducts[i];
                        }
                    }
                    bootbox.confirm("Can not find: " + inValidProducts + " <br/>Do you want continue adding " + validproducts + " to quote?", function (result) {
                        var _this = this;
                        if (result) {
                            self.system.ContinueAdding = true;
                            //Continue adding valid products
                            this.blockUI.start('Loading...');
                            // self.loadingIconSvc.Start(jQuery("#systemConfiguratorTool"));
                            self.productSvc.addSystemToQuote(self.system).then(function (resp) {
                                if (resp.isok) {
                                    //update basket item count
                                    self.basketSvc.getBasket().then(function (resp) {
                                        if (resp.isok) {
                                            //self.userBasket = resp.model;
                                            self.basketSvc.userBasket = resp.model;
                                            jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
                                        }
                                    });
                                    self.toastrSvc.displayResponseMessages(resp); //products added successfully
                                }
                                //self.loadingIconSvc.Stop(jQuery("#systemConfiguratorTool"));
                                _this.blockUI.stop();
                            });
                        }
                    });
                    //self.toastrSvc.displayResponseMessages(resp);// this shows invalid products
                }
                else {
                    self.toastrSvc.displayResponseMessages(resp); // All products are invalid
                }
            }
            //self.toastrSvc.displayResponseMessages(resp);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupDetailGridComponent.prototype, "matchupResultDetail", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupDetailGridComponent.prototype, "seer", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupDetailGridComponent.prototype, "indoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupDetailGridComponent.prototype, "outDoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupDetailGridComponent.prototype, "userBasket", void 0);
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], MatchupDetailGridComponent.prototype, "blockUI", void 0);
    MatchupDetailGridComponent = __decorate([
        core_1.Component({
            selector: 'matchup-detail-grid',
            template: __webpack_require__("./src/app/tools/components/unitary-matchup-tool/matchup-detail-grid.component.html")
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], MatchupDetailGridComponent);
    return MatchupDetailGridComponent;
}());
exports.MatchupDetailGridComponent = MatchupDetailGridComponent;


/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/matchup-master-grid.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <button class=\"btn btn-default pull-right\" (click)=\"backToSearchPage()\" style=\"margin: 10px\">Back To Search Page</button>\r\n</div>\r\n\r\n<!--<kendo-dropdownlist [data]=\"testListItems\">\r\n</kendo-dropdownlist>-->\r\n\r\n\r\n<kendo-grid id=\"matchup-master-grid\" *ngIf=\"matchupResult\"\r\n            [data]=\"gridViewData\"\r\n            [pageable]=\"false\"\r\n            [scrollable]=\"'none'\">\r\n\r\n    <kendo-grid-column field=\"seer\" title=\"SEER\" width=\"150\">\r\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\r\n            <p>{{dataItem.seer}} +</p>\r\n        </ng-template>\r\n    </kendo-grid-column>\r\n    <kendo-grid-column field=\"numberOfItem\" title=\"Available items\"></kendo-grid-column>\r\n\r\n    <ng-template kendoGridDetailTemplate let-dataItem>\r\n        <matchup-detail-grid [matchupResultDetail]=\"matchupResult[dataItem.seer]\" [seer]=\"dataItem.seer\" [indoorUnitType]=\"indoorUnitType\" [outDoorUnitType]=\"outDoorUnitType\" [userBasket]=\"userBasket\"></matchup-detail-grid>\r\n    </ng-template>\r\n\r\n</kendo-grid>\r\n\r\n\r\n<div class=\"row\">\r\n    <button class=\"btn btn-default pull-right\" (click)=\"backToSearchPage()\" style=\"margin: 10px\">Back To Search Page</button>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/matchup-master-grid.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var unitary_matchup_service_1 = __webpack_require__("./src/app/tools/services/unitary-matchup.service.ts");
var MatchupMasterGridComponent = /** @class */ (function () {
    //public sort: Array<SortDescriptor> = [];
    //public pageSize: number = 15;
    //public skip: number = 0;
    //public testListItems: Array<string> = ["Baseball", "Basketball", "Cricket", "Field Hockey", "Football", "Table Tennis", "Tennis", "Volleyball"];
    function MatchupMasterGridComponent(router, toastrSvc, userSvc, productSvc, basketSvc) {
        this.router = router;
        this.toastrSvc = toastrSvc;
        this.userSvc = userSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.seerCategoriesData = [];
    }
    MatchupMasterGridComponent.prototype.ngOnChanges = function () {
        //console.log("On Change");
        this.loadData();
    };
    MatchupMasterGridComponent.prototype.ngOnInit = function () {
        //console.log("On Init");
        //this.loadData();
    };
    //public dataStateChange({ skip, take, sort }: DataStateChangeEvent): void {
    //    this.skip = skip;
    //    this.pageSize = take;
    //    this.sort = sort;
    //    this.loadData();
    //}
    MatchupMasterGridComponent.prototype.loadData = function () {
        //if (this.seerCategoriesData != undefined) {
        //    this.gridViewData = {
        //        data: this.seerCategoriesData.slice(this.skip, this.skip + this.pageSize),
        //        total: this.seerCategoriesData.length
        //    };
        //}
        this.seerCategoriesData = []; // clear old data
        for (var key in this.matchupResult) {
            if (!this.matchupResult.hasOwnProperty(key))
                continue;
            if (this.matchupResult[key].length > 0) {
                var obj = {
                    "seer": key,
                    "numberOfItem": this.matchupResult[key].length
                };
                this.seerCategoriesData.push(obj);
            }
        }
        if (this.seerCategoriesData != undefined) {
            this.gridViewData = {
                data: this.seerCategoriesData,
                total: this.seerCategoriesData.length
            };
        }
    };
    MatchupMasterGridComponent.prototype.backToSearchPage = function () {
        jQuery('#systemConfigForm').show();
        jQuery('#matchupResultGrid').hide();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupMasterGridComponent.prototype, "matchupResult", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupMasterGridComponent.prototype, "indoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupMasterGridComponent.prototype, "outDoorUnitType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MatchupMasterGridComponent.prototype, "userBasket", void 0);
    MatchupMasterGridComponent = __decorate([
        core_1.Component({
            selector: 'matchup-master-grid',
            styles: ['/deep/ .k-grid th.k-header, .k-grid-header { background: #5397cf; color: #fff}'],
            template: __webpack_require__("./src/app/tools/components/unitary-matchup-tool/matchup-master-grid.component.html"),
            providers: [unitary_matchup_service_1.UnitaryMatchupService]
        }),
        __metadata("design:paramtypes", [router_1.Router, toastr_service_1.ToastrService,
            user_service_1.UserService, product_service_1.ProductService,
            basket_service_1.BasketService])
    ], MatchupMasterGridComponent);
    return MatchupMasterGridComponent;
}());
exports.MatchupMasterGridComponent = MatchupMasterGridComponent;


/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.css":
/***/ (function(module, exports) {

module.exports = ".configToolLabel {\r\n    font-weight: bold;\r\n}\r\n\r\n.configToolRow {\r\n    /*margin-top: 10px;\r\n    margin-bottom: 10px;*/\r\n}\r\n\r\n/*fix extra space on kendo grid*/\r\n\r\n/*#matchup-master-grid, #matchup-detail-grid {\r\n    border-width: 0px;\r\n}*/\r\n\r\n/* systemConfig tab bar */\r\n\r\n.systemConfig-tab-bar {\r\n    /*margin:0 30px 18px 30px;*/\r\n    list-style-type: none;\r\n    display: block;\r\n    padding: 0;\r\n    border-bottom: 4px solid #007FCC;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n\r\n.systemConfig-tab-bar li {\r\n        display: inline-block;\r\n        /*text-transform: uppercase;*/\r\n        color: #000;\r\n        cursor: pointer;\r\n        /*-moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;*/\r\n    }\r\n\r\n.systemConfig-tab-bar li span, .systemConfig-tab-bar li a {\r\n            padding: 10px 20px;\r\n            display: block;\r\n            text-decoration: none;\r\n            color: inherit;\r\n        }\r\n\r\n.systemConfig-tab-bar li.active-tab, .systemConfig-tab-bar li.active-tab:hover,\r\n        .systemConfig-tab-bar li.active, .systemConfig-tab-bar li.active:hover {\r\n            color: #fff;\r\n            background-color: #007FCC;\r\n        }\r\n\r\n.systemConfig-tab-bar a.active-tab, .systemConfig-tab-bar a.active-tab:hover {\r\n        color: #fff;\r\n        background-color: #007FCC;\r\n    }\r\n\r\n.outDoorUnitCriteria {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-radius: 7px;\r\n    margin: 10px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n}\r\n"

/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.html":
/***/ (function(module, exports) {

module.exports = "<basket id=\"userBasket\" [userBasket]=\"userBasket\"></basket>\r\n<project-tabs [user]=\"user\" ></project-tabs>\r\n\r\n<div id=\"main-container\" class='container-fluid'>\r\n    <div class=\"main-content\">\r\n\r\n        <h4>Unitary System Matchup</h4>\r\n        <div *ngIf=\"isAuthenticated\" id=\"systemConfiguratorTool\">\r\n            <div class=\"row\" id=\"systemConfigForm\">\r\n                <!--Instructions-->\r\n                <div class=\"col col-md-3 col-xs-12\">\r\n                    <fieldset>\r\n                        <legend style=\"font-weight:bold\">INSTRUCTIONS</legend>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"UserHeaderTd\">How to use this configurator:</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">1. Select outdoor unit information</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">2. Select indoor unit information</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">3. Click \"show results\"</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">4. Before using System Configurator, please read the Terms and Conditions information.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">5. By using System Configurator, you are in agreement with all <a href=\"/SystemMatchups-Daikin/disclaimer.jsp\">Terms and Conditions</a></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td class=\"UserText\">\r\n                                        <b>Note:</b><br /> If your matchup does not show up in System Configurator, it may have been archived.  You can submit a request to retrieve archived certifications by filling out a request form through AHRI, which can be accessed in the link below.  Note that additional fields will appear as you complete the form.  Please allow at least 3 business days for AHRI to process your request.<br>\r\n                                        <a href=\"https://www.ahridirectory.org/ahridirectory/pages/Techsupport/support.aspx\">https://www.ahridirectory.org</a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </fieldset>\r\n                </div>\r\n\r\n\r\n                <!--Search Form-->\r\n                <div class=\"col col-md-9 col-xs-12 form-horizontal\" style=\"font-size:small; padding-left: 50px;\">\r\n                    <div class=\"row\">\r\n                        <!--Search By-->\r\n\r\n                        <div class=\"scrollmenu\">\r\n                            <ul class=\"systemConfig-tab-bar\">\r\n                                <li id=\"searchBySystemNeeds\" class=\"active-tab\"> <a (click)=\"searchBy('systemNeeds')\">Search By System Needs</a> </li>\r\n                                <li id=\"searchByModelNumber\"> <a (click)=\"searchBy('modelNumber')\">Search By Model Number</a> </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <fieldset>\r\n                        <legend style=\"font-weight:bold\">\r\n                            OUTDOOR UNIT\r\n                        </legend>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"row configToolRow\">\r\n                                <!--Outdoor Unit Type-->\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\">\r\n                                    <label class=\"col col-md-6 configToolLabel control-label\" for=\"outDoorUnitTypeDDL\">Unit Type:<font color=\"red\">*</font></label>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <select id=\"outDoorUnitTypeDDL\"></select>\r\n                                    </div>\r\n                                </div>\r\n                                <!--packageType-->\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\" *ngIf=\"outDoorUnitType == 'pkg'\">\r\n                                    <label class=\"col col-md-6 configToolLabel control-label\">Select Package:</label>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <kendo-dropdownlist [data]=\"packageTypes\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                            [(ngModel)]=\"packageType\" (ngModelChange)=\"packageTypeOnChange()\">\r\n                                        </kendo-dropdownlist>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"row configToolRow\">\r\n                                <!--CEETier-->\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\" *ngIf=\"model=='N'\">\r\n                                    <div class=\"col col-md-6 configToolLabel control-label\">Select CEE Tier:</div>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <div id=\"ceeTierDDL\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <!--Region-->\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\" *ngIf=\"!(outDoorUnitType == 'pkg' && (packageType.value == 'pkg1' || packageType.value == 'pkg2'))\">\r\n                                    <div class=\"col col-md-6 configToolLabel control-label\">Region:</div>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <select id=\"regionDDL\"></select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!--Outdoor Unit - Search By System Needs-->\r\n                        <div *ngIf=\"model=='N'\" class=\"row\">\r\n                            <!--<fieldset>\r\n                            <legend style=\"font-weight:bold\">\r\n                                Outdoor Unit\r\n                            </legend>-->\r\n                            <!--<div style=\"padding-left:20px;\">Unit Criteria</div>-->\r\n                            <!--<div class=\"outDoorUnitCriteria\" style=\"border-style:solid; border-width:1px; border-radius:7px;\">-->\r\n                            <!--<div class=\"outDoorUnitCriteria col col-md-8\">-->\r\n                            <!--<div class=\"row\">\r\n                                <div class=\"col col-md-7 col-sm-10\" style=\"margin-left:40px; color:#656565; border-bottom:solid; border-bottom-width:1px; border-color:#e5e5e5;\">Unit Criteria</div>\r\n                            </div>-->\r\n                            <div>\r\n                                <div style=\"padding-left:50px; color:#656565; text-decoration: underline\">UNIT CRITERIA</div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row configToolRow\">\r\n                                <div class=\"col col-md-4 col-xs-12 form-group\">\r\n                                    <div class=\"col col-md-6 configToolLabel control-label\">Tonnage:<font color=\"red\">*</font></div>\r\n                                    <div class=\"col col-md-6\">\r\n                                        <select id=\"tonnageDDL\"></select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">SEER:<font color=\"red\">*</font></div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minSEER\" [(ngModel)]=\"minSEER\" style=\"width: 100px\" /></span>\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxSEER\" [(ngModel)]=\"maxSEER\" style=\"width: 100px\" /></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">EER:</div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minEER\" [(ngModel)]=\"minEER\" style=\"width: 100px\" /></span>\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxEER\" [(ngModel)]=\"maxEER\" style=\"width: 100px\" /></span>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\" *ngIf=\"outDoorUnitType == 'hp' || outDoorUnitType == 'pkg'\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">HSPF:</div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Min <input id=\"minHSPF\" [(ngModel)]=\"minHSPF\" style=\"width: 100px\" /></span>\r\n                                    <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">Max <input id=\"maxHSPF\" [(ngModel)]=\"maxHSPF\" style=\"width: 100px\" /></span>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow\" *ngIf=\"outDoorUnitType != 'pkg'\">\r\n                                <div class=\"col col-md-4  col-xs-12 form-group\">\r\n                                    <div class=\"col col-md-6 col-xs-12 configToolLabel control-label\">TXV:</div>\r\n                                    <div class=\"col col-md-6 col-xs-12\">\r\n                                        <kendo-dropdownlist [data]=\"txvOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                            [(ngModel)]=\"txv\">\r\n                                        </kendo-dropdownlist>\r\n                                        <!--<span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"txv\" [(ngModel)]=\"txv\" value=\"Y\" /> Yes</span>\r\n                                            <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"txv\" [(ngModel)]=\"txv\" value=\"N\" /> No</span>\r\n                                            <span class=\"col col-md-3 col col-xs-12\"><input type=\"radio\" name=\"txv\" [(ngModel)]=\"txv\" value=\"T\" /> No Preference</span>-->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row configToolRow\">\r\n                                <div class=\"col col-md-4  col-xs-12 form-group\">\r\n                                    <div class=\"col col-md-6 col-xs-12 configToolLabel control-label\">Status:</div>\r\n                                    <div class=\"col col-md-6 col-xs-12\">\r\n                                        <kendo-dropdownlist [data]=\"statusOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                            [(ngModel)]=\"status\">\r\n                                        </kendo-dropdownlist>\r\n                                        <!--<span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"status\" [(ngModel)]=\"status\" value=\"Y\" /> Active</span>\r\n                                            <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"status\" [(ngModel)]=\"status\" value=\"N\" /> Discontinued</span>\r\n                                            <span class=\"col col-md-3 col col-xs-12\"><input type=\"radio\" name=\"status\" [(ngModel)]=\"status\" value=\"S\" /> No Preference</span>-->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--</fieldset>-->\r\n\r\n\r\n                        </div>\r\n                    </fieldset>\r\n\r\n\r\n                    <!--Indoor Unit - Search By System Needs-->\r\n                    <div *ngIf=\"model=='N' && outDoorUnitType != 'pkg'\">\r\n                        <fieldset>\r\n                            <legend style=\"font-weight:bold\">\r\n                                INDOOR UNIT\r\n                            </legend>\r\n                            <div class=\"row configToolRow form-group\" style=\"margin-left:-35px;\">\r\n                                <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">Unit Type:<font color=\"red\">*</font></div>\r\n                                <div class=\"col col-md-10 col-xs-12\">\r\n                                    <div class=\"row\">\r\n                                        <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"coilOnly\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Coil(only)</span>\r\n                                        <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"furnaceCoil\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Furnace</span>\r\n                                        <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"airHandler\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Air Handler</span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"configToolRow \" id=\"furnace-extra-params\" *ngIf=\"indoorUnitType == 'furnaceCoil'\">\r\n                                <div class=\"row form-group\" style=\"margin-left:-35px;\">\r\n                                    <div class=\"col col-md-2 col-xs-12 configToolRow configToolLabel control-label\">AFUE Range:</div>\r\n                                    <div class=\"col col-md-10 col-xs-12\">\r\n\r\n\r\n\r\n                                        <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">\r\n                                            Min <kendo-dropdownlist [data]=\"minAFUEOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                                    [defaultItem]=\"defaultItem\"\r\n                                                                    [(ngModel)]=\"minAFUE\"\r\n                                                                    style=\"width: 100px\">\r\n                                            </kendo-dropdownlist>\r\n                                        </span>\r\n                                        <span class=\"col col-md-2 col col-xs-12\" style=\"padding:0px\">\r\n                                            Max <kendo-dropdownlist [data]=\"maxAFUEOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                                                                    [defaultItem]=\"defaultItem\"\r\n                                                                    [(ngModel)]=\"maxAFUE\"\r\n                                                                    style=\"width: 100px\">\r\n                                            </kendo-dropdownlist>\r\n                                        </span>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                <div class=\"row form-group\" style=\"margin-left:-35px;\">\r\n                                    <div class=\"col-md-offset-2 col col-md-4\">\r\n                                        <div class=\"checkbox\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\" [(ngModel)]=\"flushfit\"> Flush fit\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </fieldset>\r\n\r\n                    </div>\r\n\r\n\r\n                    <!--Outdoor Unit - Search By Model#-->\r\n                    <div *ngIf=\"model=='Y'\" class=\"row\">\r\n                        <!--<fieldset>\r\n                            <legend style=\"font-weight:bold\">\r\n                                Outdoor Unit\r\n                            </legend>-->\r\n                        <!--<div class=\"row row-nomargin configToolRow configToolLabel\">Enter Outdoor Unit Model#</div>-->\r\n                        <div class=\"row configToolRows\">\r\n                            <div class=\"col col-md-4 col-xs-12 form-group\">\r\n                                <label class=\"col col-md-6 configToolLabel control-label\" for=\"outdoorModelAutoComplete\">Model:<font color=\"red\">*</font></label>\r\n                                <div class=\"col col-md-6\">\r\n                                    <input id=\"outdoorModelAutoComplete\" />\r\n                                    <div style=\"font-size:xx-small; font-style:italic; color:#656565;\">Enter at least two characters</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!--</fieldset>-->\r\n\r\n                    </div>\r\n\r\n                    <!--Indoor Unit - Search By Model #-->\r\n                    <div *ngIf=\"model=='Y' && outDoorUnitType != 'pkg'\">\r\n                        <fieldset>\r\n                            <legend style=\"font-weight:bold\">\r\n                                INDOOR UNIT\r\n                            </legend>\r\n                            <div class=\"row\">\r\n                                <div class=\"row configToolRow form-group\">\r\n                                    <div class=\"col col-md-2 col-xs-12 configToolLabel control-label\">Unit Type:</div>\r\n                                    <div class=\"col col-md-10 col-xs-12\">\r\n                                        <div class=\"row row-nomargin \">\r\n                                            <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"coilOnly\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Coil(only)</span>\r\n                                            <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"furnaceCoil\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Furnace+Coil</span>\r\n                                            <span class=\"col col-md-2 col col-xs-12\"><input type=\"radio\" name=\"indoorUnitType\" value=\"airHandler\" [(ngModel)]=\"indoorUnitType\" (ngModelChange)=\"indoorUnitTypeOnChange()\" /> Air Handler</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!--indoor-unit-dropdowns Go here-->\r\n                            <div id=\"indoor-unit-dropdowns\" style=\"margin-left:-35px;\">\r\n                                <div class=\"row configToolRow form-group\" *ngIf=\"indoorUnitType =='coilOnly'  && outdoorModelNumber != null \">\r\n                                    <div class=\"col col-md-2 col col-xs-12 configToolLabel control-label\">\r\n                                        Coil#:\r\n                                    </div>\r\n                                    <div class=\"col col-md-10 col col-xs-12\">\r\n                                        <input id=\"coilDDL\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row configToolRow form-group\" *ngIf=\"indoorUnitType =='furnaceCoil' && outdoorModelNumber != null \">\r\n                                    <div class=\"col col-md-2 col col-xs-12 configToolLabel control-label\">\r\n                                        Furnace#:\r\n                                    </div>\r\n                                    <div class=\"col col-md-10 col col-xs-12\">\r\n                                        <input id=\"furnaceDDL\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row configToolRow form-group\" *ngIf=\"indoorUnitType =='furnaceCoil' && outdoorModelNumber != null  && furnaceModelNumber != undefined && furnaceModelNumber != '' \">\r\n                                    <div class=\"col col-md-2 col col-xs-12 configToolLabel control-label\">\r\n                                        Coil#:\r\n                                    </div>\r\n                                    <div class=\"col col-md-10 col col-xs-12\">\r\n                                        <input id=\"furnaceCoilDDL\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row configToolRow form-group\" *ngIf=\"indoorUnitType =='airHandler' && outdoorModelNumber != null \">\r\n                                    <div class=\"col col-md-2 col col-xs-12 configToolLabel control-label\">\r\n                                        Air Handler/ Coil#:\r\n                                    </div>\r\n                                    <div class=\"col col-md-10 col col-xs-12\">\r\n                                        <input id=\"airHandlerDDL\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row configToolRow form-group\" *ngIf=\"indoorUnitType =='airHandler' && outdoorModelNumber != null && airHandlerModelNumber != undefined && airHandlerModelNumber != '' \">\r\n                                    <div class=\"col col-md-2 col col-xs-12 configToolLabel control-label\">\r\n                                        Blower#:\r\n                                    </div>\r\n                                    <div class=\"col col-md-10 col col-xs-12\">\r\n                                        <input id=\"airHandlerBlowerDDL\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </fieldset>\r\n\r\n                    </div>\r\n\r\n                    <!--Show result/ reset-->\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-md-offset-9 col-md-3\">\r\n                            <button id=\"showResultBtn\" type=\"submit\" class=\"btn btn-primary\" (click)=\"getResult()\">Show Result</button>\r\n                            <button id=\"resetBtn\" class=\"btn btn-default\" (click)=\"reset()\">Reset</button>\r\n\r\n                            <!--<button id=\"testBtn\" class=\"btn btn-default\" (click)=\"getEqModelList()\">Test</button>-->\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div id=\"matchupResultGrid\">\r\n                <matchup-master-grid *ngIf=\"matchupResult\" [matchupResult]=\"matchupResult\" [indoorUnitType]=\"indoorUnitType\" [outDoorUnitType]=\"outDoorUnitType\" [userBasket]=\"userBasket\"></matchup-master-grid>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div>\r\n            <button (click)=\"Test()\">Test</button>\r\n            <div id=\"userGroup\"></div>\r\n        </div>-->\r\n        <!--<kendo-grid\r\n                    *ngIf=\"matchupResult\"\r\n                  [data]=\"matchupResult\"\r\n                  [pageSize]=\"pageSize\"\r\n                  [skip]=\"skip\"\r\n                  [sortable]=\"true\"\r\n                  [sort]=\"sort\"\r\n                  [pageable]=\"true\"\r\n                  [scrollable]=\"'none'\"\r\n                  (dataStateChange)=\"dataStateChange($event)\"\r\n                    >\r\n            <kendo-grid-column field=\"modelNumber\" ></kendo-grid-column>\r\n            <kendo-grid-column field=\"coilModelNumber\"></kendo-grid-column>\r\n            <kendo-grid-column field=\"seer\"></kendo-grid-column>\r\n\r\n        </kendo-grid>-->\r\n\r\n\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/esm5/router.js");
var ng_block_ui_1 = __webpack_require__("./node_modules/ng-block-ui/index.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var user_service_1 = __webpack_require__("./src/app/shared/services/user.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var product_service_1 = __webpack_require__("./src/app/product/services/product.service.ts");
var basket_service_1 = __webpack_require__("./src/app/basket/services/basket.service.ts");
var unitary_matchup_service_1 = __webpack_require__("./src/app/tools/services/unitary-matchup.service.ts");
//import { SortDescriptor } from '@progress/kendo-data-query';
var UnitaryMatchupComponent = /** @class */ (function () {
    function UnitaryMatchupComponent(router, route, userSvc, webconfigSvc, toastrSvc, productSvc, basketSvc, unitaryMatchupSvc) {
        this.router = router;
        this.route = route;
        this.userSvc = userSvc;
        this.webconfigSvc = webconfigSvc;
        this.toastrSvc = toastrSvc;
        this.productSvc = productSvc;
        this.basketSvc = basketSvc;
        this.unitaryMatchupSvc = unitaryMatchupSvc;
        this.model = "N";
        //Search by System Needs
        this.packageType = { text: "Dual Fuel", value: "pkg1" };
        this.packageTypes = [{ "text": "Dual Fuel", value: "pkg1" },
            { "text": "Heat Pump", value: "pkg2" },
            { "text": "Gas/Electric", value: "pkg3" },
            { "text": "Cool Only", value: "pkg4" }];
        this.txv = { text: "No Preference", value: "T" };
        this.txvOptions = [{ "text": "Yes", value: "Y" },
            { "text": "No", value: "N" },
            { "text": "No Preference", value: "T" }];
        this.status = { text: "No Preference", value: "S" };
        this.statusOptions = [{ "text": "Active", value: "Y" },
            { "text": "Discontinued", value: "N" },
            { "text": "No Preference", value: "S" }];
        this.minAFUE = { text: "Select...", value: null };
        this.minAFUEOptions = [{ "text": "80%", value: "80" },
            { "text": "90%", value: "90" },
            { "text": "92%", value: "92" },
            { "text": "95%", value: "95" },
            { "text": "96%", value: "96" },
            { "text": "97%", value: "97" }
        ];
        this.maxAFUE = { text: "Select...", value: null };
        this.maxAFUEOptions = [{ "text": "80%", value: "80" },
            { "text": "90%", value: "90" },
            { "text": "92%", value: "92" },
            { "text": "95%", value: "95" },
            { "text": "96%", value: "96" },
            { "text": "97%", value: "97" }
        ];
        //Dropdownlist options
        this.defaultItem = { "text": "Select...", value: null };
        var self = this;
        this.webconfigSvc.getWebConfig().then(function (resp) {
            self.webconfig = resp;
            self.unitaryMCToolURL = self.webconfig.routeConfig.unitaryMatchupToolURL;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
        this.user = this.route.snapshot.data['currentUser'].model;
        this.tonnageList = this.route.snapshot.data['tonnageList'];
    }
    UnitaryMatchupComponent.prototype.ngOnChanges = function () {
        //console.log("system config: OnChange");
    };
    UnitaryMatchupComponent.prototype.ngOnInit = function () {
        //console.log("system config: OnInit");
        var _this = this;
        this.userSvc.isAuthenticated().then(function (resp) {
            if (resp.isok && resp.model == true) {
                _this.isAuthenticated = true;
            }
            else {
                //Go back to login page
                window.location.href = "/v3/#/account/login";
            }
        });
        this.basketSvc.getBasket().then(this.getBasketCallback.bind(this));
        //wait until elements are available
        setTimeout(this.setupDefaults.bind(this), 200); // wait 0.2 sec
        //set up active tab
        jQuery(".systemConfig-tab-bar li").click(function () {
            jQuery(this).addClass('active-tab').siblings().removeClass('active-tab');
        });
    };
    //ngDoCheck() {
    //}
    UnitaryMatchupComponent.prototype.ngAfterContentInit = function () {
    };
    UnitaryMatchupComponent.prototype.ngAfterViewChecked = function () {
    };
    UnitaryMatchupComponent.prototype.getBasketCallback = function (resp) {
        if (resp.isok) {
            this.userBasket = resp.model;
            this.basketSvc.userBasket = resp.model;
            jQuery("#quoteItemCount").text(resp.model.quoteItemCount + " items in active quote");
        }
    };
    UnitaryMatchupComponent.prototype.ngOnDestroy = function () {
        jQuery('#content > #userBasket').remove();
        //reset session["BasketQuoteId"] = 0
        //// this.productSvc.resetBasketQuoteId();   ///TODO 08/22
        //console.log("system config: OnDestroy");
    };
    UnitaryMatchupComponent.prototype.setupDefaults = function () {
        this.model = "N";
        this.setupRadioButtons();
        this.setupDropDownLists();
        this.minSEER = "13";
        this.maxSEER = null;
        this.minEER = null;
        this.maxEER = null;
        this.minHSPF = null;
        this.maxHSPF = null;
        jQuery('#minSEER').removeProp('readonly');
        jQuery('#minEER').removeProp('readonly');
        this.resetIndoorUnit();
        this.outdoorModelNumber = null;
    };
    UnitaryMatchupComponent.prototype.reset = function () {
        this.setupDefaults();
        jQuery("#searchBySystemNeeds").addClass('active-tab');
        jQuery("#searchByModelNumber").removeClass('active-tab');
    };
    UnitaryMatchupComponent.prototype.searchBy = function (value) {
        if (value == "systemNeeds") {
            jQuery("#searchBySystemNeeds").addClass('active-tab').siblings().removeClass('active-tab');
            if (this.model != "N") {
                this.model = "N";
                this.searchByOnChange();
            }
        }
        else if (value == "modelNumber") {
            jQuery("#searchByModelNumber").addClass('active-tab').siblings().removeClass('active-tab');
            if (this.model != "Y") {
                this.model = "Y";
                this.searchByOnChange();
            }
        }
        //this.searchByOnChange();
    };
    UnitaryMatchupComponent.prototype.searchByOnChange = function () {
        var self = this;
        if (this.model == "Y") {
            //wait until jQuery("#outdoorModelAutoComplete") is available
            setTimeout(this.setupOutdoorModelAutoComplete.bind(this), 200); // wait 0.2 sec
            this.outdoorModelNumber = null;
        }
        if (this.model == "N") {
            //wait until element is available
            setTimeout(this.setupTonnageDDL.bind(this), 200); // wait 0.2 sec
            setTimeout(this.setupCeeTierDDL.bind(this), 200); // wait 0.2 sec
        }
        this.indoorUnitType = null;
    };
    UnitaryMatchupComponent.prototype.packageTypeOnChange = function () {
        jQuery("#outdoorModelAutoComplete").val(null);
        setTimeout(this.setupRegionDLL.bind(this), 200); // wait 0.2 sec
    };
    UnitaryMatchupComponent.prototype.validateInput = function () {
        var isValidated = true;
        if (this.model == "N") {
            if (this.tonnage == null || this.tonnage == "null") {
                this.toastrSvc.ErrorFadeOut("Tonnage is required.");
                isValidated = false;
                //this.inputValidated = false;
            }
            if (this.minSEER == null) {
                this.toastrSvc.ErrorFadeOut("Min SEER is required.");
                isValidated = false;
            }
            if (this.outDoorUnitType != 'pkg') {
                if (this.coil == null && this.furnace == null && this.airHandler == null) {
                    this.toastrSvc.ErrorFadeOut("Indoor Unit Type is required.");
                    isValidated = false;
                }
            }
        }
        else if (this.model == "Y") {
            if (this.outdoorModelNumber == null) {
                this.toastrSvc.ErrorFadeOut("Outdoor Unit Model is required.");
                isValidated = false;
            }
        }
        return isValidated;
    };
    UnitaryMatchupComponent.prototype.getResult = function () {
        var _this = this;
        var self = this;
        if (this.validateInput()) {
            var params = this.mapInputToParams();
            //self.loadingIconSvc.Start(jQuery("#systemConfiguratorTool"));
            this.blockUI.start('Loading...');
            this.unitaryMatchupSvc.getSystemMatchupList(params).then(function (resp) {
                if (!resp.error) {
                    var result = resp.result;
                    //this.concatResult(resp.result);
                    _this.matchupResult = result;
                    jQuery('#systemConfigForm').hide();
                    jQuery('#matchupResultGrid').show();
                    //self.loadingIconSvc.Stop(jQuery("#systemConfiguratorTool"));
                    _this.blockUI.stop();
                }
                else {
                    // self.loadingIconSvc.Stop(jQuery("#systemConfiguratorTool"));
                    _this.blockUI.stop();
                }
            });
        }
        //this.SystemConfiguratorSvc.getSystemMatchupList(data).then(this.getSystemMatchupListCallBack.bind(this));
    };
    UnitaryMatchupComponent.prototype.concatResult = function (result) {
        var data = [];
        for (var key in result) {
            if (!result.hasOwnProperty(key))
                continue;
            var obj = result[key];
            data = data.concat(obj);
        }
        this.matchupResult = data;
        jQuery('#systemConfigForm').hide();
        jQuery('#matchupResultGrid').show();
    };
    UnitaryMatchupComponent.prototype.mapInputToParams = function () {
        var params = {};
        //map selections to params
        if (this.model == "N") {
            //Search by System Needs
            params = {
                "user": "",
                "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                "packageName": "SystemMatchupDaikin",
                "servicesName": "doGetSystemMatchupList",
                "accountId": "goodman1",
                "params": {
                    "model": this.model,
                    "type": this.outDoorUnitType,
                    "pkgtype": this.packageType.value,
                    "region": this.region,
                    "tonnage": this.tonnage,
                    "min_seer": this.minSEER,
                    "max_seer": this.maxSEER,
                    "min_eer": this.minEER,
                    "max_eer": this.maxEER,
                    "min_hspf": this.minHSPF,
                    "max_hspf": this.maxHSPF,
                    "txv": this.txv.value,
                    "status": this.status.value,
                    "coil": this.coil,
                    "airhandler": this.airHandler,
                    "furnace": this.furnace,
                    "min_afue": this.minAFUE.value,
                    "max_afue": this.maxAFUE.value,
                    "flushfit": this.flushfit
                }
            };
        }
        else if (this.model = "Y") {
            //search by model #
            params = {
                "user": "",
                "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                "packageName": "SystemMatchupDaikin",
                "servicesName": "doGetSystemMatchupList",
                "accountId": "goodman1",
                "params": {
                    "model": this.model,
                    "type": this.outDoorUnitType,
                    "pkgtype": this.packageType.value,
                    "region": this.region,
                    "modelnumber": this.outdoorModelNumber,
                    "coil": this.coilModelNumber,
                    "furnace": this.furnaceModelNumber,
                    "furnaceCoil": this.furnaceCoilModelNumber,
                    "airhandler": this.airHandlerModelNumber,
                    "blower": this.airHandlerBlowerModelNumber
                }
            };
        }
        return params;
    };
    //public getTonnageList() {
    //    this.unitaryMatchupSvc.getTonnageList().then((resp: any) => {
    //        if (resp) {
    //            var tonnageList = resp;
    //            debugger
    //        }
    //    });
    //}
    UnitaryMatchupComponent.prototype.getEqModelList = function () {
        //Test api
        this.unitaryMatchupSvc.getEqModelList({}).then(function (resp) {
            if (!resp.error) {
                var list = resp.result.modelList;
                debugger;
            }
        });
    };
    UnitaryMatchupComponent.prototype.setupDropDownLists = function () {
        this.outDoorUnitTypes = [
            { "text": "Air Conditioner", value: "ac" },
            { "text": "Heat Pump", value: "hp" },
            { "text": "Package", value: "pkg" }
        ];
        var self = this;
        jQuery("#outDoorUnitTypeDDL").kendoDropDownList({
            dataSource: self.outDoorUnitTypes,
            dataTextField: "text",
            dataValueField: "value",
            change: function (e) {
                var value = this.value();
                self.outDoorUnitType = value;
                if (self.model == "N") {
                    self.ceeTier = "b4";
                    self.onCEETierChange();
                }
                if (self.model == "Y") {
                    //reset selections
                    self.outdoorModelNumber = null;
                    jQuery("#outdoorModelAutoComplete").val(null);
                    //Reset outdoorModelAutoComplete dataSource
                    var outdoorModelDLL = jQuery("#outdoorModelAutoComplete").data("kendoAutoComplete");
                    var emptyDataSrc = new kendo.data.DataSource();
                    outdoorModelDLL.setDataSource(emptyDataSrc);
                    self.indoorUnitType = null;
                }
                if (value == "pkg") {
                    self.packageType.text = "Dual Fuel";
                    self.packageType.value = "pkg1";
                    setTimeout(self.setupCeeTierDDL.bind(self), 200);
                    self.region = null;
                    self.txv.value = "T";
                    self.indoorUnitType = null;
                }
                else {
                    setTimeout(self.setupRegionDLL.bind(self), 200);
                    setTimeout(self.setupCeeTierDDL.bind(self), 200);
                }
            }
        });
        setTimeout(function () {
            var outDoorUnitTypeDDL = jQuery("#outDoorUnitTypeDDL").data("kendoDropDownList");
            outDoorUnitTypeDDL.select(0);
            outDoorUnitTypeDDL.trigger("change");
        }, 200);
        //var outDoorUnitTypeDDL = jQuery("#outDoorUnitTypeDDL").data("kendoDropDownList");
        //outDoorUnitTypeDDL.select(0);
        //outDoorUnitTypeDDL.trigger("change");
        setTimeout(self.setupCeeTierDDL.bind(self), 200);
        setTimeout(self.setupRegionDLL.bind(self), 200);
        setTimeout(self.setupTonnageDDL.bind(self), 200);
        //self.setupTonnageDDL();
    };
    UnitaryMatchupComponent.prototype.setupOutdoorModelAutoComplete = function () {
        var self = this;
        jQuery("#outdoorModelAutoComplete").kendoAutoComplete({
            filter: "contains",
            placeholder: " Enter model#",
            minLength: 2,
            dataSource: [],
            change: function (e) {
                var value = this.value();
                self.outdoorModelNumber = value;
                // need to reset indoor DDLs
                self.indoorUnitType = null;
            }
        });
        jQuery("#outdoorModelAutoComplete").keyup(function (e) {
            var _this = this;
            if (this.value.toString().length >= 2) {
                if (e.keyCode != 38 && e.keyCode != 40 && e.keyCode != 13) {
                    //debugger
                    var params = {
                        "user": "",
                        "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                        "packageName": "SystemMatchupDaikin",
                        "servicesName": "doGetEqModelList",
                        "accountId": "goodman1",
                        "params": {
                            "model": "N",
                            "type": self.outDoorUnitType,
                            "modelnumber": this.value,
                            "pkgtype": self.packageType.value,
                            "region": self.region
                        }
                    };
                    self.unitaryMatchupSvc.getEqModelList(params).then(function (resp) {
                        if (!resp.error) {
                            var dataSrc = resp.result.modelList;
                            if (dataSrc.length > 0) {
                                // update outdoorModelDLL DataSource
                                var outdoorModelDLL = jQuery("#outdoorModelAutoComplete").data("kendoAutoComplete");
                                outdoorModelDLL.setDataSource(dataSrc);
                                outdoorModelDLL.search(_this.value);
                            }
                            else {
                                self.toastrSvc.ErrorFadeOut("Model# does not match with selected type and brand");
                            }
                        }
                    });
                }
            }
        }); // end of outdoorModelAutoComplete keyUp
    };
    UnitaryMatchupComponent.prototype.setupCeeTierDDL = function () {
        var self = this;
        var ceeTierDS = {};
        if (this.outDoorUnitType == "pkg") {
            ceeTierDS = [
                { "text": "No Preference", value: "b4" },
                { "text": "CEE Tier 1", value: "b1" },
                { "text": "CEE Tier 2", value: "b2" }
            ];
        }
        else {
            ceeTierDS = [
                { "text": "No Preference", value: "b4" },
                { "text": "CEE Tier 0", value: "b0" },
                { "text": "CEE Tier 1", value: "b1" },
                { "text": "CEE Tier 2", value: "b2" },
                { "text": "CEE Tier 3", value: "b3" }
            ];
        }
        jQuery("#ceeTierDDL").kendoDropDownList({
            dataSource: ceeTierDS,
            dataTextField: "text",
            dataValueField: "value",
            change: function (e) {
                var value = this.value();
                self.ceeTier = value;
                self.onCEETierChange();
            }
        });
    };
    UnitaryMatchupComponent.prototype.setupRegionDLL = function () {
        var self = this;
        this.regions = [
            { "text": "North", value: "north" },
            { "text": "SouthEast", value: "se" },
            { "text": "SouthWest", value: "sw" }
        ];
        jQuery("#regionDDL").kendoDropDownList({
            dataSource: self.regions,
            dataTextField: "text",
            dataValueField: "value",
            change: function (e) {
                var value = this.value();
                self.region = value;
                if (value == 'se') {
                    self.minSEER = "14";
                }
                else {
                    self.minSEER = "13";
                }
            }
        });
        var regionDDL = jQuery("#regionDDL").data("kendoDropDownList");
        regionDDL.select(0);
        regionDDL.trigger("change");
    };
    UnitaryMatchupComponent.prototype.setupTonnageDDL = function () {
        var self = this;
        //this.unitaryMatchupSvc.getTonnageList().then((resp: any) => {
        //    if (resp) {
        //        var tonnageList = resp.result.tonnageList;
        //        //debugger
        //        let tonnageListDataSrc: any = [];
        //        for (var i in tonnageList) {
        //            var obj = {
        //                "text": tonnageList[i],
        //                "value": tonnageList[i]
        //            }
        //            //debugger
        //            tonnageListDataSrc.push(obj);
        //        }
        //        if (jQuery("#tonnageDDL").length > 0) {
        //            jQuery("#tonnageDDL").kendoDropDownList({
        //                dataSource: tonnageListDataSrc,
        //                dataTextField: "text",
        //                dataValueField: "value",
        //                optionLabel: {
        //                    text: "Select ...",
        //                    value: null
        //                },
        //                change: function (e) {
        //                    var value = this.value();
        //                    self.tonnage = value;
        //                    //debugger
        //                }
        //            });
        //            //debugger
        //            var tonnageDDL = jQuery("#tonnageDDL").data("kendoDropDownList");
        //            tonnageDDL.select(0);
        //            tonnageDDL.trigger("change");
        //        }
        //    }
        //});
        var tonnageListDataSrc = [];
        for (var i in this.tonnageList) {
            var obj = {
                "text": this.tonnageList[i],
                "value": this.tonnageList[i]
            };
            //debugger
            tonnageListDataSrc.push(obj);
        }
        if (jQuery("#tonnageDDL").length > 0) {
            jQuery("#tonnageDDL").kendoDropDownList({
                dataSource: tonnageListDataSrc,
                dataTextField: "text",
                dataValueField: "value",
                optionLabel: {
                    text: "Select ...",
                    value: null
                },
                change: function (e) {
                    var value = this.value();
                    self.tonnage = value;
                    //debugger
                }
            });
            //debugger
            var tonnageDDL = jQuery("#tonnageDDL").data("kendoDropDownList");
            tonnageDDL.select(0);
            tonnageDDL.trigger("change");
        }
    };
    UnitaryMatchupComponent.prototype.setupRadioButtons = function () {
        this.model = "N";
        this.ceeTier = "b4";
        this.txv.value = "T";
        this.status.value = "S";
    };
    UnitaryMatchupComponent.prototype.onCEETierChange = function () {
        if (this.outDoorUnitType == "ac") {
            if (this.ceeTier == 'b4') {
                this.minSEER = 13;
                this.minEER = "";
                //this.minHSPF = "";
                jQuery('#minSEER').removeProp('readonly');
                jQuery('#minEER').removeProp('readonly');
            }
            else if (this.ceeTier == 'b0') {
                this.minSEER = 14.5;
                this.minEER = 12;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
            }
            else if (this.ceeTier == 'b1') {
                this.minSEER = 15;
                this.minEER = 12.5;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
            }
            else if (this.ceeTier == 'b2') {
                this.minSEER = 16;
                this.minEER = 13;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
            }
            else if (this.ceeTier == 'b3') {
                this.minSEER = 18;
                this.minEER = 13;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
            }
        }
        else if (this.outDoorUnitType == "hp") {
            if (this.ceeTier == 'b4') {
                this.minSEER = 14;
                this.minEER = "";
                this.minHSPF = "";
                jQuery('#minSEER').removeProp('readonly');
                jQuery('#minEER').removeProp('readonly');
                jQuery('#minHSPF').removeProp('readonly');
            }
            else if (this.ceeTier == 'b0') {
                this.minSEER = 14.5;
                this.minEER = 12;
                this.minHSPF = 8.5;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
                jQuery('#minHSPF').prop('readonly', true);
            }
            else if (this.ceeTier == 'b1') {
                this.minSEER = 15;
                this.minEER = 12.5;
                this.minHSPF = 8.5;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
                jQuery('#minHSPF').prop('readonly', true);
            }
            else if (this.ceeTier == 'b2') {
                this.minSEER = 16;
                this.minEER = 13;
                this.minHSPF = 9;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
                jQuery('#minHSPF').prop('readonly', true);
            }
            else if (this.ceeTier == 'b3') {
                this.minSEER = 18;
                this.minEER = 13;
                this.minHSPF = 10;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
                jQuery('#minHSPF').prop('readonly', true);
            }
        }
        else if (this.outDoorUnitType == "pkg") {
            if (this.ceeTier == 'b4') {
                this.minSEER = 14;
                this.minEER = "";
                this.minHSPF = "";
                jQuery('#minSEER').removeProp('readonly');
                jQuery('#minEER').removeProp('readonly');
                jQuery('#minHSPF').removeProp('readonly');
            }
            else if (this.ceeTier == 'b1') {
                this.minSEER = 15;
                this.minEER = 12.5;
                this.minHSPF = 8.2;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
                jQuery('#minHSPF').prop('readonly', true);
            }
            else if (this.ceeTier == 'b2') {
                this.minSEER = 16;
                this.minEER = 12;
                this.minHSPF = 8.2;
                jQuery('#minSEER').prop('readonly', true);
                jQuery('#minEER').prop('readonly', true);
                jQuery('#minHSPF').prop('readonly', true);
            }
        }
    };
    UnitaryMatchupComponent.prototype.resetIndoorUnit = function () {
        //this function get called before value is bound to model
        this.coil = null;
        this.furnace = null;
        this.minAFUE = { text: "Select ...", value: null };
        this.maxAFUE = { text: "Select ...", value: null };
        this.flushfit = null;
        this.airHandler = null;
        this.indoorUnitType = null;
    };
    UnitaryMatchupComponent.prototype.indoorUnitTypeOnChange = function () {
        if (this.model == 'Y') {
            this.coilModelNumber = null;
            this.furnaceModelNumber = null;
            this.furnaceCoilModelNumber = null;
            this.airHandlerModelNumber = null;
            this.airHandlerBlowerModelNumber = null;
            if (this.outdoorModelNumber != null && this.outdoorModelNumber != "") {
                if (this.indoorUnitType == 'coilOnly') {
                    //wait until element is available
                    setTimeout(this.setupCoilDDL.bind(this), 200); // wait 0.2 sec
                }
                if (this.indoorUnitType == 'furnaceCoil') {
                    //wait until element is available
                    setTimeout(this.setupFurnaceDDL.bind(this), 200); // wait 0.2 sec
                }
                if (this.indoorUnitType == 'airHandler') {
                    //wait until element is available
                    setTimeout(this.setupAirHandlerDDL.bind(this), 200); // wait 0.2 sec
                }
            }
            else {
                this.indoorUnitType = null;
                this.toastrSvc.ErrorFadeOut("Please Enter Outdoor Unit Model Number");
                var indoorUnitTypeRadios = document.getElementsByName("indoorUnitType");
                for (var i = 0; i < indoorUnitTypeRadios.length; i++) {
                    //indoorUnitTypeRadios[i].checked = false
                    jQuery(indoorUnitTypeRadios[i]).prop('checked', false);
                }
            }
        }
        if (this.model == 'N') {
            //reset
            this.coil = null;
            this.furnace = null;
            this.minAFUE = { text: "Select ...", value: null };
            this.maxAFUE = { text: "Select ...", value: null };
            this.flushfit = null;
            this.airHandler = null;
            if (this.indoorUnitType == 'coilOnly') {
                this.coil = 'coil';
            }
            if (this.indoorUnitType == 'furnaceCoil') {
                this.furnace = 'furnace';
            }
            if (this.indoorUnitType == 'airHandler') {
                this.airHandler = 'airhandler';
            }
        }
    };
    UnitaryMatchupComponent.prototype.setupCoilDDL = function () {
        var self = this;
        if (this.outdoorModelNumber != null) {
            var coilListDataSrc = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: self.unitaryMCToolURL,
                        type: "post",
                        contentType: "application/json",
                        dataType: "json",
                        data: {
                            "user": "",
                            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                            "packageName": "SystemMatchupDaikin",
                            "servicesName": "doGetEqCoilList",
                            "accountId": "goodman1",
                            "params": {
                                "type": self.outDoorUnitType,
                                "modelnumber": self.outdoorModelNumber
                            }
                        }
                    },
                    parameterMap: function (data, operation) {
                        if (operation == "read") {
                            return kendo.stringify(data);
                        }
                    }
                },
                schema: {
                    data: "result.coilList"
                }
            });
            if (jQuery("#coilDDL").length > 0) {
                jQuery("#coilDDL").kendoDropDownList({
                    dataSource: coilListDataSrc,
                    optionLabel: "Select...",
                    dataTextField: "coill_Model",
                    dataValueField: "coill_Model",
                    change: function (e) {
                        var value = this.value();
                        self.coilModelNumber = value;
                    }
                });
                //debugger
                //var tonnageDDL = jQuery("#tonnageDDL").data("kendoDropDownList");
                //tonnageDDL.select(0);
                //tonnageDDL.trigger("change");
            }
        }
    };
    UnitaryMatchupComponent.prototype.setupFurnaceDDL = function () {
        var self = this;
        if (this.outdoorModelNumber != null) {
            var furnaceListDataSrc = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: self.unitaryMCToolURL,
                        type: "post",
                        contentType: "application/json",
                        dataType: "json",
                        data: {
                            "user": "",
                            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                            "packageName": "SystemMatchupDaikin",
                            "servicesName": "doGetEqFurnaceList",
                            "accountId": "goodman1",
                            "params": {
                                "type": self.outDoorUnitType,
                                "modelnumber": self.outdoorModelNumber
                            }
                        }
                    },
                    parameterMap: function (data, operation) {
                        if (operation == "read") {
                            return kendo.stringify(data);
                        }
                    }
                },
                schema: {
                    data: "result.furnaceList"
                }
            });
            if (jQuery("#furnaceDDL").length > 0) {
                jQuery("#furnaceDDL").kendoDropDownList({
                    dataSource: furnaceListDataSrc,
                    optionLabel: "Select...",
                    dataTextField: "furnace_Model",
                    dataValueField: "furnace_Model",
                    change: function (e) {
                        var value = this.value();
                        self.furnaceModelNumber = value;
                        if (self.furnaceModelNumber != null) {
                            setTimeout(self.setupFurnaceCoilDDL.bind(self), 200);
                        }
                    }
                });
            }
        }
    };
    UnitaryMatchupComponent.prototype.setupFurnaceCoilDDL = function () {
        var self = this;
        if (this.outdoorModelNumber != null && this.furnaceModelNumber != null) {
            var furnaceCoilListDataSrc = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: self.unitaryMCToolURL,
                        type: "post",
                        contentType: "application/json",
                        dataType: "json",
                        data: {
                            "user": "",
                            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                            "packageName": "SystemMatchupDaikin",
                            "servicesName": "doGetEqFurnaceCoilList",
                            "accountId": "goodman1",
                            "params": {
                                "type": self.outDoorUnitType,
                                "modelnumber": self.outdoorModelNumber,
                                "furnace": self.furnaceModelNumber
                            }
                        }
                    },
                    parameterMap: function (data, operation) {
                        if (operation == "read") {
                            return kendo.stringify(data);
                        }
                    }
                },
                schema: {
                    data: "result.furnaceCoilList"
                }
            });
            if (jQuery("#furnaceCoilDDL").length > 0) {
                jQuery("#furnaceCoilDDL").kendoDropDownList({
                    dataSource: furnaceCoilListDataSrc,
                    optionLabel: "Select...",
                    dataTextField: "coill_Model",
                    dataValueField: "coill_Model",
                    change: function (e) {
                        var value = this.value();
                        self.furnaceCoilModelNumber = value; // this might be bound to coilModelNumber instead
                    }
                });
            }
        }
    };
    UnitaryMatchupComponent.prototype.setupAirHandlerDDL = function () {
        var self = this;
        if (this.outdoorModelNumber != null) {
            var airHandlerListDataSrc = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: self.unitaryMCToolURL,
                        type: "post",
                        contentType: "application/json",
                        dataType: "json",
                        data: {
                            "user": "",
                            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                            "packageName": "SystemMatchupDaikin",
                            "servicesName": "doGetEqAirHandlerList",
                            "accountId": "goodman1",
                            "params": {
                                "type": self.outDoorUnitType,
                                "modelnumber": self.outdoorModelNumber
                            }
                        }
                    },
                    parameterMap: function (data, operation) {
                        if (operation == "read") {
                            return kendo.stringify(data);
                        }
                    }
                },
                schema: {
                    data: "result.airhandlerList"
                }
            });
            if (jQuery("#airHandlerDDL").length > 0) {
                jQuery("#airHandlerDDL").kendoDropDownList({
                    dataSource: airHandlerListDataSrc,
                    optionLabel: "Select...",
                    dataTextField: "coill_Model",
                    dataValueField: "coill_Model",
                    change: function (e) {
                        var value = this.value();
                        self.airHandlerModelNumber = value;
                        if (self.airHandlerModelNumber != null) {
                            setTimeout(self.setupAirHandlerBlowerDDL.bind(self), 200);
                        }
                    }
                });
            }
        }
    };
    UnitaryMatchupComponent.prototype.setupAirHandlerBlowerDDL = function () {
        var self = this;
        if (this.outdoorModelNumber != null && this.airHandlerModelNumber != null) {
            var airHandlerBlowerListDataSrc = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: self.unitaryMCToolURL,
                        type: "post",
                        contentType: "application/json",
                        dataType: "json",
                        data: {
                            "user": "",
                            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
                            "packageName": "SystemMatchupDaikin",
                            "servicesName": "doGetEqAirHandlerBlowerList",
                            "accountId": "goodman1",
                            "params": {
                                "type": self.outDoorUnitType,
                                "modelnumber": self.outdoorModelNumber,
                                "airhandler": self.airHandlerModelNumber
                            }
                        }
                    },
                    parameterMap: function (data, operation) {
                        if (operation == "read") {
                            return kendo.stringify(data);
                        }
                    }
                },
                schema: {
                    data: "result.airhandlerBlowerList"
                }
            });
            if (jQuery("#airHandlerBlowerDDL").length > 0) {
                jQuery("#airHandlerBlowerDDL").kendoDropDownList({
                    dataSource: airHandlerBlowerListDataSrc,
                    optionLabel: "Select...",
                    dataTextField: "blower_Model",
                    dataValueField: "blower_Model",
                    change: function (e) {
                        var value = this.value();
                        self.airHandlerBlowerModelNumber = value;
                    }
                });
            }
        }
    };
    __decorate([
        ng_block_ui_1.BlockUI(),
        __metadata("design:type", Object)
    ], UnitaryMatchupComponent.prototype, "blockUI", void 0);
    UnitaryMatchupComponent = __decorate([
        core_1.Component({
            selector: 'unitary-matchup',
            template: __webpack_require__("./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.html"),
            styles: [__webpack_require__("./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.css")]
        }),
        __metadata("design:paramtypes", [router_1.Router, router_1.ActivatedRoute,
            user_service_1.UserService, webconfig_service_1.WebConfigService,
            toastr_service_1.ToastrService, product_service_1.ProductService,
            basket_service_1.BasketService, unitary_matchup_service_1.UnitaryMatchupService])
    ], UnitaryMatchupComponent);
    return UnitaryMatchupComponent;
}());
exports.UnitaryMatchupComponent = UnitaryMatchupComponent;
;


/***/ }),

/***/ "./src/app/tools/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__("./src/app/tools/components/lc-split-matchup-tool/lc-split-matchup.component.ts"));
__export(__webpack_require__("./src/app/tools/components/lc-split-matchup-tool/split-matchup-detail-grid.component.ts"));
__export(__webpack_require__("./src/app/tools/components/lc-split-matchup-tool/split-matchup-master-grid.component.ts"));
__export(__webpack_require__("./src/app/tools/components/unitary-matchup-tool/furnaceDDL.component.ts"));
__export(__webpack_require__("./src/app/tools/components/unitary-matchup-tool/matchup-detail-grid.component.ts"));
__export(__webpack_require__("./src/app/tools/components/unitary-matchup-tool/matchup-master-grid.component.ts"));
__export(__webpack_require__("./src/app/tools/components/unitary-matchup-tool/unitary-matchup.component.ts"));
__export(__webpack_require__("./src/app/tools/components/tool-list/tool-list.component.ts"));
__export(__webpack_require__("./src/app/tools/services/tool-list.service.ts"));
__export(__webpack_require__("./src/app/tools/services/lc-split-matchup.service.ts"));
__export(__webpack_require__("./src/app/tools/services/unitary-matchup.service.ts"));
__export(__webpack_require__("./src/app/tools/services/unitary-matchup-resolver.service.ts"));


/***/ }),

/***/ "./src/app/tools/services/lc-split-matchup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
__webpack_require__("./node_modules/rxjs/_esm5/Rx.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var LCSplitMatchupService = /** @class */ (function () {
    function LCSplitMatchupService(toastrSvc, http, webconfigSvc) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.webconfigSvc = webconfigSvc;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        });
        var self = this;
        this.webconfigSvc.getWebConfig().then(function (resp) {
            self.webconfig = resp;
            self.commercialSplitMCToolURL = self.webconfig.routeConfig.commercialSplitMatchupToolURL;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
    }
    LCSplitMatchupService.prototype.getSystemMatchupList = function (params) {
        //var url = 'https://testapi.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.commercialSplitMCToolURL, params, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    LCSplitMatchupService.prototype.getTonnageList = function () {
        var body = {
            "user": "user",
            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
            "packageName": "SystemMatchupDaikinSplSt",
            "servicesName": "doGetTonnageList",
            "accountId": "goodman1",
            "params": {}
        };
        //var url = 'https://testapi.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.commercialSplitMCToolURL, body, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    LCSplitMatchupService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    LCSplitMatchupService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    LCSplitMatchupService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http, webconfig_service_1.WebConfigService])
    ], LCSplitMatchupService);
    return LCSplitMatchupService;
}());
exports.LCSplitMatchupService = LCSplitMatchupService;


/***/ }),

/***/ "./src/app/tools/services/tool-list.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
__webpack_require__("./node_modules/rxjs/_esm5/Rx.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var base_error_handler_service_1 = __webpack_require__("./src/app/shared/services/base-error-handler.service.ts");
var ToolListService = /** @class */ (function (_super) {
    __extends(ToolListService, _super);
    function ToolListService(http, toastrService) {
        var _this = _super.call(this, toastrService) || this;
        _this.http = http;
        _this.toastrService = toastrService;
        console.log('Tools Service Initialized...');
        return _this;
    }
    ToolListService.prototype.getTools = function () {
        var data = this.http.get("/api/Tool/GetTools")
            .map(this.extractData)
            .catch(this.handleError);
        return data;
    };
    ToolListService.prototype.extractData = function (res) {
        var body = res.json();
        return body || null;
    };
    ToolListService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.Http, toastr_service_1.ToastrService])
    ], ToolListService);
    return ToolListService;
}(base_error_handler_service_1.BaseErrorHandlerService));
exports.ToolListService = ToolListService;


/***/ }),

/***/ "./src/app/tools/services/unitary-matchup-resolver.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var Observable_1 = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
var unitary_matchup_service_1 = __webpack_require__("./src/app/tools/services/unitary-matchup.service.ts");
var UnitaryMatchupResolver = /** @class */ (function () {
    function UnitaryMatchupResolver(unitaryMatchupSvc) {
        this.unitaryMatchupSvc = unitaryMatchupSvc;
    }
    UnitaryMatchupResolver.prototype.resolve = function (route, state) {
        return this.unitaryMatchupSvc.getTonnageList()
            .map(function (resp) {
            if (resp) {
                return resp.result.tonnageList;
            }
            else {
                return null;
            }
        }).catch(function (error) {
            console.log(error);
            return Observable_1.Observable.of(null);
        });
    };
    UnitaryMatchupResolver = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [unitary_matchup_service_1.UnitaryMatchupService])
    ], UnitaryMatchupResolver);
    return UnitaryMatchupResolver;
}());
exports.UnitaryMatchupResolver = UnitaryMatchupResolver;


/***/ }),

/***/ "./src/app/tools/services/unitary-matchup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var http_1 = __webpack_require__("./node_modules/@angular/http/esm5/http.js");
__webpack_require__("./node_modules/rxjs/_esm5/Rx.js");
var toastr_service_1 = __webpack_require__("./src/app/shared/services/toastr.service.ts");
var webconfig_service_1 = __webpack_require__("./src/app/shared/services/webconfig.service.ts");
var webConfig = __webpack_require__("./webconfig.v3.json");
var UnitaryMatchupService = /** @class */ (function () {
    function UnitaryMatchupService(toastrSvc, http, webConfigSvc) {
        this.toastrSvc = toastrSvc;
        this.http = http;
        this.webConfigSvc = webConfigSvc;
        this.headers = new http_1.Headers({
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        });
        this.webconfig = webConfig;
        this.unitaryMCToolURL = this.webconfig.routeConfig.unitaryMatchupToolURL;
    }
    UnitaryMatchupService.prototype.getWebConfig = function () {
        var self = this;
        return this.webConfigSvc.getWebConfig().then(function (resp) {
            self.webconfig = resp;
        }).catch(function (error) {
            console.log("error message: " + error.message);
            console.log("error stack: " + error.stack);
        });
    };
    UnitaryMatchupService.prototype.getSystemMatchupList = function (params) {
        //var url = 'https://api.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.unitaryMCToolURL, params, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    UnitaryMatchupService.prototype.getTonnageList = function () {
        var body = {
            "user": "user",
            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
            "packageName": "SystemMatchup",
            "servicesName": "doGetTonnageList",
            "accountId": "goodman1",
            "params": {}
        };
        //Todo: load url endpoint from webconfig.v3
        //var url = 'https://api.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.unitaryMCToolURL, body, { headers: this.headers })
            .map(this.extractData)
            .catch(this.handleError);
    };
    UnitaryMatchupService.prototype.getEqModelList = function (params) {
        //var url = 'https://api.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.unitaryMCToolURL, params, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    UnitaryMatchupService.prototype.getEqCoilList = function (params) {
        var body = {
            "user": "",
            "tokenId": "7240794B-6D5A-4AAA-BAE4-7FE3FA07050F",
            "packageName": "SystemMatchupDaikin",
            "servicesName": "doGetEqCoilList",
            "accountId": "goodman1",
            "params": {
                "type": "ac",
                "modelnumber": "DX14SN0251B*"
            }
        };
        //var url = 'https://api.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.unitaryMCToolURL, params, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    UnitaryMatchupService.prototype.getEEPFurnaceList = function (params) {
        //var url = 'https://api.goodmanmfg.com/EBizWebServices/requestEntry';
        return this.http.post(this.unitaryMCToolURL, params, { headers: this.headers }).toPromise().then(this.extractData).catch(this.handleError);
    };
    UnitaryMatchupService.prototype.extractData = function (res) {
        var resp = res.json();
        return resp || {};
    };
    UnitaryMatchupService.prototype.handleError = function (error) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        console.error(error); // log to console instead
        this.toastrSvc.Error(error.statusText);
        return Promise.reject(error.statusText);
    };
    UnitaryMatchupService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [toastr_service_1.ToastrService, http_1.Http, webconfig_service_1.WebConfigService])
    ], UnitaryMatchupService);
    return UnitaryMatchupService;
}());
exports.UnitaryMatchupService = UnitaryMatchupService;


/***/ }),

/***/ "./src/environments/environment.prod.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.environment = {
    production: true
};


/***/ }),

/***/ "./src/main.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__("./node_modules/@angular/core/esm5/core.js");
var platform_browser_dynamic_1 = __webpack_require__("./node_modules/@angular/platform-browser-dynamic/esm5/platform-browser-dynamic.js");
var app_module_1 = __webpack_require__("./src/app/app.module.ts");
var environment_prod_1 = __webpack_require__("./src/environments/environment.prod.ts");
if (environment_prod_1.environment.production) {
    core_1.enableProdMode();
}
platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule)
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ "./webconfig.v3.json":
/***/ (function(module, exports) {

module.exports = {"routeConfig":{"libraryLink":"/Library","unitaryMatchupToolURL":"https://api.goodmanmfg.com/EBizWebServices/requestEntry","commercialSplitMatchupToolURL":"https://api.goodmanmfg.com/EBizWebServices/requestEntry","lcstURL":"http://testsecurenet.goodmanmfg.com/litconfig-DC/listDealers.html?sessionId=123","lcstURLTool":"http://testsecurenet.goodmanmfg.com/litconfig-DCTool/listDealers.html?sessionId=123","lcstURLHighEff":"https://testsecurenet.goodmanmfg.com/litconfigHE/listDealers.html?sessionId=123","lcstURLHighEffv2":"https://testsecurenet.goodmanmfg.com/LCST/listDealers.html?sessionId=123"},"testMode":{"isTesting":"false","testModeMessage":"Sorry for the inconvenience. Daikin City is under testing mode, any changes maybe lost. Please come back later. Thank you for your patience!"},"lcst":{"pilotRelease":"true","availableToBusinesses":["206680765352640513","206016535045603328"]}}

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./src/main.ts");


/***/ })

},[0]);
//# sourceMappingURL=main.bundle.js.map